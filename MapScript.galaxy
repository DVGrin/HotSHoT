//==================================================================================================
// 
// Generated Map Script
// 
// Name:   HotSHoT (Hero Battle)
// 
//==================================================================================================
include "TriggerLibs/NativeLib"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Type definitions
//--------------------------------------------------------------------------------------------------
void fn_prototype();

struct ShopItem {
    string name;
    int minerals_cost;
    int minerals_increase;
    int gas_cost;
    bool alive_only;
    int max_upgrades;
    funcref<fn_prototype> increase_function;
};

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
int[11] gv_PlayerBayul;
playergroup gv_AllPlayerGroup;
playergroup[2] gv_TeamPlayerGroup;
bool gv_SingleAccess;
int gv_TotalHeroNum;
int[11] gv_SelectedCharNum;
int[4] gv_Team1CharNum;
int[4] gv_Team2CharNum;
string[11] gv_CharSelectedImage;
text[11] gv_CharSelectedName;
bool[2] gv_CharSelectedDelay;
bool[11] gv_CharRandomBoolean;
bool[11] gv_CharSelectNothing;
int[11] gv_SelectedSpellNum1;
int[11] gv_SelectedSpellNum2;
bool[11] gv_SpellToggle;
text[11] gv_SelectedSpellName1;
text[11] gv_SelectedSpellName2;
string[11] gv_SelectedSpellImage1;
string[11] gv_SelectedSpellImage2;
text[11][2] gv_SpellToolTip;
int[11] gv_CharNoMana;
bool[11] gv_MageAssassinTrue;
string[11] gv_PlayerReadyUnit;
unit[11] gv_PlayerHero;
bool[11] gv_ReadyRandomBoolean;
bool[11] gv_ReadyClickBoolean;
int gv_ReadyBoolean;
bool[11] gv_ReadyErrorDelay;
int[11] gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880;
string[11] gv_PlayerHandlerNumber;
int gv_StrongUnitCount;
int[4] gv_MinionMonsterStronger;
int[11][4] gv_PlayerLevel;
int gv_SkillLearnWindow;
int[8] gv_SkillLearnWindowImage;
int[4] gv_SkillLearnWindowBtn;
int[4] gv_SkillLearnWindowBtnImage;
int[12] gv_SkillLearnWindowNum;
int[11] gv_SkillQLevel;
int[11] gv_SkillWLevel;
int[11] gv_SkillELevel;
int[11] gv_SkillRLevel;
int[11] gv_SkillLearnPossibleStat;
int[11] gv_SkillLearnPossibleStatR;
bool[11] gv_SkillLearnSwitchQ;
bool[11] gv_SkillLearnSwitchW;
bool[11] gv_SkillLearnSwitchE;
bool[11] gv_SkillLearnSwitchR;
bool[11][4] gv_SkillLearnSwitchKey;
int gv_StatusWindow;
int gv_StatusWindow2;
int[2] gv_StatusWindowImage;
int[5] gv_StatusWindowPageBtn;
int[30] gv_StatusWindowBtn;
int[30] gv_StatusWindowBtnImage;
int[11][30] gv_StatusWindowLabel;
int[11][30] gv_StatusWindowNum;
int[11] gv_StatusWindowPageSwitch;
bool[11] gv_StatusWindowPageDelay;
bool[11] gv_StatusWindowAddDelay;
int gv_HeroFixedBtnWindow;
int[2] gv_HeroFixedBtnWindowBtn;
int[30][12] gv_StatHowMoney;
unitgroup[11] gv_WardGroup;
int[11] gv_SkillDPSave;
int[11] gv_SkillRPSave;
int gv_Hero39Skill4Save;
int gv_Hero62Skill3Save;
unitgroup[2] gv_MonsterGalicGroup;
unitgroup[2] gv_MonsterDogGroup;
unitgroup[2] gv_MonsterScolpionGroup;
unitgroup[2] gv_MonsterBirdGroup;
unitgroup[2] gv_MonsterCowGroup;
unitgroup[4] gv_MonsterIceBugGroup;
unitgroup[2] gv_MonsterBossGroup;
bool[2] gv_MonsterKillOnlyOne;
bool[2] gv_MonsterBirdSwitch;
unit[2] gv_MonsterBirdPing1;
bool[2] gv_MonsterDogSwitch;
unit[2] gv_MonsterDogPing1;
bool[2] gv_MonsterCowSwitch;
unit[2] gv_MonsterCowPing1;
bool[2] gv_MonsterGalicSwitch;
unit[2] gv_MonsterGalicPing1;
bool[2] gv_MonsterScolpionSwitch;
unit[2] gv_MonsterScolpionPing1;
bool[4] gv_MonsterIceBugSwitch;
unit[4] gv_MonsterIceBugPing1;
bool[2] gv_MonsterIceBossSwitch;
unit[2] gv_MonsterIceBossPing1;
bool[2] gv_RegenNewTimerBirdBoolean;
int[2] gv_RegenNewTimerBirdStrong;
bool[2] gv_RegenNewTimerDogBoolean;
int[2] gv_RegenNewTimerDogStrong;
bool[2] gv_RegenNewTimerCowBoolean;
int[2] gv_RegenNewTimerCowStrong;
bool[2] gv_RegenNewTimerGalicBoolean;
int[2] gv_RegenNewTimerGalicStrong;
bool[2] gv_RegenNewTimerScolpionBoolean;
int[2] gv_RegenNewTimerScolpionStrong;
bool[4] gv_RegenNewTimerIceBugBoolean;
int[4] gv_RegenNewTimerIceBugStrong;
bool[4] gv_RegenNewTimerIceBossBoolean;
int[2] gv_RegenNewTimerIceBossStrong;
bool[11] gv_HeroDeathBoolean;
bool gv_HeroFirstKill;
bool[2] gv_HeroAllKill;
int[11][2] gv_HeroBuffIng;
int[11] gv_HeroKillPlayer;
int[11][3] gv_HeroKillMoney;
int[11][2] gv_HeroReviveCountNum;
int[11] gv_HeroNonStopKill;
int gv_HeroReviveWindow;
int[12] gv_HeroReviveWindowTime;
int[2] gv_BeforeStartCounterDialog;
int[2] gv_BeforeStartCounterDialogLabel;
int gv_BeforeStartCounterDialogImage;
int gv_BeforeStartCounterDialogNum;
int gv_BeforeStartCounterWindow;
int gv_BeforeStartCounterWindowNum;
int gv_BeforeStartCounterWindowVar;
bool gv_GameStartBoolean;
int gv_CharChooseFullDialog;
int gv_CharChooseFullDialogLabel;
int[2] gv_CharChooseFullDialogImage;
int gv_CharChooseDialogReadyBtn;
int[7] gv_CharChooseDialogLabel;
int[15] gv_CharChooseDialogImage;
int[8] gv_CharChooseDialog;
int[2] gv_CharChooseDialogNextBtn;
int[2] gv_CharChooseDialogNextImage;
int[85] gv_CharChooseWindowBtn;
int[85] gv_CharChooseWindowImage;
int[5] gv_CharChooseWindowRandomBtn;
int[5] gv_CharChooseWindowRandomImage;
int[12] gv_CharChooseWindowSpellBtn;
int[12] gv_CharChooseWindowSpellImage;
int[2] gv_GameModeBtn;
int[2] gv_GameModeLabel;
int[2] gv_GameModeVoteInt;
bool gv_GameModeVoteValue;
bool[11] gv_GameModeMyTurn;
int[11] gv_CharSelectWindowSpellImage1;
int[11] gv_CharSelectWindowSpellImage2;
int[2] gv_TeamSelectDialog;
int[14] gv_TeamSelectDialogImage;
int[4] gv_TeamSelectDialogLabel;
int[24] gv_TeamSelectDialogNemoImage;
int[12] gv_TeamSelectBtn;
int[11] gv_TeamSelectDialogPlayerHeroImage;
int[11] gv_TeamSelectDialogPlayerBorder;
int[11] gv_TeamSelectDialogPlayerSpellImage1;
int[11] gv_TeamSelectDialogPlayerSpellImage2;
int[11] gv_TeamSelectDialogPlayerName;
bool[8] gv_TeamSelectHeroNothing;
int[8] gv_TeamSelectChangeNum;
bool[2] gv_TeamSelectChangeDelay;
int[4] gv_ScoreDialog;
int[3] gv_ScoreDialogAddBtn;
int[8] gv_ScoreDialogImage;
int[4] gv_ScoreDialogImageB;
int[20] gv_ScoreDialogText;
int[6] gv_ScoreDialogTextB;
int[3] gv_PlayerProfileImage;
int[20] gv_PlayerProfileText;
int[11] gv_ScoreDialogHeroImage;
int[11] gv_ScoreDialogName;
int[11] gv_ScoreDialogLevel;
int[11][2] gv_ScoreDialogSpell;
int[11] gv_ScoreDialogTotalScore;
int[11] gv_ScoreDialogFarming;
int[11] gv_ScoreDialogReviveTime;
int[2] gv_PlayerProfileTeamKillNum;
text[11][6] gv_PlayerProfileAddToolTip;
bool gv_GameEndBoolean;
int gv_SurrenderDialog;
int[11] gv_SurrenderDialogLabel;
int[2] gv_SurrenderDialogBar;
int[2] gv_SurrenderDialogBtn;
int[4] gv_SurrenderSystemYorN;
int gv_SurrenderPlayerNum1;
int gv_SurrenderPlayerNum2;
bool[2] gv_SurrenderPossibleBoolean;
bool gv_SurrenderPassBoolean;
bool[12] gv_SurrenderBtnDelay;
bool[3] gv_PlayerOutSurrenderPossible;
int[11] gv_AllyGiveMoney;
ShopItem[30] gv_ShopItemParameters;
int[8] gv_DraftChoiceOrder;
bool[11] gv_SealBought;
int[6] gv_BannedCharNum;

void InitGlobals () {
    int init_i;
    int init_j;

    gv_AllPlayerGroup = PlayerGroupEmpty();
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_TeamPlayerGroup[init_i] = PlayerGroupEmpty();
    }
    gv_TotalHeroNum = 73;
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_CharSelectedImage[init_i] = "Assets\\InviButton.dds";
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_CharSelectedName[init_i] = StringToText("");
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_SelectedSpellName1[init_i] = StringToText("");
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_SelectedSpellName2[init_i] = StringToText("");
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_SelectedSpellImage1[init_i] = "Assets\\InviButton.dds";
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_SelectedSpellImage2[init_i] = "Assets\\InviButton.dds";
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        for (init_j = 0; init_j <= 1; init_j += 1) {
            gv_SpellToolTip[init_i][init_j] = StringToText("");
        }
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_PlayerHandlerNumber[init_i] = "";
    }
    gv_SkillLearnWindow = c_invalidDialogId;
    for (init_i = 0; init_i <= 7; init_i += 1) {
        gv_SkillLearnWindowImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        gv_SkillLearnWindowBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        gv_SkillLearnWindowBtnImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 11; init_i += 1) {
        gv_SkillLearnWindowNum[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_SkillLearnPossibleStat[init_i] = 1;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        for (init_j = 0; init_j <= 3; init_j += 1) {
            gv_SkillLearnSwitchKey[init_i][init_j] = true;
        }
    }
    gv_StatusWindow = c_invalidDialogId;
    gv_StatusWindow2 = c_invalidDialogId;
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_StatusWindowImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 4; init_i += 1) {
        gv_StatusWindowPageBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 29; init_i += 1) {
        gv_StatusWindowBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 29; init_i += 1) {
        gv_StatusWindowBtnImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        for (init_j = 0; init_j <= 29; init_j += 1) {
            gv_StatusWindowLabel[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    gv_HeroFixedBtnWindow = c_invalidDialogId;
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_HeroFixedBtnWindowBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_WardGroup[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_MonsterGalicGroup[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_MonsterDogGroup[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_MonsterScolpionGroup[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_MonsterBirdGroup[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_MonsterCowGroup[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        gv_MonsterIceBugGroup[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_MonsterBossGroup[init_i] = UnitGroupEmpty();
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_HeroDeathBoolean[init_i] = true;
    }
    gv_HeroReviveWindow = c_invalidDialogId;
    for (init_i = 0; init_i <= 11; init_i += 1) {
        gv_HeroReviveWindowTime[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_BeforeStartCounterDialog[init_i] = c_invalidDialogId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_BeforeStartCounterDialogLabel[init_i] = c_invalidDialogControlId;
    }
    gv_BeforeStartCounterDialogImage = c_invalidDialogControlId;
    gv_BeforeStartCounterDialogNum = 15;
    gv_BeforeStartCounterWindow = c_invalidDialogId;
    gv_BeforeStartCounterWindowNum = c_invalidDialogControlId;
    gv_BeforeStartCounterWindowVar = 35;
    gv_CharChooseFullDialog = c_invalidDialogId;
    gv_CharChooseFullDialogLabel = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_CharChooseFullDialogImage[init_i] = c_invalidDialogControlId;
    }
    gv_CharChooseDialogReadyBtn = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 6; init_i += 1) {
        gv_CharChooseDialogLabel[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 14; init_i += 1) {
        gv_CharChooseDialogImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 7; init_i += 1) {
        gv_CharChooseDialog[init_i] = c_invalidDialogId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_CharChooseDialogNextBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_CharChooseDialogNextImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 84; init_i += 1) {
        gv_CharChooseWindowBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 84; init_i += 1) {
        gv_CharChooseWindowImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 4; init_i += 1) {
        gv_CharChooseWindowRandomBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 4; init_i += 1) {
        gv_CharChooseWindowRandomImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 11; init_i += 1) {
        gv_CharChooseWindowSpellBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 11; init_i += 1) {
        gv_CharChooseWindowSpellImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_GameModeBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_GameModeLabel[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_CharSelectWindowSpellImage1[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_CharSelectWindowSpellImage2[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_TeamSelectDialog[init_i] = c_invalidDialogId;
    }
    for (init_i = 0; init_i <= 13; init_i += 1) {
        gv_TeamSelectDialogImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        gv_TeamSelectDialogLabel[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 23; init_i += 1) {
        gv_TeamSelectDialogNemoImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 11; init_i += 1) {
        gv_TeamSelectBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_TeamSelectDialogPlayerHeroImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_TeamSelectDialogPlayerBorder[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_TeamSelectDialogPlayerSpellImage1[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_TeamSelectDialogPlayerSpellImage2[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_TeamSelectDialogPlayerName[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        gv_ScoreDialog[init_i] = c_invalidDialogId;
    }
    for (init_i = 0; init_i <= 2; init_i += 1) {
        gv_ScoreDialogAddBtn[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 7; init_i += 1) {
        gv_ScoreDialogImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        gv_ScoreDialogImageB[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 19; init_i += 1) {
        gv_ScoreDialogText[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 5; init_i += 1) {
        gv_ScoreDialogTextB[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 2; init_i += 1) {
        gv_PlayerProfileImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 19; init_i += 1) {
        gv_PlayerProfileText[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_ScoreDialogHeroImage[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_ScoreDialogName[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_ScoreDialogLevel[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        for (init_j = 0; init_j <= 1; init_j += 1) {
            gv_ScoreDialogSpell[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_ScoreDialogTotalScore[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_ScoreDialogFarming[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_ScoreDialogReviveTime[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        for (init_j = 0; init_j <= 5; init_j += 1) {
            gv_PlayerProfileAddToolTip[init_i][init_j] = StringToText("");
        }
    }
    gv_SurrenderDialog = c_invalidDialogId;
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_SurrenderDialogLabel[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_SurrenderDialogBar[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        gv_SurrenderDialogBtn[init_i] = c_invalidDialogControlId;
    }
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_HrHeroSelect1 ();
void gf_HrHeroSelect2 ();
void gf_HrHeroSelect3 ();
void gf_HrHeroSelect4 ();
void gf_HrHeroTeamSelectSave ();
void gf_HrHeroTeamSelectSave2 ();
void gf_HrDraftSelectRandomRefreash1 ();
void gf_HrDraftSelectRandomRefreash2 ();
void gf_HrDraftSelectRandomRefreash3 ();
void gf_HrDraftSelectRandomRefreash4 ();
void gf_HrSpellMake1 ();
void gf_HrSpellMake2 ();
void gf_HrCharMake1 ();
void gf_HrCharMake2 ();
void gf_HrCharMake3 ();
void gf_HrCharMake4 ();
void gf_HrAssistSystemAdd3 ();
void gf_HrHeroLevelUpLink1 ();
void gf_HrHeroLevelUpLink2 ();
void gf_HrHeroLevelUpLink3 ();
void gf_HrHeroLevelUpLink4 ();
void gf_HrSkillLearnDialogMake ();
void gf_HrSkillLearnHeroCategoryLink ();
void gf_HrSkillLearnHeroCategoryLink2 ();
void gf_HrSkillLearnHeroCategoryLink3 ();
void gf_HrSkillLearnHeroCategoryLink4 ();
void gf_HrSkillLearnWindowOpen ();
void gf_HrSkillLearnWindowClose ();
void gf_HrSkillLearnHero1 ();
void gf_HrSkillLearnHero2 ();
void gf_HrSkillLearnHero3 ();
void gf_HrSkillLearnHero4 ();
void gf_HrSkillLearnHero5 ();
void gf_HrSkillLearnHero6 ();
void gf_HrSkillLearnHero7 ();
void gf_HrSkillLearnHero8 ();
void gf_HrSkillLearnHero9 ();
void gf_HrSkillLearnHero10 ();
void gf_HrSkillLearnHero11 ();
void gf_HrSkillLearnHero12 ();
void gf_HrSkillLearnHero13 ();
void gf_HrSkillLearnHero14 ();
void gf_HrSkillLearnHero15 ();
void gf_HrSkillLearnHero16 ();
void gf_HrSkillLearnHero17 ();
void gf_HrSkillLearnHero18 ();
void gf_HrSkillLearnHero19 ();
void gf_HrSkillLearnHero20 ();
void gf_HrSkillLearnHero21 ();
void gf_HrSkillLearnHero22 ();
void gf_HrSkillLearnHero23 ();
void gf_HrSkillLearnHero24 ();
void gf_HrSkillLearnHero25 ();
void gf_HrSkillLearnHero26 ();
void gf_HrSkillLearnHero27 ();
void gf_HrSkillLearnHero28 ();
void gf_HrSkillLearnHero29 ();
void gf_HrSkillLearnHero30 ();
void gf_HrSkillLearnHero31 ();
void gf_HrSkillLearnHero32 ();
void gf_HrSkillLearnHero33 ();
void gf_HrSkillLearnHero34 ();
void gf_HrSkillLearnHero35 ();
void gf_HrSkillLearnHero36 ();
void gf_HrSkillLearnHero37 ();
void gf_HrSkillLearnHero38 ();
void gf_HrSkillLearnHero39 ();
void gf_HrSkillLearnHero40 ();
void gf_HrSkillLearnHero41 ();
void gf_HrSkillLearnHero42 ();
void gf_HrSkillLearnHero43 ();
void gf_HrSkillLearnHero44 ();
void gf_HrSkillLearnHero45 ();
void gf_HrSkillLearnHero46 ();
void gf_HrSkillLearnHero47 ();
void gf_HrSkillLearnHero48 ();
void gf_HrSkillLearnHero49 ();
void gf_HrSkillLearnHero50 ();
void gf_HrSkillLearnHero51 ();
void gf_HrSkillLearnHero52 ();
void gf_HrSkillLearnHero53 ();
void gf_HrSkillLearnHero54 ();
void gf_HrSkillLearnHero55 ();
void gf_HrSkillLearnHero56 ();
void gf_HrSkillLearnHero57 ();
void gf_HrSkillLearnHero58 ();
void gf_HrSkillLearnHero59 ();
void gf_HrSkillLearnHero60 ();
void gf_HrSkillLearnHero61 ();
void gf_HrSkillLearnHero62 ();
void gf_HrSkillLearnHero63 ();
void gf_HrSkillLearnHero64 ();
void gf_HrSkillLearnHero65 ();
void gf_HrSkillLearnHero66 ();
void gf_HrSkillLearnHero67 ();
void gf_HrSkillLearnHero68 ();
void gf_HrSkillLearnHero69 ();
void gf_HrSkillLearnHero70 ();
void gf_HrSkillLearnHero71 ();
void gf_HrSkillLearnHero72 ();
void gf_HrSkillLearnHero73 ();
void gf_HrStatDialogMake1a ();
void gf_HrStatDialogMake1b ();
void gf_HrStatDialogMake2a ();
void gf_HrStatDialogMake2b ();
void gf_HrStatDialogMake3a2 ();
void gf_HrStatDialogMake3b2 ();
void gf_HrStatDialogMake3a ();
void gf_HrStatDialogMake3b ();
void gf_HrStatDialogMake4a ();
void gf_HrStatDialogMake4b ();
// DONE
void gf_HrStatMoneySet ();
void gf_HrStat1 ();
void gf_HrStat2 ();
void gf_HrStat3 ();
void gf_HrStat4 ();
void gf_HrStat5 ();
void gf_HrStat6 ();
void gf_HrStat7 ();
void gf_HrStat8 ();
void gf_HrStat9 ();
void gf_HrStat10 ();
void gf_HrStat11 ();
void gf_HrStat12 ();
void gf_HrStat25 ();
void gf_HrStat26 ();
void gf_HrStat27 ();
void gf_HrStat28 ();
void gf_HrStat29 ();
void gf_HrStat30 ();
void gf_HrStat13 ();
void gf_HrStat14 ();
void gf_HrStat15 ();
void gf_HrStat16 ();
void gf_HrStat17 ();
void gf_HrStat18 ();
void gf_HrStat19 ();
void gf_HrStat20 ();
void gf_HrStat21 ();
void gf_HrStat22 ();
void gf_HrStat23 ();
void gf_HrStat24 ();
void gf_HrAttackSpeedLevelIncrease ();
void gf_HrEvasionLevelIncrease ();
void gf_HrCriticalChanceLevelIncrease ();
void gf_HrCooldownReductionLevelIncrease ();
// END DONE
void gf_HrStatTooltip1 (); // Maybe seal as separate line
void gf_HrItemUseComplete ();
void gf_HrAssistSystemAdd2 ();
void gf_HrHeroBSpawnH1 ();
void gf_HrHeroBSpawnH2 ();
void gf_HrMonsterBuffPickUp1 ();
void gf_HrMonsterBuffPickUp2 ();
void gf_HrMonsterBuffPickUp4 ();
void gf_HrMonsterBuffPickUp3 ();
void gf_HrMonsterBirdRegenTimerStart ();
void gf_HrMonsterDogRegenTimerStart ();
void gf_HrMonsterCowRegenTimerStart ();
void gf_HrMonsterGarlicRegenTimerStart ();
void gf_HrMonsterScorpionRegenTimerStart ();
void gf_HrMonsterIceBugRegenTimerStart ();
void gf_HrMonsterBossRegenTimerStart ();
void gf_HrHeroReviveWindowMake ();
void gf_HrHeroSkillIncreaseEffect ();
void gf_HrHeroSkillIncreaseEffect2 ();
void gf_HrHeroAllKillMessage ();
void gf_HrHeroAddKillMessage ();
void gf_HrAssistantBonusTeam1 ();
void gf_HrAssistantBonusTeam2 ();
void gf_HrHeroBuffPut ();
void gf_HrHeroPassiveRepair ();
void gf_HrStartBeforeCounterMake ();
void gf_HrStartBeforeCounterMake2 ();
void gf_HrStartBeforeCounterMake3 ();
void gf_HrCharSelectDialogHeroBtnMake1 ();
void gf_HrCharSelectDialogHeroBtnMake2 ();
void gf_HrCharSelectDialogHeroBtnMake3 ();
void gf_HrCharSelectDialogHeroBtnMake4 ();
void gf_HrCharSelectDialogHeroBtnMake5 ();
void gf_HrCharSelectDialogSpellBtnMake1 ();
void gf_HrCharSelectDialogSpellBtnMake2 ();
void gf_HrTeamSelectDialogMake ();
void gf_HrTeamSelectDialogTeam1Make ();
void gf_HrTeamSelectDialogTeam1Make2 ();
void gf_HrScoreDialogMake ();
void gf_HrScoreDialogStatToolTip ();
void gf_HrSurrenderDialogMake ();
void gf_HrDrawGame ();
// Utility functions
int gf_ShopWindowByIndex(int shop_index);
bool gf_EligibleForBuyingHotkey(int shop_index);
bool gf_HotkeyStatIncreaseTestConditions();

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_TrStartGame;
trigger gt_Tr1FullscreenSetting;
trigger gt_Tr2GameSetting;
trigger gt_Tr3PlayerSetting;
trigger gt_Tr5AllDialogInit;
trigger gt_Tr6PlayerDialogAddorView;
trigger gt_Tr8VoteScreenView;
trigger gt_TrCharSelectDraft;
trigger gt_TrCharSelectBlind;
trigger gt_TrCharSelectPageNext;
trigger gt_TrCharSelect;
trigger gt_TrCharSelectRandom;
trigger gt_TrDraftSelectRandomRefreash1;
trigger gt_TrTeamSelectDialogHeroSwap1;
trigger gt_TrTeamSelectDialogHeroSwap2;
trigger gt_TrTeamSelectDialogHeroSwap3;
trigger gt_TrTeamSelectDialogHeroSwap4;
trigger gt_TrTeamSelectDialogHeroSwap5;
trigger gt_TrTeamSelectDialogHeroSwap6;
trigger gt_TrTeamSelectDialogHeroSwap7;
trigger gt_TrTeamSelectDialogHeroSwap8;
trigger gt_TrTeamSelectDialogHeroSwapSuggestOkTeam1;
trigger gt_TrTeamSelectDialogHeroSwapSuggestNoTeam1;
trigger gt_TrTeamSelectDialogHeroSwapSuggestOkTeam2;
trigger gt_TrTeamSelectDialogHeroSwapSuggestNoTeam2;
trigger gt_TrSpellSelect1;
trigger gt_TrSpellSelect2;
trigger gt_TrGameModeSelect;
trigger gt_TrReadyOkSelect;
trigger gt_TrBeforeSpellRandomSelect;
trigger gt_TrPlayersAllCreate;
trigger gt_TrRankDialogView;
trigger gt_TrGameStartCounter;
trigger gt_EC8AA4ED8E98EC9DB4EC8AA4EBB094EC9881EC9B85EC8B9CECA090;
trigger gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880;
trigger gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880EBB284ED8ABC;
trigger gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADEC9E91EB8F99;
trigger gt_TrHelpText;
trigger gt_TrViewHandler;
trigger gt_TrSingleCheetMoney;
trigger gt_TrSingleCheetLevel;
trigger gt_TrSingleCheetTestUnit;
trigger gt_TrSingleCheetDPup;
trigger gt_TrSingleCheetDPdown;
trigger gt_TrSingleCheetRPup;
trigger gt_TrSingleCheetRPdown;
trigger gt_Trgametipbtn;
trigger gt_TrMinionMake;
trigger gt_TrHeroLevelUp;
trigger gt_TrSkillLearnBtnClick;
trigger gt_TrSkillLearnHotKey1;
trigger gt_TrSkillLearnHotKey2;
trigger gt_TrSkillLearnHotKey3;
trigger gt_TrSkillLearnHotKey4;
trigger gt_TrStatDialogPageNext;
trigger gt_TrStatDialogPageNextHotKey;
// DONE
trigger gt_TrStatDialogStatIncrease;
trigger gt_TrStatDialogStatIncreaseHotKeyZ;
trigger gt_TrStatDialogStatIncreaseHotKeyX;
trigger gt_TrStatDialogStatIncreaseHotKeyC;
trigger gt_TrStatDialogStatIncreaseHotKeyV;
trigger gt_TrStatDialogStatIncreaseHotKeyB;
trigger gt_TrStatDialogStatIncreaseHotKeyN;
// END DONE
trigger gt_TrHealingPosionUseComplete;
trigger gt_TrManaPosionUseComplete;
trigger gt_TrWardUseComplete;
trigger gt_TrWardUseComplete2;
trigger gt_TrUnitBoodeSet;
trigger gt_TrTextTailUseCritical;
trigger gt_TrTextTailUseHyepi;
trigger gt_TrSpellTeleportUse;
trigger gt_TrPortalUse;
trigger gt_TrMissileOutDestroy;
trigger gt_TrTextTailUseHero5Skill4;
trigger gt_TrTextTailUseHero9AttackImpact;
trigger gt_TrHero10Skill4On;
trigger gt_TrHero10Skill4Off;
trigger gt_TrHero15Skill4Use;
trigger gt_TrHero19Death;
trigger gt_TrSingleCheetRPdown2;
trigger gt_TrHero32Skill2Up;
trigger gt_TrHero32Skill4On;
trigger gt_TrHero32Skill4Off;
trigger gt_TrHero39Skill4On;
trigger gt_TrHero59Skill1Use;
trigger gt_TrHero62Skill3Start;
trigger gt_TrHero62Skill3On;
trigger gt_TrHero62Skill3End;
trigger gt_TrHero66PassiveOn;
trigger gt_TrHero66PassiveOn2;
trigger gt_TrScoreDialogBtnOpen;
trigger gt_TrScoreDialogHotKeyOpen;
trigger gt_TrMinionNotStop;
trigger gt_TrMonsterMake1;
trigger gt_TrMonsterMake2;
trigger gt_TrMonsterMake3;
trigger gt_TrMonsterMake4;
trigger gt_TrMonsterMake5;
trigger gt_TrMonsterBuffPickUp;
trigger gt_TrMonsterBuffEnd1;
trigger gt_TrMonsterBuffEnd2;
trigger gt_TrMonsterBuffEnd3;
trigger gt_TrMonsterAttackBird1;
trigger gt_TrMonsterAttackBird2;
trigger gt_TrMonsterBackBird1;
trigger gt_TrMonsterBackBird2;
trigger gt_TrMonsterAttackDog1;
trigger gt_TrMonsterAttackDog2;
trigger gt_TrMonsterBackDog1;
trigger gt_TrMonsterBackDog2;
trigger gt_TrMonsterAttackCow1;
trigger gt_TrMonsterAttackCow2;
trigger gt_TrMonsterBackCow1;
trigger gt_TrMonsterBackCow2;
trigger gt_TrMonsterAttackGalic1;
trigger gt_TrMonsterAttackGalic2;
trigger gt_TrMonsterBackGalic1;
trigger gt_TrMonsterBackGalic2;
trigger gt_TrMonsterAttackScolpion1;
trigger gt_TrMonsterAttackScolpion2;
trigger gt_TrMonsterBackScolpion1;
trigger gt_TrMonsterBackScolpion2;
trigger gt_TrMonsterAttackIceBug1;
trigger gt_TrMonsterAttackIceBug2;
trigger gt_TrMonsterAttackIceBug3;
trigger gt_TrMonsterAttackIceBug4;
trigger gt_TrMonsterBackIceBug1;
trigger gt_TrMonsterBackIceBug2;
trigger gt_TrMonsterBackIceBug3;
trigger gt_TrMonsterBackIceBug4;
trigger gt_TrMonsterAttackBoss1;
trigger gt_TrMonsterAttackBoss2;
trigger gt_TrMonsterBackBoss1;
trigger gt_TrMonsterBackBoss2;
trigger gt_TrMonsterRegenTimerStart;
trigger gt_TrMonsterBirdRegen;
trigger gt_TrMonsterDogRegen;
trigger gt_TrMonsterCowRegen;
trigger gt_TrMonsterGalicRegen;
trigger gt_TrMonsterScolpionRegen;
trigger gt_TrMonsterIceBugRegen;
trigger gt_TrMonsterIceBossRegen;
trigger gt_TrBuildingDestroyMoojuck;
trigger gt_TrSinhoBuildingReviveTimerStart;
trigger gt_TrSinhoBuildingRevive;
trigger gt_TrHeroDeath;
trigger gt_TrHeroReviveStand;
trigger gt_TrNexusDestroyTeam1;
trigger gt_TrNexusDestroyTeam2;
trigger gt_TrSurrenderSignOk;
trigger gt_TrSurrenderReTimer;
trigger gt_TrSurrenderSystemStart;
trigger gt_TrSurrenderSystemStartBtn;
trigger gt_TrSurrenderOkTeam1;
trigger gt_TrSurrenderOkTeam2;
trigger gt_TrSurrenderNoTeam1;
trigger gt_TrSurrenderNoTeam2;
trigger gt_TrSurrenderOkTeam1Win;
trigger gt_TrSurrenderOkTeam2Win;
trigger gt_TrPlayerOut;

//--------------------------------------------------------------------------------------------------
// Game Parameters
//--------------------------------------------------------------------------------------------------
void SetDraftChoiceOrder() {
    gv_DraftChoiceOrder[0] = 1;
    gv_DraftChoiceOrder[1] = 5;
    gv_DraftChoiceOrder[2] = 6;
    gv_DraftChoiceOrder[3] = 2;
    gv_DraftChoiceOrder[4] = 7;
    gv_DraftChoiceOrder[5] = 3;
    gv_DraftChoiceOrder[6] = 4;
    gv_DraftChoiceOrder[7] = 8;
}

void ShopInit() {
    gv_ShopItemParameters[0].name = "AD";
    gv_ShopItemParameters[0].minerals_cost = 225;
    gv_ShopItemParameters[0].minerals_increase = 25;
    gv_ShopItemParameters[0].gas_cost = 1;
    gv_ShopItemParameters[0].alive_only = false;
    gv_ShopItemParameters[0].max_upgrades = 25;
    gv_ShopItemParameters[0].increase_function = gf_HrStat1;

    gv_ShopItemParameters[1].name = "AP";
    gv_ShopItemParameters[1].minerals_cost = 200;
    gv_ShopItemParameters[1].minerals_increase = 10;
    gv_ShopItemParameters[1].gas_cost = 1;
    gv_ShopItemParameters[1].alive_only = false;
    gv_ShopItemParameters[1].max_upgrades = 30;
    gv_ShopItemParameters[1].increase_function = gf_HrStat2;

    gv_ShopItemParameters[2].name = "DP";
    gv_ShopItemParameters[2].minerals_cost = 100;
    gv_ShopItemParameters[2].minerals_increase = 35;
    gv_ShopItemParameters[2].gas_cost = 1;
    gv_ShopItemParameters[2].alive_only = false;
    gv_ShopItemParameters[2].max_upgrades = 20;
    gv_ShopItemParameters[2].increase_function = gf_HrStat3;

    gv_ShopItemParameters[3].name = "RP";
    gv_ShopItemParameters[3].minerals_cost = 100;
    gv_ShopItemParameters[3].minerals_increase = 35;
    gv_ShopItemParameters[3].gas_cost = 1;
    gv_ShopItemParameters[3].alive_only = false;
    gv_ShopItemParameters[3].max_upgrades = 20;
    gv_ShopItemParameters[3].increase_function = gf_HrStat4;

    gv_ShopItemParameters[4].name = "HP";
    gv_ShopItemParameters[4].minerals_cost = 230;
    gv_ShopItemParameters[4].minerals_increase = 20;
    gv_ShopItemParameters[4].gas_cost = 1;
    gv_ShopItemParameters[4].alive_only = false;
    gv_ShopItemParameters[4].max_upgrades = 25;
    gv_ShopItemParameters[4].increase_function = gf_HrStat5;

    gv_ShopItemParameters[5].name = "Mana";
    gv_ShopItemParameters[5].minerals_cost = 85;
    gv_ShopItemParameters[5].minerals_increase = 15;
    gv_ShopItemParameters[5].gas_cost = 0;
    gv_ShopItemParameters[5].alive_only = false;
    gv_ShopItemParameters[5].max_upgrades = 25;
    gv_ShopItemParameters[5].increase_function = gf_HrStat6;

    gv_ShopItemParameters[6].name = "HP Regen";
    gv_ShopItemParameters[6].minerals_cost = 60;
    gv_ShopItemParameters[6].minerals_increase = 10;
    gv_ShopItemParameters[6].gas_cost = 0;
    gv_ShopItemParameters[6].alive_only = false;
    gv_ShopItemParameters[6].max_upgrades = 20;
    gv_ShopItemParameters[6].increase_function = gf_HrStat7;

    gv_ShopItemParameters[7].name = "Mana Regen";
    gv_ShopItemParameters[7].minerals_cost = 50;
    gv_ShopItemParameters[7].minerals_increase = 5;
    gv_ShopItemParameters[7].gas_cost = 0;
    gv_ShopItemParameters[7].alive_only = false;
    gv_ShopItemParameters[7].max_upgrades = 20;
    gv_ShopItemParameters[7].increase_function = gf_HrStat8;

    gv_ShopItemParameters[8].name = "Attack Speed";
    gv_ShopItemParameters[8].minerals_cost = 180;
    gv_ShopItemParameters[8].minerals_increase = 40;
    gv_ShopItemParameters[8].gas_cost = 1;
    gv_ShopItemParameters[8].alive_only = false;
    gv_ShopItemParameters[8].max_upgrades = 10;
    gv_ShopItemParameters[8].increase_function = gf_HrStat9;

    gv_ShopItemParameters[9].name = "Penetration";
    gv_ShopItemParameters[9].minerals_cost = 150;
    gv_ShopItemParameters[9].minerals_increase = 50;
    gv_ShopItemParameters[9].gas_cost = 1;
    gv_ShopItemParameters[9].alive_only = false;
    gv_ShopItemParameters[9].max_upgrades = 3;
    gv_ShopItemParameters[9].increase_function = gf_HrStat10;

    gv_ShopItemParameters[10].name = "Evasion";
    gv_ShopItemParameters[10].minerals_cost = 225;
    gv_ShopItemParameters[10].minerals_increase = 100;
    gv_ShopItemParameters[10].gas_cost = 1;
    gv_ShopItemParameters[10].alive_only = false;
    gv_ShopItemParameters[10].max_upgrades = 3;
    gv_ShopItemParameters[10].increase_function = gf_HrStat11;

    gv_ShopItemParameters[11].name = "Crit Chance";
    gv_ShopItemParameters[11].minerals_cost = 300;
    gv_ShopItemParameters[11].minerals_increase = 100;
    gv_ShopItemParameters[11].gas_cost = 1;
    gv_ShopItemParameters[11].alive_only = false;
    gv_ShopItemParameters[11].max_upgrades = 5;
    gv_ShopItemParameters[11].increase_function = gf_HrStat12;

    gv_ShopItemParameters[12].name = "Seal of Execution";
    gv_ShopItemParameters[12].minerals_cost = 400;
    gv_ShopItemParameters[12].minerals_increase = 0;
    gv_ShopItemParameters[12].gas_cost = 1;
    gv_ShopItemParameters[12].alive_only = false;
    gv_ShopItemParameters[12].max_upgrades = 1;
    gv_ShopItemParameters[12].increase_function = gf_HrStat25;

    gv_ShopItemParameters[13].name = "Seal of Curse";
    gv_ShopItemParameters[13].minerals_cost = 450;
    gv_ShopItemParameters[13].minerals_increase = 0;
    gv_ShopItemParameters[13].gas_cost = 1;
    gv_ShopItemParameters[13].alive_only = false;
    gv_ShopItemParameters[13].max_upgrades = 1;
    gv_ShopItemParameters[13].increase_function = gf_HrStat26;

    gv_ShopItemParameters[14].name = "Seal of Destruction";
    gv_ShopItemParameters[14].minerals_cost = 350;
    gv_ShopItemParameters[14].minerals_increase = 0;
    gv_ShopItemParameters[14].gas_cost = 1;
    gv_ShopItemParameters[14].alive_only = false;
    gv_ShopItemParameters[14].max_upgrades = 1;
    gv_ShopItemParameters[14].increase_function = gf_HrStat27;

    gv_ShopItemParameters[15].name = "Demon Seal";
    gv_ShopItemParameters[15].minerals_cost = 400;
    gv_ShopItemParameters[15].minerals_increase = 0;
    gv_ShopItemParameters[15].gas_cost = 1;
    gv_ShopItemParameters[15].alive_only = false;
    gv_ShopItemParameters[15].max_upgrades = 1;
    gv_ShopItemParameters[15].increase_function = gf_HrStat28;

    gv_ShopItemParameters[16].name = "Seal of Iron";
    gv_ShopItemParameters[16].minerals_cost = 350;
    gv_ShopItemParameters[16].minerals_increase = 0;
    gv_ShopItemParameters[16].gas_cost = 1;
    gv_ShopItemParameters[16].alive_only = false;
    gv_ShopItemParameters[16].max_upgrades = 1;
    gv_ShopItemParameters[16].increase_function = gf_HrStat29;

    gv_ShopItemParameters[17].name = "Seal of Resistance";
    gv_ShopItemParameters[17].minerals_cost = 325;
    gv_ShopItemParameters[17].minerals_increase = 0;
    gv_ShopItemParameters[17].gas_cost = 1;
    gv_ShopItemParameters[17].alive_only = false;
    gv_ShopItemParameters[17].max_upgrades = 1;
    gv_ShopItemParameters[17].increase_function = gf_HrStat30;

    gv_ShopItemParameters[18].name = "Life Steal";
    gv_ShopItemParameters[18].minerals_cost = 275;
    gv_ShopItemParameters[18].minerals_increase = 85;
    gv_ShopItemParameters[18].gas_cost = 1;
    gv_ShopItemParameters[18].alive_only = false;
    gv_ShopItemParameters[18].max_upgrades = 3;
    gv_ShopItemParameters[18].increase_function = gf_HrStat13;

    gv_ShopItemParameters[19].name = "Spell Vamp";
    gv_ShopItemParameters[19].minerals_cost = 325;
    gv_ShopItemParameters[19].minerals_increase = 100;
    gv_ShopItemParameters[19].gas_cost = 1;
    gv_ShopItemParameters[19].alive_only = false;
    gv_ShopItemParameters[19].max_upgrades = 3;
    gv_ShopItemParameters[19].increase_function = gf_HrStat14;

    gv_ShopItemParameters[20].name = "Cooldown Reduction";
    gv_ShopItemParameters[20].minerals_cost = 200;
    gv_ShopItemParameters[20].minerals_increase = 60;
    gv_ShopItemParameters[20].gas_cost = 1;
    gv_ShopItemParameters[20].alive_only = false;
    gv_ShopItemParameters[20].max_upgrades = 3;
    gv_ShopItemParameters[20].increase_function = gf_HrStat15;

    gv_ShopItemParameters[21].name = "Booster";
    gv_ShopItemParameters[21].minerals_cost = 200;
    gv_ShopItemParameters[21].minerals_increase = 0;
    gv_ShopItemParameters[21].gas_cost = 1;
    gv_ShopItemParameters[21].alive_only = false;
    gv_ShopItemParameters[21].max_upgrades = 1;
    gv_ShopItemParameters[21].increase_function = gf_HrStat16;

    gv_ShopItemParameters[22].name = "Spell Shield";
    gv_ShopItemParameters[22].minerals_cost = 375;
    gv_ShopItemParameters[22].minerals_increase = 0;
    gv_ShopItemParameters[22].gas_cost = 1;
    gv_ShopItemParameters[22].alive_only = false;
    gv_ShopItemParameters[22].max_upgrades = 1;
    gv_ShopItemParameters[22].increase_function = gf_HrStat17;

    gv_ShopItemParameters[23].name = "Lava of Parts";
    gv_ShopItemParameters[23].minerals_cost = 285;
    gv_ShopItemParameters[23].minerals_increase = 0;
    gv_ShopItemParameters[23].gas_cost = 1;
    gv_ShopItemParameters[23].alive_only = false;
    gv_ShopItemParameters[23].max_upgrades = 1;
    gv_ShopItemParameters[23].increase_function = gf_HrStat18;

    gv_ShopItemParameters[24].name = "HP Potion";
    gv_ShopItemParameters[24].minerals_cost = 35;
    gv_ShopItemParameters[24].minerals_increase = 0;
    gv_ShopItemParameters[24].gas_cost = 0;
    gv_ShopItemParameters[24].alive_only = true;
    gv_ShopItemParameters[24].max_upgrades = 1;
    gv_ShopItemParameters[24].increase_function = gf_HrStat19;

    gv_ShopItemParameters[25].name = "Mana Potion";
    gv_ShopItemParameters[25].minerals_cost = 30;
    gv_ShopItemParameters[25].minerals_increase = 0;
    gv_ShopItemParameters[25].gas_cost = 0;
    gv_ShopItemParameters[25].alive_only = true;
    gv_ShopItemParameters[25].max_upgrades = 1;
    gv_ShopItemParameters[25].increase_function = gf_HrStat20;

    gv_ShopItemParameters[26].name = "Ward";
    gv_ShopItemParameters[26].minerals_cost = 70;
    gv_ShopItemParameters[26].minerals_increase = 0;
    gv_ShopItemParameters[26].gas_cost = 0;
    gv_ShopItemParameters[26].alive_only = true;
    gv_ShopItemParameters[26].max_upgrades = 1;
    gv_ShopItemParameters[26].increase_function = gf_HrStat21;

    gv_ShopItemParameters[27].name = "Eye";
    gv_ShopItemParameters[27].minerals_cost = 225;
    gv_ShopItemParameters[27].minerals_increase = 0;
    gv_ShopItemParameters[27].gas_cost = 0;
    gv_ShopItemParameters[27].alive_only = true;
    gv_ShopItemParameters[27].max_upgrades = 1;
    gv_ShopItemParameters[27].increase_function = gf_HrStat22;

    gv_ShopItemParameters[28].name = "Fiery Flask";
    gv_ShopItemParameters[28].minerals_cost = 350;
    gv_ShopItemParameters[28].minerals_increase = 0;
    gv_ShopItemParameters[28].gas_cost = 0;
    gv_ShopItemParameters[28].alive_only = true;
    gv_ShopItemParameters[28].max_upgrades = 1;
    gv_ShopItemParameters[28].increase_function = gf_HrStat23;

    gv_ShopItemParameters[29].name = "Devil Elixir";
    gv_ShopItemParameters[29].minerals_cost = 400;
    gv_ShopItemParameters[29].minerals_increase = 0;
    gv_ShopItemParameters[29].gas_cost = 0;
    gv_ShopItemParameters[29].alive_only = true;
    gv_ShopItemParameters[29].max_upgrades = 1;
    gv_ShopItemParameters[29].increase_function = gf_HrStat24;
}

void InitGameParameters() {
    SetDraftChoiceOrder();
    ShopInit();
}

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
void gf_HrHeroSelect1 () {
    // Automatic Variable Declarations
    // Implementation
    if ((EventDialogControl() == gv_CharChooseWindowBtn[0])) {
        DialogControlSetEnabled(gv_CharChooseWindowBtn[0], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowBtn[0], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowImage[0], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowImage[0], PlayerGroupSingle(EventPlayer()), false);
        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-tosh.dds";
        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/C288054C");
        gv_SelectedCharNum[EventPlayer()] = 1;
    }
    else {
        if ((EventDialogControl() == gv_CharChooseWindowBtn[1])) {
            DialogControlSetEnabled(gv_CharChooseWindowBtn[1], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowBtn[1], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowImage[1], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowImage[1], PlayerGroupSingle(EventPlayer()), false);
            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-zeratul.dds";
            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/94E56AC8");
            gv_SelectedCharNum[EventPlayer()] = 2;
        }
        else {
            if ((EventDialogControl() == gv_CharChooseWindowBtn[2])) {
                DialogControlSetEnabled(gv_CharChooseWindowBtn[2], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                DialogControlSetEnabled(gv_CharChooseWindowBtn[2], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetEnabled(gv_CharChooseWindowImage[2], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                DialogControlSetEnabled(gv_CharChooseWindowImage[2], PlayerGroupSingle(EventPlayer()), false);
                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-ultralisk.dds";
                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/6EA4D943");
                gv_SelectedCharNum[EventPlayer()] = 3;
            }
            else {
                if ((EventDialogControl() == gv_CharChooseWindowBtn[3])) {
                    DialogControlSetEnabled(gv_CharChooseWindowBtn[3], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                    DialogControlSetEnabled(gv_CharChooseWindowBtn[3], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetEnabled(gv_CharChooseWindowImage[3], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                    DialogControlSetEnabled(gv_CharChooseWindowImage[3], PlayerGroupSingle(EventPlayer()), false);
                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-archon.dds";
                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/B62F8A41");
                    gv_SelectedCharNum[EventPlayer()] = 4;
                }
                else {
                    if ((EventDialogControl() == gv_CharChooseWindowBtn[4])) {
                        DialogControlSetEnabled(gv_CharChooseWindowBtn[4], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                        DialogControlSetEnabled(gv_CharChooseWindowBtn[4], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetEnabled(gv_CharChooseWindowImage[4], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                        DialogControlSetEnabled(gv_CharChooseWindowImage[4], PlayerGroupSingle(EventPlayer()), false);
                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-tassadar.dds";
                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/98871FB0");
                        gv_SelectedCharNum[EventPlayer()] = 5;
                    }
                    else {
                        if ((EventDialogControl() == gv_CharChooseWindowBtn[5])) {
                            DialogControlSetEnabled(gv_CharChooseWindowBtn[5], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseWindowBtn[5], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseWindowImage[5], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseWindowImage[5], PlayerGroupSingle(EventPlayer()), false);
                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero6.dds";
                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/16323C2D");
                            gv_SelectedCharNum[EventPlayer()] = 6;
                        }
                        else {
                            if ((EventDialogControl() == gv_CharChooseWindowBtn[6])) {
                                DialogControlSetEnabled(gv_CharChooseWindowBtn[6], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                DialogControlSetEnabled(gv_CharChooseWindowBtn[6], PlayerGroupSingle(EventPlayer()), false);
                                DialogControlSetEnabled(gv_CharChooseWindowImage[6], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                DialogControlSetEnabled(gv_CharChooseWindowImage[6], PlayerGroupSingle(EventPlayer()), false);
                                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-medic.dds";
                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/2C7640E2");
                                gv_SelectedCharNum[EventPlayer()] = 7;
                            }
                            else {
                                if ((EventDialogControl() == gv_CharChooseWindowBtn[7])) {
                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[7], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[7], PlayerGroupSingle(EventPlayer()), false);
                                    DialogControlSetEnabled(gv_CharChooseWindowImage[7], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                    DialogControlSetEnabled(gv_CharChooseWindowImage[7], PlayerGroupSingle(EventPlayer()), false);
                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-reaper.dds";
                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/1B924B46");
                                    gv_SelectedCharNum[EventPlayer()] = 8;
                                }
                                else {
                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[8])) {
                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[8], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[8], PlayerGroupSingle(EventPlayer()), false);
                                        DialogControlSetEnabled(gv_CharChooseWindowImage[8], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                        DialogControlSetEnabled(gv_CharChooseWindowImage[8], PlayerGroupSingle(EventPlayer()), false);
                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-nova.dds";
                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/2CBED175");
                                        gv_SelectedCharNum[EventPlayer()] = 9;
                                    }
                                    else {
                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[9])) {
                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[9], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[9], PlayerGroupSingle(EventPlayer()), false);
                                            DialogControlSetEnabled(gv_CharChooseWindowImage[9], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                            DialogControlSetEnabled(gv_CharChooseWindowImage[9], PlayerGroupSingle(EventPlayer()), false);
                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-baneling.dds";
                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/6B64D2D4");
                                            gv_SelectedCharNum[EventPlayer()] = 10;
                                        }
                                        else {
                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[10])) {
                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[10], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[10], PlayerGroupSingle(EventPlayer()), false);
                                                DialogControlSetEnabled(gv_CharChooseWindowImage[10], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                DialogControlSetEnabled(gv_CharChooseWindowImage[10], PlayerGroupSingle(EventPlayer()), false);
                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-kerrigan.dds";
                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/8E305690");
                                                gv_SelectedCharNum[EventPlayer()] = 11;
                                            }
                                            else {
                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[11])) {
                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[11], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[11], PlayerGroupSingle(EventPlayer()), false);
                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[11], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[11], PlayerGroupSingle(EventPlayer()), false);
                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero12.dds";
                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/91A55FB7");
                                                    gv_SelectedCharNum[EventPlayer()] = 12;
                                                }
                                                else {
                                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[12])) {
                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[12], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[12], PlayerGroupSingle(EventPlayer()), false);
                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[12], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[12], PlayerGroupSingle(EventPlayer()), false);
                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero13.dds";
                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/E2CAE691");
                                                        gv_SelectedCharNum[EventPlayer()] = 13;
                                                    }
                                                    else {
                                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[13])) {
                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[13], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[13], PlayerGroupSingle(EventPlayer()), false);
                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[13], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[13], PlayerGroupSingle(EventPlayer()), false);
                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-marauderswann.dds";
                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A984F6E1");
                                                            gv_SelectedCharNum[EventPlayer()] = 14;
                                                        }
                                                        else {
                                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[14])) {
                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[14], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[14], PlayerGroupSingle(EventPlayer()), false);
                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[14], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[14], PlayerGroupSingle(EventPlayer()), false);
                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero15.dds";
                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/8F9EECBD");
                                                                gv_SelectedCharNum[EventPlayer()] = 15;
                                                            }
                                                            else {
                                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[15])) {
                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[15], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[15], PlayerGroupSingle(EventPlayer()), false);
                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[15], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[15], PlayerGroupSingle(EventPlayer()), false);
                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-roach.dds";
                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/7D71EAA9");
                                                                    gv_SelectedCharNum[EventPlayer()] = 16;
                                                                }
                                                                else {
                                                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[16])) {
                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[16], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[16], PlayerGroupSingle(EventPlayer()), false);
                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[16], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[16], PlayerGroupSingle(EventPlayer()), false);
                                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-aberration.dds";
                                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/D8595B5D");
                                                                        gv_SelectedCharNum[EventPlayer()] = 17;
                                                                    }
                                                                    else {
                                                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[17])) {
                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[17], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[17], PlayerGroupSingle(EventPlayer()), false);
                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[17], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[17], PlayerGroupSingle(EventPlayer()), false);
                                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-xelnaga-viper.dds";
                                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/F1EF2546");
                                                                            gv_SelectedCharNum[EventPlayer()] = 18;
                                                                        }
                                                                        else {
                                                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[18])) {
                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[18], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[18], PlayerGroupSingle(EventPlayer()), false);
                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[18], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[18], PlayerGroupSingle(EventPlayer()), false);
                                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero19.dds";
                                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/0F666ECB");
                                                                                gv_SelectedCharNum[EventPlayer()] = 19;
                                                                            }
                                                                            else {
                                                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[19])) {
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[19], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[19], PlayerGroupSingle(EventPlayer()), false);
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[19], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[19], PlayerGroupSingle(EventPlayer()), false);
                                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-darktemplar.dds";
                                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A4CF4CC2");
                                                                                    gv_SelectedCharNum[EventPlayer()] = 20;
                                                                                }
                                                                                else {
                                                                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[20])) {
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[20], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[20], PlayerGroupSingle(EventPlayer()), false);
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[20], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[20], PlayerGroupSingle(EventPlayer()), false);
                                                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero21.dds";
                                                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A99152CE");
                                                                                        gv_SelectedCharNum[EventPlayer()] = 21;
                                                                                    }
                                                                                    else {
                                                                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[21])) {
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[21], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[21], PlayerGroupSingle(EventPlayer()), false);
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[21], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[21], PlayerGroupSingle(EventPlayer()), false);
                                                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-thor.dds";
                                                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/886847CC");
                                                                                            gv_SelectedCharNum[EventPlayer()] = 22;
                                                                                        }
                                                                                        else {
                                                                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[22])) {
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[22], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[22], PlayerGroupSingle(EventPlayer()), false);
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[22], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[22], PlayerGroupSingle(EventPlayer()), false);
                                                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero23.dds";
                                                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/FF6CAED4");
                                                                                                gv_SelectedCharNum[EventPlayer()] = 23;
                                                                                            }
                                                                                            else {
                                                                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[23])) {
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[23], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[23], PlayerGroupSingle(EventPlayer()), false);
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[23], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[23], PlayerGroupSingle(EventPlayer()), false);
                                                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero24.dds";
                                                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/0271FB40");
                                                                                                    gv_SelectedCharNum[EventPlayer()] = 24;
                                                                                                }
                                                                                                else {
                                                                                                    gf_HrHeroSelect2();
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrHeroSelect2 () {
    // Automatic Variable Declarations
    // Implementation
    if ((EventDialogControl() == gv_CharChooseWindowBtn[24])) {
        DialogControlSetEnabled(gv_CharChooseWindowBtn[24], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowBtn[24], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowImage[24], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowImage[24], PlayerGroupSingle(EventPlayer()), false);
        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-hydralisk.dds";
        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/E086630B");
        gv_SelectedCharNum[EventPlayer()] = 25;
    }
    else {
        if ((EventDialogControl() == gv_CharChooseWindowBtn[25])) {
            DialogControlSetEnabled(gv_CharChooseWindowBtn[25], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowBtn[25], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowImage[25], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowImage[25], PlayerGroupSingle(EventPlayer()), false);
            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-medicstetmann.dds";
            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/1C3CADC7");
            gv_SelectedCharNum[EventPlayer()] = 26;
        }
        else {
            if ((EventDialogControl() == gv_CharChooseWindowBtn[26])) {
                DialogControlSetEnabled(gv_CharChooseWindowBtn[26], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                DialogControlSetEnabled(gv_CharChooseWindowBtn[26], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetEnabled(gv_CharChooseWindowImage[26], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                DialogControlSetEnabled(gv_CharChooseWindowImage[26], PlayerGroupSingle(EventPlayer()), false);
                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-predator.dds";
                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A71D7690");
                gv_SelectedCharNum[EventPlayer()] = 27;
            }
            else {
                if ((EventDialogControl() == gv_CharChooseWindowBtn[27])) {
                    DialogControlSetEnabled(gv_CharChooseWindowBtn[27], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                    DialogControlSetEnabled(gv_CharChooseWindowBtn[27], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetEnabled(gv_CharChooseWindowImage[27], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                    DialogControlSetEnabled(gv_CharChooseWindowImage[27], PlayerGroupSingle(EventPlayer()), false);
                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-firebatmercenary.dds";
                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/78ADF72F");
                    gv_SelectedCharNum[EventPlayer()] = 28;
                }
                else {
                    if ((EventDialogControl() == gv_CharChooseWindowBtn[28])) {
                        DialogControlSetEnabled(gv_CharChooseWindowBtn[28], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                        DialogControlSetEnabled(gv_CharChooseWindowBtn[28], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetEnabled(gv_CharChooseWindowImage[28], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                        DialogControlSetEnabled(gv_CharChooseWindowImage[28], PlayerGroupSingle(EventPlayer()), false);
                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-queen.dds";
                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A14F5A20");
                        gv_SelectedCharNum[EventPlayer()] = 29;
                    }
                    else {
                        if ((EventDialogControl() == gv_CharChooseWindowBtn[29])) {
                            DialogControlSetEnabled(gv_CharChooseWindowBtn[29], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseWindowBtn[29], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseWindowImage[29], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseWindowImage[29], PlayerGroupSingle(EventPlayer()), false);
                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero30.dds";
                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A297FD3C");
                            gv_SelectedCharNum[EventPlayer()] = 30;
                        }
                        else {
                            if ((EventDialogControl() == gv_CharChooseWindowBtn[30])) {
                                DialogControlSetEnabled(gv_CharChooseWindowBtn[30], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                DialogControlSetEnabled(gv_CharChooseWindowBtn[30], PlayerGroupSingle(EventPlayer()), false);
                                DialogControlSetEnabled(gv_CharChooseWindowImage[30], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                DialogControlSetEnabled(gv_CharChooseWindowImage[30], PlayerGroupSingle(EventPlayer()), false);
                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero31.dds";
                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/8BDD7925");
                                gv_SelectedCharNum[EventPlayer()] = 31;
                            }
                            else {
                                if ((EventDialogControl() == gv_CharChooseWindowBtn[31])) {
                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[31], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[31], PlayerGroupSingle(EventPlayer()), false);
                                    DialogControlSetEnabled(gv_CharChooseWindowImage[31], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                    DialogControlSetEnabled(gv_CharChooseWindowImage[31], PlayerGroupSingle(EventPlayer()), false);
                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-zergling.dds";
                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/1736D2B2");
                                    gv_SelectedCharNum[EventPlayer()] = 32;
                                }
                                else {
                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[32])) {
                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[32], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[32], PlayerGroupSingle(EventPlayer()), false);
                                        DialogControlSetEnabled(gv_CharChooseWindowImage[32], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                        DialogControlSetEnabled(gv_CharChooseWindowImage[32], PlayerGroupSingle(EventPlayer()), false);
                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-rifleman.dds";
                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/CDE734C1");
                                        gv_SelectedCharNum[EventPlayer()] = 33;
                                    }
                                    else {
                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[33])) {
                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[33], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[33], PlayerGroupSingle(EventPlayer()), false);
                                            DialogControlSetEnabled(gv_CharChooseWindowImage[33], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                            DialogControlSetEnabled(gv_CharChooseWindowImage[33], PlayerGroupSingle(EventPlayer()), false);
                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-infestor.dds";
                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/38C5EAD6");
                                            gv_SelectedCharNum[EventPlayer()] = 34;
                                        }
                                        else {
                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[34])) {
                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[34], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[34], PlayerGroupSingle(EventPlayer()), false);
                                                DialogControlSetEnabled(gv_CharChooseWindowImage[34], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                DialogControlSetEnabled(gv_CharChooseWindowImage[34], PlayerGroupSingle(EventPlayer()), false);
                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protos-soulhunter.dds";
                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/B4CE8A7B");
                                                gv_SelectedCharNum[EventPlayer()] = 35;
                                            }
                                            else {
                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[35])) {
                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[35], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[35], PlayerGroupSingle(EventPlayer()), false);
                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[35], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[35], PlayerGroupSingle(EventPlayer()), false);
                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\LadyAlexstrasa_Btn.dds";
                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/5F9C3F9B");
                                                    gv_SelectedCharNum[EventPlayer()] = 36;
                                                }
                                                else {
                                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[36])) {
                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[36], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[36], PlayerGroupSingle(EventPlayer()), false);
                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[36], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[36], PlayerGroupSingle(EventPlayer()), false);
                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero37.dds";
                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/7DBCF431");
                                                        gv_SelectedCharNum[EventPlayer()] = 37;
                                                    }
                                                    else {
                                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[37])) {
                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[37], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[37], PlayerGroupSingle(EventPlayer()), false);
                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[37], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[37], PlayerGroupSingle(EventPlayer()), false);
                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero38.dds";
                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/02CDF0CF");
                                                            gv_SelectedCharNum[EventPlayer()] = 38;
                                                        }
                                                        else {
                                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[38])) {
                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[38], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[38], PlayerGroupSingle(EventPlayer()), false);
                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[38], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[38], PlayerGroupSingle(EventPlayer()), false);
                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-broodlord.dds";
                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/FCF7F56F");
                                                                gv_SelectedCharNum[EventPlayer()] = 39;
                                                            }
                                                            else {
                                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[39])) {
                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[39], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[39], PlayerGroupSingle(EventPlayer()), false);
                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[39], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[39], PlayerGroupSingle(EventPlayer()), false);
                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero40.dds";
                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/68D2A524");
                                                                    gv_SelectedCharNum[EventPlayer()] = 40;
                                                                }
                                                                else {
                                                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[40])) {
                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[40], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[40], PlayerGroupSingle(EventPlayer()), false);
                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[40], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[40], PlayerGroupSingle(EventPlayer()), false);
                                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-siegetank.dds";
                                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/CB418C32");
                                                                        gv_SelectedCharNum[EventPlayer()] = 41;
                                                                    }
                                                                    else {
                                                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[41])) {
                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[41], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[41], PlayerGroupSingle(EventPlayer()), false);
                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[41], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[41], PlayerGroupSingle(EventPlayer()), false);
                                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero42.dds";
                                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/C7184FD5");
                                                                            gv_SelectedCharNum[EventPlayer()] = 42;
                                                                        }
                                                                        else {
                                                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[42])) {
                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[42], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[42], PlayerGroupSingle(EventPlayer()), false);
                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[42], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[42], PlayerGroupSingle(EventPlayer()), false);
                                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero43.dds";
                                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/87BE6F8B");
                                                                                gv_SelectedCharNum[EventPlayer()] = 43;
                                                                            }
                                                                            else {
                                                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[43])) {
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[43], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[43], PlayerGroupSingle(EventPlayer()), false);
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[43], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[43], PlayerGroupSingle(EventPlayer()), false);
                                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero44.dds";
                                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/3DBECD60");
                                                                                    gv_SelectedCharNum[EventPlayer()] = 44;
                                                                                }
                                                                                else {
                                                                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[44])) {
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[44], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[44], PlayerGroupSingle(EventPlayer()), false);
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[44], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[44], PlayerGroupSingle(EventPlayer()), false);
                                                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-zealot-nerazim.dds";
                                                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/B2BD02D8");
                                                                                        gv_SelectedCharNum[EventPlayer()] = 45;
                                                                                    }
                                                                                    else {
                                                                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[45])) {
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[45], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[45], PlayerGroupSingle(EventPlayer()), false);
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[45], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[45], PlayerGroupSingle(EventPlayer()), false);
                                                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero46.dds";
                                                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/DCC7A0CD");
                                                                                            gv_SelectedCharNum[EventPlayer()] = 46;
                                                                                        }
                                                                                        else {
                                                                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[46])) {
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[46], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[46], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[46], PlayerGroupSingle(EventPlayer()), false);
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[46], PlayerGroupSingle(EventPlayer()), false);
                                                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero47.dds";
                                                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/06AE8A13");
                                                                                                gv_SelectedCharNum[EventPlayer()] = 47;
                                                                                            }
                                                                                            else {
                                                                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[47])) {
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[47], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[47], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[47], PlayerGroupSingle(EventPlayer()), false);
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[47], PlayerGroupSingle(EventPlayer()), false);
                                                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-colossus.dds";
                                                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/B66E022D");
                                                                                                    gv_SelectedCharNum[EventPlayer()] = 48;
                                                                                                }
                                                                                                else {
                                                                                                    gf_HrHeroSelect3();
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrHeroSelect3 () {
    // Automatic Variable Declarations
    // Implementation
    if ((EventDialogControl() == gv_CharChooseWindowBtn[48])) {
        DialogControlSetEnabled(gv_CharChooseWindowBtn[48], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowBtn[48], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowImage[48], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowImage[48], PlayerGroupSingle(EventPlayer()), false);
        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero49.dds";
        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/EBB23FBF");
        gv_SelectedCharNum[EventPlayer()] = 49;
    }
    else {
        if ((EventDialogControl() == gv_CharChooseWindowBtn[49])) {
            DialogControlSetEnabled(gv_CharChooseWindowBtn[49], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowBtn[49], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowImage[49], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowImage[49], PlayerGroupSingle(EventPlayer()), false);
            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero50.dds";
            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/D513332C");
            gv_SelectedCharNum[EventPlayer()] = 50;
        }
        else {
            if ((EventDialogControl() == gv_CharChooseWindowBtn[50])) {
                DialogControlSetEnabled(gv_CharChooseWindowBtn[50], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                DialogControlSetEnabled(gv_CharChooseWindowBtn[50], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetEnabled(gv_CharChooseWindowImage[50], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                DialogControlSetEnabled(gv_CharChooseWindowImage[50], PlayerGroupSingle(EventPlayer()), false);
                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero51.dds";
                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/F18A84D5");
                gv_SelectedCharNum[EventPlayer()] = 51;
            }
            else {
                if ((EventDialogControl() == gv_CharChooseWindowBtn[51])) {
                    DialogControlSetEnabled(gv_CharChooseWindowBtn[51], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                    DialogControlSetEnabled(gv_CharChooseWindowBtn[51], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetEnabled(gv_CharChooseWindowImage[51], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                    DialogControlSetEnabled(gv_CharChooseWindowImage[51], PlayerGroupSingle(EventPlayer()), false);
                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero52.dds";
                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/3258C638");
                    gv_SelectedCharNum[EventPlayer()] = 52;
                }
                else {
                    if ((EventDialogControl() == gv_CharChooseWindowBtn[52])) {
                        DialogControlSetEnabled(gv_CharChooseWindowBtn[52], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                        DialogControlSetEnabled(gv_CharChooseWindowBtn[52], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetEnabled(gv_CharChooseWindowImage[52], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                        DialogControlSetEnabled(gv_CharChooseWindowImage[52], PlayerGroupSingle(EventPlayer()), false);
                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-infestedcolonist.dds";
                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/F384DEA4");
                        gv_SelectedCharNum[EventPlayer()] = 53;
                    }
                    else {
                        if ((EventDialogControl() == gv_CharChooseWindowBtn[53])) {
                            DialogControlSetEnabled(gv_CharChooseWindowBtn[53], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseWindowBtn[53], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseWindowImage[53], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseWindowImage[53], PlayerGroupSingle(EventPlayer()), false);
                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero54.dds";
                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/BC02BDD0");
                            gv_SelectedCharNum[EventPlayer()] = 54;
                        }
                        else {
                            if ((EventDialogControl() == gv_CharChooseWindowBtn[54])) {
                                DialogControlSetEnabled(gv_CharChooseWindowBtn[54], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                DialogControlSetEnabled(gv_CharChooseWindowBtn[54], PlayerGroupSingle(EventPlayer()), false);
                                DialogControlSetEnabled(gv_CharChooseWindowImage[54], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                DialogControlSetEnabled(gv_CharChooseWindowImage[54], PlayerGroupSingle(EventPlayer()), false);
                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero55.dds";
                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/41A20DCD");
                                gv_SelectedCharNum[EventPlayer()] = 55;
                            }
                            else {
                                if ((EventDialogControl() == gv_CharChooseWindowBtn[55])) {
                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[55], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[55], PlayerGroupSingle(EventPlayer()), false);
                                    DialogControlSetEnabled(gv_CharChooseWindowImage[55], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                    DialogControlSetEnabled(gv_CharChooseWindowImage[55], PlayerGroupSingle(EventPlayer()), false);
                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero56.dds";
                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/6B49299D");
                                    gv_SelectedCharNum[EventPlayer()] = 56;
                                }
                                else {
                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[56])) {
                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[56], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[56], PlayerGroupSingle(EventPlayer()), false);
                                        DialogControlSetEnabled(gv_CharChooseWindowImage[56], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                        DialogControlSetEnabled(gv_CharChooseWindowImage[56], PlayerGroupSingle(EventPlayer()), false);
                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero57.dds";
                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/F7723747");
                                        gv_SelectedCharNum[EventPlayer()] = 57;
                                    }
                                    else {
                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[57])) {
                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[57], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[57], PlayerGroupSingle(EventPlayer()), false);
                                            DialogControlSetEnabled(gv_CharChooseWindowImage[57], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                            DialogControlSetEnabled(gv_CharChooseWindowImage[57], PlayerGroupSingle(EventPlayer()), false);
                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero58.dds";
                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/D6B3C783");
                                            gv_SelectedCharNum[EventPlayer()] = 58;
                                        }
                                        else {
                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[58])) {
                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[58], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[58], PlayerGroupSingle(EventPlayer()), false);
                                                DialogControlSetEnabled(gv_CharChooseWindowImage[58], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                DialogControlSetEnabled(gv_CharChooseWindowImage[58], PlayerGroupSingle(EventPlayer()), false);
                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero59.dds";
                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/748312A9");
                                                gv_SelectedCharNum[EventPlayer()] = 59;
                                            }
                                            else {
                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[59])) {
                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[59], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[59], PlayerGroupSingle(EventPlayer()), false);
                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[59], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[59], PlayerGroupSingle(EventPlayer()), false);
                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero60.dds";
                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/42B5C261");
                                                    gv_SelectedCharNum[EventPlayer()] = 60;
                                                }
                                                else {
                                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[60])) {
                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[60], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[60], PlayerGroupSingle(EventPlayer()), false);
                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[60], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[60], PlayerGroupSingle(EventPlayer()), false);
                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero61.dds";
                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/7C05A1CB");
                                                        gv_SelectedCharNum[EventPlayer()] = 61;
                                                    }
                                                    else {
                                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[61])) {
                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[61], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[61], PlayerGroupSingle(EventPlayer()), false);
                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[61], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[61], PlayerGroupSingle(EventPlayer()), false);
                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero62.dds";
                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/FD9B1FC8");
                                                            gv_SelectedCharNum[EventPlayer()] = 62;
                                                        }
                                                        else {
                                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[62])) {
                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[62], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[62], PlayerGroupSingle(EventPlayer()), false);
                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[62], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[62], PlayerGroupSingle(EventPlayer()), false);
                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero63.dds";
                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/E65FD848");
                                                                gv_SelectedCharNum[EventPlayer()] = 63;
                                                            }
                                                            else {
                                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[63])) {
                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[63], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[63], PlayerGroupSingle(EventPlayer()), false);
                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[63], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[63], PlayerGroupSingle(EventPlayer()), false);
                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero64.dds";
                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/0BE358E4");
                                                                    gv_SelectedCharNum[EventPlayer()] = 64;
                                                                }
                                                                else {
                                                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[64])) {
                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[64], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[64], PlayerGroupSingle(EventPlayer()), false);
                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[64], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[64], PlayerGroupSingle(EventPlayer()), false);
                                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero65.dds";
                                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/F50E9985");
                                                                        gv_SelectedCharNum[EventPlayer()] = 65;
                                                                    }
                                                                    else {
                                                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[65])) {
                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[65], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[65], PlayerGroupSingle(EventPlayer()), false);
                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[65], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[65], PlayerGroupSingle(EventPlayer()), false);
                                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero66.dds";
                                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/4DCCFF5E");
                                                                            gv_SelectedCharNum[EventPlayer()] = 66;
                                                                        }
                                                                        else {
                                                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[66])) {
                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[66], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[66], PlayerGroupSingle(EventPlayer()), false);
                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[66], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[66], PlayerGroupSingle(EventPlayer()), false);
                                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero67.dds";
                                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/76CFC2E9");
                                                                                gv_SelectedCharNum[EventPlayer()] = 67;
                                                                            }
                                                                            else {
                                                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[67])) {
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[67], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[67], PlayerGroupSingle(EventPlayer()), false);
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[67], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[67], PlayerGroupSingle(EventPlayer()), false);
                                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero68.dds";
                                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/697320AC");
                                                                                    gv_SelectedCharNum[EventPlayer()] = 68;
                                                                                }
                                                                                else {
                                                                                    if ((EventDialogControl() == gv_CharChooseWindowBtn[68])) {
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[68], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowBtn[68], PlayerGroupSingle(EventPlayer()), false);
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[68], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                        DialogControlSetEnabled(gv_CharChooseWindowImage[68], PlayerGroupSingle(EventPlayer()), false);
                                                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero69.dds";
                                                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A7558D1B");
                                                                                        gv_SelectedCharNum[EventPlayer()] = 69;
                                                                                    }
                                                                                    else {
                                                                                        if ((EventDialogControl() == gv_CharChooseWindowBtn[69])) {
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[69], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowBtn[69], PlayerGroupSingle(EventPlayer()), false);
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[69], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                            DialogControlSetEnabled(gv_CharChooseWindowImage[69], PlayerGroupSingle(EventPlayer()), false);
                                                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero70.dds";
                                                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/67F4EFB9");
                                                                                            gv_SelectedCharNum[EventPlayer()] = 70;
                                                                                        }
                                                                                        else {
                                                                                            if ((EventDialogControl() == gv_CharChooseWindowBtn[70])) {
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[70], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowBtn[70], PlayerGroupSingle(EventPlayer()), false);
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[70], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                DialogControlSetEnabled(gv_CharChooseWindowImage[70], PlayerGroupSingle(EventPlayer()), false);
                                                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero71.dds";
                                                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/CE4BE3FF");
                                                                                                gv_SelectedCharNum[EventPlayer()] = 71;
                                                                                            }
                                                                                            else {
                                                                                                if ((EventDialogControl() == gv_CharChooseWindowBtn[71])) {
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[71], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowBtn[71], PlayerGroupSingle(EventPlayer()), false);
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[71], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
                                                                                                    DialogControlSetEnabled(gv_CharChooseWindowImage[71], PlayerGroupSingle(EventPlayer()), false);
                                                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero72.dds";
                                                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/642683E0");
                                                                                                    gv_SelectedCharNum[EventPlayer()] = 72;
                                                                                                }
                                                                                                else {
                                                                                                    gf_HrHeroSelect4();
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrHeroSelect4 () {
    // Automatic Variable Declarations
    // Implementation
    if ((EventDialogControl() == gv_CharChooseWindowBtn[72])) {
        DialogControlSetEnabled(gv_CharChooseWindowBtn[72], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowBtn[72], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowImage[72], PlayerGroupAlliance(c_playerGroupAlly, EventPlayer()), false);
        DialogControlSetEnabled(gv_CharChooseWindowImage[72], PlayerGroupSingle(EventPlayer()), false);
        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero73.dds";
        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/4EAB037A");
        gv_SelectedCharNum[EventPlayer()] = 73;
    }

}

void gf_HrHeroTeamSelectSave () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80;

    // Automatic Variable Declarations
    const int autoA5091C03_ae = 8;
    const int autoA5091C03_ai = 1;
    const int auto7B985BD6_ae = 4;
    const int auto7B985BD6_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 = 5;

    // Implementation
    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
        lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 = 1;
        for ( ; ( (auto7B985BD6_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 <= auto7B985BD6_ae) || (auto7B985BD6_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 >= auto7B985BD6_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 += auto7B985BD6_ai ) {
            if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]) == c_playerStatusActive) && (gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80] != EventPlayer()) && (gv_SelectedCharNum[EventPlayer()] == gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]])) {
                gv_CharSelectedImage[EventPlayer()] = "Assets\\InviButton.dds";
                gv_CharSelectedName[EventPlayer()] = StringToText("");
                gv_SelectedCharNum[EventPlayer()] = 0;
            }

        }
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
            lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 = 5;
            for ( ; ( (autoA5091C03_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 <= autoA5091C03_ae) || (autoA5091C03_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 >= autoA5091C03_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 += autoA5091C03_ai ) {
                if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]) == c_playerStatusActive) && (gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80] != EventPlayer()) && (gv_SelectedCharNum[EventPlayer()] == gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]])) {
                    gv_CharSelectedImage[EventPlayer()] = "Assets\\InviButton.dds";
                    gv_CharSelectedName[EventPlayer()] = StringToText("");
                    gv_SelectedCharNum[EventPlayer()] = 0;
                }

            }
        }

    }
    if ((gv_SelectedCharNum[EventPlayer()] > 0)) {
        if ((EventPlayer() == gv_PlayerBayul[1])) {
            gv_Team1CharNum[0] = gv_SelectedCharNum[EventPlayer()];
        }
        else {
            if ((EventPlayer() == gv_PlayerBayul[2])) {
                gv_Team1CharNum[1] = gv_SelectedCharNum[EventPlayer()];
            }
            else {
                if ((EventPlayer() == gv_PlayerBayul[3])) {
                    gv_Team1CharNum[2] = gv_SelectedCharNum[EventPlayer()];
                }
                else {
                    if ((EventPlayer() == gv_PlayerBayul[4])) {
                        gv_Team1CharNum[3] = gv_SelectedCharNum[EventPlayer()];
                    }
                    else {
                        if ((EventPlayer() == gv_PlayerBayul[5])) {
                            gv_Team2CharNum[0] = gv_SelectedCharNum[EventPlayer()];
                        }
                        else {
                            if ((EventPlayer() == gv_PlayerBayul[6])) {
                                gv_Team2CharNum[1] = gv_SelectedCharNum[EventPlayer()];
                            }
                            else {
                                if ((EventPlayer() == gv_PlayerBayul[7])) {
                                    gv_Team2CharNum[2] = gv_SelectedCharNum[EventPlayer()];
                                }
                                else {
                                    if ((EventPlayer() == gv_PlayerBayul[8])) {
                                        gv_Team2CharNum[3] = gv_SelectedCharNum[EventPlayer()];
                                    }

                                }
                            }
                        }
                    }
                }
            }
        }
    }

}

void gf_HrHeroTeamSelectSave2 () {
    // Variable Declarations
    int lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8;

    // Automatic Variable Declarations
    int autoB6C4F1AB_ae;
    int i;
    bool banned;
    const int autoB6C4F1AB_ai = 1;

    // Variable Initialization

    // Implementation
    if ((gv_GameModeVoteValue == true)) {
        DialogControlSetEnabled(gv_CharChooseWindowBtn[(gv_SelectedCharNum[EventPlayer()] - 1)], PlayerGroupAll(), false);
        DialogControlSetEnabled(gv_CharChooseWindowImage[(gv_SelectedCharNum[EventPlayer()] - 1)], PlayerGroupAll(), false);
    }

    autoB6C4F1AB_ae = (gv_TotalHeroNum - 1);
    lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 = 0;
    for ( ; ( (autoB6C4F1AB_ai >= 0 && lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 <= autoB6C4F1AB_ae) || (autoB6C4F1AB_ai < 0 && lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 >= autoB6C4F1AB_ae) ) ; lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 += autoB6C4F1AB_ai ) {
        banned = false;
        for (i = 0; i < 6; i += 1) {
            if ((lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1) == gv_BannedCharNum[i]) {
                banned = true;
                break;
            }
        }
        if (banned == true) {
            continue;
        }
        if ((gv_GameModeVoteValue == false) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_SelectedCharNum[gv_PlayerBayul[1]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[2]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[3]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[4]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1))) {
            DialogControlSetEnabled(gv_CharChooseWindowBtn[lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8], GameAttributePlayersForTeam(1), true);
            DialogControlSetEnabled(gv_CharChooseWindowImage[lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8], GameAttributePlayersForTeam(1), true);
        }
        else {
            if ((gv_GameModeVoteValue == false) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_SelectedCharNum[gv_PlayerBayul[5]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[6]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[7]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[8]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1))) {
                DialogControlSetEnabled(gv_CharChooseWindowBtn[lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8], GameAttributePlayersForTeam(2), true);
                DialogControlSetEnabled(gv_CharChooseWindowImage[lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8], GameAttributePlayersForTeam(2), true);
            }
            else {
                if ((gv_GameModeVoteValue == true) && (gv_SelectedCharNum[gv_PlayerBayul[1]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[2]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[3]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[4]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[5]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[6]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[7]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1)) && (gv_SelectedCharNum[gv_PlayerBayul[8]] != (lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8 + 1))) {
                    DialogControlSetEnabled(gv_CharChooseWindowBtn[lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8], PlayerGroupAll(), true);
                    DialogControlSetEnabled(gv_CharChooseWindowImage[lv_eC84A4ECA095ECBA90EBA6ADED84B0EBB288ED98B8], PlayerGroupAll(), true);
                }

            }
        }
    }
}

void gf_HrDraftSelectRandomRefreash1 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 1)) {
        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-tosh.dds";
        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/95E640E3");
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 2)) {
            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-zeratul.dds";
            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/BA1479CA");
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 3)) {
                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-ultralisk.dds";
                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/E614AC7E");
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 4)) {
                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-archon.dds";
                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/97D1089E");
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 5)) {
                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-tassadar.dds";
                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/19E9A1F6");
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 6)) {
                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero6.dds";
                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/C4C24AC1");
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 7)) {
                                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-medic.dds";
                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A4EFE2D0");
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 8)) {
                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-reaper.dds";
                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A62933E6");
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 9)) {
                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-nova.dds";
                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/4B5C7A59");
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 10)) {
                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-baneling.dds";
                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/E6AFE12E");
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 11)) {
                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-kerrigan.dds";
                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/D2BE11C3");
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 12)) {
                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero12.dds";
                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/8CF10A8E");
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 13)) {
                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero13.dds";
                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/810539DD");
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[EventPlayer()] == 14)) {
                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-marauderswann.dds";
                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/9AA195E0");
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[EventPlayer()] == 15)) {
                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero15.dds";
                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/83590F5D");
                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[EventPlayer()] == 16)) {
                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-roach.dds";
                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/F59C5889");
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 17)) {
                                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-aberration.dds";
                                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/366EEB8C");
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 18)) {
                                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-xelnaga-viper.dds";
                                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/0F2CC604");
                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 19)) {
                                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero19.dds";
                                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/2ACB33D5");
                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 20)) {
                                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-darktemplar.dds";
                                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/61205D0E");
                                                                                }

                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrDraftSelectRandomRefreash2 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 21)) {
        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero21.dds";
        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/60E3B1D9");
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 22)) {
            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-thor.dds";
            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/227E3803");
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 23)) {
                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero23.dds";
                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/8DA40593");
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 24)) {
                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero24.dds";
                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/F51AA851");
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 25)) {
                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-hydralisk.dds";
                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/CD608FAA");
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 26)) {
                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-medicstetmann.dds";
                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/B63AD9F6");
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 27)) {
                                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-predator.dds";
                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/7446F680");
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 28)) {
                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-firebatmercenary.dds";
                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/2A111BCF");
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 29)) {
                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-queen.dds";
                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/C8088727");
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 30)) {
                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero30.dds";
                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/BBE7A9CF");
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 31)) {
                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero31.dds";
                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/B228C659");
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 32)) {
                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-zergling.dds";
                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/40E6BD56");
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 33)) {
                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-rifleman.dds";
                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/DA3CDDCE");
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[EventPlayer()] == 34)) {
                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-infestor.dds";
                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/7F359E50");
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[EventPlayer()] == 35)) {
                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protos-soulhunter.dds";
                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/53466200");
                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[EventPlayer()] == 36)) {
                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\LadyAlexstrasa_Btn.dds";
                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/13A896E1");
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 37)) {
                                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero37.dds";
                                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/9BA3AC10");
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 38)) {
                                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero38.dds";
                                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/FE239205");
                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 39)) {
                                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-broodlord.dds";
                                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/160CEE5A");
                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 40)) {
                                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero40.dds";
                                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/6B3E6630");
                                                                                }

                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrDraftSelectRandomRefreash3 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 41)) {
        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-terran-siegetank.dds";
        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/F20703D2");
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 42)) {
            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero42.dds";
            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/0E7F8D9B");
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 43)) {
                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero43.dds";
                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/C29104B5");
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 44)) {
                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero44.dds";
                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/AAC37739");
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 45)) {
                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-zealot-nerazim.dds";
                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/54DC5942");
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 46)) {
                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero46.dds";
                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/FEE877FE");
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 47)) {
                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero47.dds";
                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/37F61361");
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 48)) {
                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-protoss-colossus.dds";
                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/BB73B955");
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 49)) {
                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero49.dds";
                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A5F22DDA");
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 50)) {
                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero50.dds";
                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/11792220");
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 51)) {
                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero51.dds";
                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/DA3EFB71");
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 52)) {
                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero52.dds";
                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/F0FA5340");
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 53)) {
                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-unit-zerg-infestedcolonist.dds";
                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/10A1EA01");
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[EventPlayer()] == 54)) {
                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero54.dds";
                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/1B35ECAE");
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[EventPlayer()] == 55)) {
                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero55.dds";
                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/4B219FBE");
                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[EventPlayer()] == 56)) {
                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero56.dds";
                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/8686E7C8");
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 57)) {
                                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero57.dds";
                                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/EDE0336B");
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 58)) {
                                                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero58.dds";
                                                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/86A9B229");
                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 59)) {
                                                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero59.dds";
                                                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/2361BB3D");
                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 60)) {
                                                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero60.dds";
                                                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/D7144973");
                                                                                }

                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrDraftSelectRandomRefreash4 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 61)) {
        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero61.dds";
        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/7FA0896C");
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 62)) {
            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero62.dds";
            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/43C8C82C");
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 63)) {
                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero63.dds";
                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/4DD9ECC0");
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 64)) {
                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero64.dds";
                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/4450594A");
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 65)) {
                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero65.dds";
                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/08CA739B");
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 66)) {
                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero66.dds";
                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/0EB75D56");
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 67)) {
                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero67.dds";
                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/008A28E8");
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 68)) {
                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero68.dds";
                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/78A72E37");
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 69)) {
                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero69.dds";
                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/689877C3");
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 70)) {
                                            gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero70.dds";
                                            gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/B807D10D");
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 71)) {
                                                gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero71.dds";
                                                gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/EE2E8445");
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 72)) {
                                                    gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero72.dds";
                                                    gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/A43801AB");
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 73)) {
                                                        gv_CharSelectedImage[EventPlayer()] = "Assets\\AddIcon\\btn-hero73.dds";
                                                        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/C70B6A33");
                                                    }

                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrSpellMake1 () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int autoDE5D84D8_ae = 8;
    const int autoDE5D84D8_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (autoDE5D84D8_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= autoDE5D84D8_ae) || (autoDE5D84D8_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= autoDE5D84D8_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += autoDE5D84D8_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive)) {
            if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 1)) {
                UnitBehaviorAddPlayer(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], "SpellDong", gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], 1);
                libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp", 1);
                TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp4", 1);
                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                    gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[0], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                }

            }
            else {
                if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 2)) {
                    libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp2", 1);
                    TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp24", 1);
                    UnitSetPropertyFixed(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], c_unitPropLifeMax, (UnitGetPropertyFixed(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], c_unitPropLifeMax, c_unitPropCurrent) * 1.3));
                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                        gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[1], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                    }

                }
                else {
                    if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 3)) {
                        libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp22", 1);
                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                            gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[2], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                        }

                    }
                    else {
                        if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 4)) {
                            libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp222", 1);
                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[3], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                            }

                        }
                        else {
                            if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 5)) {
                                libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp2222", 1);
                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                    gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[4], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                }

                            }
                            else {
                                if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 6)) {
                                    libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp22222", 1);
                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                        gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[5], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                    }

                                }
                                else {
                                    if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 7)) {
                                        libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp22223", 1);
                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                            gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[6], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                        }

                                    }
                                    else {
                                        if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 8)) {
                                            if ((gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 0)) {
                                                UnitBehaviorAddPlayer(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], "SpellDong5", gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], 1);
                                            }

                                            libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp223", 1);
                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[7], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                            }

                                        }
                                        else {
                                            if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 9)) {
                                                libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp222232", 1);
                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                    gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[8], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                                }

                                            }
                                            else {
                                                if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 10)) {
                                                    libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp222233", 1);
                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                        gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[9], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                                    }

                                                }
                                                else {
                                                    if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 11)) {
                                                        libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp2222332", 1);
                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                            gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[10], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                                        }

                                                    }
                                                    else {
                                                        if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 12)) {
                                                            libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp22223322", 1);
                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[11], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                                            }

                                                        }

                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

    }
}

void gf_HrSpellMake2 () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int autoAFFC0A42_ae = 8;
    const int autoAFFC0A42_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (autoAFFC0A42_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= autoAFFC0A42_ae) || (autoAFFC0A42_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= autoAFFC0A42_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += autoAFFC0A42_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive)) {
            if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 1)) {
                UnitBehaviorAddPlayer(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], "SpellDong", gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], 1);
                libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp", 2);
                TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp4", 1);
                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                    gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[0], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                }

            }
            else {
                if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 2)) {
                    libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp2", 2);
                    TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp24", 1);
                    UnitSetPropertyFixed(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], c_unitPropLifeMax, (UnitGetPropertyFixed(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], c_unitPropLifeMax, c_unitPropCurrent) * 1.3));
                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                        gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[1], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                    }

                }
                else {
                    if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 3)) {
                        libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp22", 2);
                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                            gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[2], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                        }

                    }
                    else {
                        if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 4)) {
                            libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp222", 2);
                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[3], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                            }

                        }
                        else {
                            if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 5)) {
                                libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp2222", 2);
                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                    gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[4], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                }

                            }
                            else {
                                if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 6)) {
                                    libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp22222", 2);
                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                        gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[5], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                    }

                                }
                                else {
                                    if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 7)) {
                                        libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp22223", 2);
                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                            gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[6], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                        }

                                    }
                                    else {
                                        if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 8)) {
                                            if ((gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 0)) {
                                                UnitBehaviorAddPlayer(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], "SpellDong5", gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], 1);
                                            }

                                            libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp223", 2);
                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[7], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                            }

                                        }
                                        else {
                                            if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 9)) {
                                                libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp222232", 2);
                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                    gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[8], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                                }

                                            }
                                            else {
                                                if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 10)) {
                                                    libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp222233", 2);
                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                        gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[9], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                                    }

                                                }
                                                else {
                                                    if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 11)) {
                                                        libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp2222332", 2);
                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                            gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[10], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                                        }

                                                    }
                                                    else {
                                                        if ((gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 12)) {
                                                            libNtve_gf_SetUpgradeLevelForPlayer(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp22223322", 2);
                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[11], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]);
                                                            }

                                                        }

                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

    }
}

void gf_HrCharMake1 () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int autoE8A17486_ae = 8;
    const int autoE8A17486_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (autoE8A17486_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= autoE8A17486_ae) || (autoE8A17486_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= autoE8A17486_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += autoE8A17486_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive) && ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] >= 1) && (gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] <= 24))) {
            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 1)) {
                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Tosh";
                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/66518BEB");
                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-tosh.dds";
                }

            }
            else {
                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 2)) {
                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Zeratul";
                    gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 2;
                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/348FB89C");
                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-protoss-zeratul.dds";
                    }

                }
                else {
                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 3)) {
                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Ultralisk";
                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/236EE5F1");
                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-ultralisk.dds";
                        }

                    }
                    else {
                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 4)) {
                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Archon";
                            gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/4BEC7649");
                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-protoss-archon.dds";
                            }

                        }
                        else {
                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 5)) {
                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero5";
                                gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 2;
                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/17CCBFBB");
                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-protoss-tassadar.dds";
                                }

                                TriggerEnable(gt_TrTextTailUseHero5Skill4, true);
                            }
                            else {
                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 6)) {
                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero6";
                                    TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp222233322234", 1);
                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/5C10FE14");
                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero6.dds";
                                    }

                                }
                                else {
                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 7)) {
                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero7";
                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/6F90726C");
                                            gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-medic.dds";
                                        }

                                    }
                                    else {
                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 8)) {
                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero8";
                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/562DDE9C");
                                                gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-reaper.dds";
                                            }

                                        }
                                        else {
                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 9)) {
                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero9";
                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/5CE66447");
                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-nova.dds";
                                                }

                                                TriggerEnable(gt_TrTextTailUseHero9AttackImpact, true);
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 10)) {
                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero10";
                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/B10E8BFD");
                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-baneling.dds";
                                                    }

                                                    TriggerEnable(gt_TrHero10Skill4On, true);
                                                    TriggerEnable(gt_TrHero10Skill4Off, true);
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 11)) {
                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero11";
                                                        gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/EAA46C46");
                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-kerrigan.dds";
                                                        }

                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 12)) {
                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero12";
                                                            gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 1;
                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/CE4C02FA");
                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero12.dds";
                                                            }

                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 13)) {
                                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero13";
                                                                gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/99D4E8B5");
                                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero13.dds";
                                                                }

                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 14)) {
                                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero14";
                                                                    TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "SpellUp2222333222342", 1);
                                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/206B55A6");
                                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-marauderswann.dds";
                                                                    }

                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 15)) {
                                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero15";
                                                                        gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/103861F8");
                                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero15.dds";
                                                                        }

                                                                        TriggerEnable(gt_TrHero15Skill4Use, true);
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 16)) {
                                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero16";
                                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/2F0FBECA");
                                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-roach.dds";
                                                                            }

                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 17)) {
                                                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero17";
                                                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/DCD9B61B");
                                                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-aberration.dds";
                                                                                }

                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 18)) {
                                                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero18";
                                                                                    gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 2;
                                                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/81E6A9DA");
                                                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-xelnaga-viper.dds";
                                                                                    }

                                                                                }
                                                                                else {
                                                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 19)) {
                                                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero19";
                                                                                        gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/FDE28F66");
                                                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero19.dds";
                                                                                        }

                                                                                        TriggerEnable(gt_TrHero19Death, true);
                                                                                    }
                                                                                    else {
                                                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 20)) {
                                                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero20";
                                                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/38A61BC4");
                                                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-protoss-darktemplar.dds";
                                                                                            }

                                                                                        }
                                                                                        else {
                                                                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 21)) {
                                                                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero21";
                                                                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/BA69C4A8");
                                                                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero21.dds";
                                                                                                }

                                                                                            }
                                                                                            else {
                                                                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 22)) {
                                                                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero22";
                                                                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/CEF60FEC");
                                                                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-thor.dds";
                                                                                                    }

                                                                                                }
                                                                                                else {
                                                                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 23)) {
                                                                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero23";
                                                                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/CD036D58");
                                                                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero23.dds";
                                                                                                        }

                                                                                                    }
                                                                                                    else {
                                                                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 24)) {
                                                                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero24";
                                                                                                            gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/3605261D");
                                                                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero24.dds";
                                                                                                            }

                                                                                                        }

                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

    }
}

void gf_HrCharMake2 () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int autoA7BF39AC_ae = 8;
    const int autoA7BF39AC_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (autoA7BF39AC_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= autoA7BF39AC_ae) || (autoA7BF39AC_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= autoA7BF39AC_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += autoA7BF39AC_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive) && ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] >= 25) && (gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] <= 48))) {
            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 25)) {
                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero25";
                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/854FD8A2");
                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-hydralisk.dds";
                }

            }
            else {
                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 26)) {
                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero26";
                    gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/3A14CCFA");
                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-medicstetmann.dds";
                    }

                }
                else {
                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 27)) {
                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero27";
                        gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 1;
                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/66CC77E3");
                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-predator.dds";
                        }

                    }
                    else {
                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 28)) {
                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero28";
                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/D5A2362F");
                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-firebatmercenary.dds";
                            }

                        }
                        else {
                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 29)) {
                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero29";
                                gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/AD2CFA93");
                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-queen.dds";
                                }

                            }
                            else {
                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 30)) {
                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero30";
                                    gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/4534815E");
                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero30.dds";
                                    }

                                }
                                else {
                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 31)) {
                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero31";
                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/5FF2E35B");
                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero31.dds";
                                        }

                                    }
                                    else {
                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 32)) {
                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero32";
                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/4AC7CCB9");
                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-zergling.dds";
                                            }

                                            TriggerEnable(gt_TrHero32Skill2Up, true);
                                            TriggerEnable(gt_TrHero32Skill4On, true);
                                            TriggerEnable(gt_TrHero32Skill4Off, true);
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 33)) {
                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero33";
                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/E5B2A90C");
                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-rifleman.dds";
                                                }

                                            }
                                            else {
                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 34)) {
                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero34";
                                                    gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/827A053B");
                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-infestor.dds";
                                                    }

                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 35)) {
                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero35";
                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/BCE73537");
                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-protos-soulhunter.dds";
                                                        }

                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 36)) {
                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero36";
                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/A67C4EDB");
                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\LadyAlexstrasa_Btn.dds";
                                                            }

                                                            TriggerEnable(gt_TrSingleCheetRPdown2, true);
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 37)) {
                                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero37";
                                                                gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/91B24EA1");
                                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero37.dds";
                                                                }

                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 38)) {
                                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero38";
                                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/AF20B339");
                                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero38.dds";
                                                                    }

                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 39)) {
                                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero39";
                                                                        gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/C88E439F");
                                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-broodlord.dds";
                                                                        }

                                                                        TriggerEnable(gt_TrHero39Skill4On, true);
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 40)) {
                                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero40";
                                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/0028B92D");
                                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero40.dds";
                                                                            }

                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 41)) {
                                                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero41";
                                                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/0D5AF1AF");
                                                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-terran-siegetank.dds";
                                                                                }

                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 42)) {
                                                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero42";
                                                                                    gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                                    gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 2;
                                                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/B2541477");
                                                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero42.dds";
                                                                                    }

                                                                                }
                                                                                else {
                                                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 43)) {
                                                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero43";
                                                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/FB4A3C98");
                                                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero43.dds";
                                                                                        }

                                                                                    }
                                                                                    else {
                                                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 44)) {
                                                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero44";
                                                                                            gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/0C8E771D");
                                                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero44.dds";
                                                                                            }

                                                                                        }
                                                                                        else {
                                                                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 45)) {
                                                                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero45";
                                                                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/C484B204");
                                                                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-protoss-zealot-nerazim.dds";
                                                                                                }

                                                                                            }
                                                                                            else {
                                                                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 46)) {
                                                                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero46";
                                                                                                    gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/ADC0D235");
                                                                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero46.dds";
                                                                                                    }

                                                                                                }
                                                                                                else {
                                                                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 47)) {
                                                                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero47";
                                                                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/0A0254E3");
                                                                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero47.dds";
                                                                                                        }

                                                                                                    }
                                                                                                    else {
                                                                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 48)) {
                                                                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero48";
                                                                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/106EFAA6");
                                                                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-protoss-colossus.dds";
                                                                                                            }

                                                                                                        }

                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

    }
}

void gf_HrCharMake3 () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int auto52ED7886_ae = 8;
    const int auto52ED7886_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (auto52ED7886_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= auto52ED7886_ae) || (auto52ED7886_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= auto52ED7886_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += auto52ED7886_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive) && ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] >= 49) && (gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] <= 72))) {
            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 49)) {
                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero49";
                gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 1;
                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/EAAA8BCF");
                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero49.dds";
                }

            }
            else {
                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 50)) {
                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero50";
                    gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/E9FD22C6");
                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero50.dds";
                    }

                }
                else {
                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 51)) {
                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero51";
                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/BDDF50CD");
                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero51.dds";
                        }

                    }
                    else {
                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 52)) {
                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero52";
                            gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/CC177A31");
                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero52.dds";
                            }

                        }
                        else {
                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 53)) {
                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero53";
                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/B80260FA");
                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\Textures\\btn-unit-zerg-infestedcolonist.dds";
                                }

                            }
                            else {
                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 54)) {
                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero54";
                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/B611A8A9");
                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero54.dds";
                                    }

                                }
                                else {
                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 55)) {
                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero55";
                                        gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/B7DD71BF");
                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero55.dds";
                                        }

                                    }
                                    else {
                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 56)) {
                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero56";
                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/F87B4AFA");
                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero56.dds";
                                            }

                                        }
                                        else {
                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 57)) {
                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero57";
                                                gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/27C10E34");
                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero57.dds";
                                                }

                                            }
                                            else {
                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 58)) {
                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero58";
                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/97ED007B");
                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero58.dds";
                                                    }

                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 59)) {
                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero59";
                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/8A306380");
                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero59.dds";
                                                        }

                                                        TriggerEnable(gt_TrHero59Skill1Use, true);
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 60)) {
                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero60";
                                                            gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 3;
                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/356DCDEC");
                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero60.dds";
                                                            }

                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 61)) {
                                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero61";
                                                                gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/C2511753");
                                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero61.dds";
                                                                }

                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 62)) {
                                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero62";
                                                                    gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/17EAA0CA");
                                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero62.dds";
                                                                    }

                                                                    TriggerEnable(gt_TrHero62Skill3Start, true);
                                                                    TriggerEnable(gt_TrHero62Skill3End, true);
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 63)) {
                                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero63";
                                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/C774509A");
                                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero63.dds";
                                                                        }

                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 64)) {
                                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero64";
                                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/75A3C705");
                                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero64.dds";
                                                                            }

                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 65)) {
                                                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero65";
                                                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/64F63D49");
                                                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero65.dds";
                                                                                }

                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 66)) {
                                                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero66";
                                                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/D7D256FD");
                                                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero66.dds";
                                                                                    }

                                                                                    TriggerEnable(gt_TrHero66PassiveOn, true);
                                                                                }
                                                                                else {
                                                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 67)) {
                                                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero67";
                                                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/DCDE3A35");
                                                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero67.dds";
                                                                                        }

                                                                                    }
                                                                                    else {
                                                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 68)) {
                                                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero68";
                                                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/14924507");
                                                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero68.dds";
                                                                                            }

                                                                                        }
                                                                                        else {
                                                                                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 69)) {
                                                                                                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero69";
                                                                                                gv_MageAssassinTrue[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = true;
                                                                                                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/246B157B");
                                                                                                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero69.dds";
                                                                                                }

                                                                                            }
                                                                                            else {
                                                                                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 70)) {
                                                                                                    gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero70";
                                                                                                    if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                        gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/FD165A5D");
                                                                                                        gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero70.dds";
                                                                                                    }

                                                                                                }
                                                                                                else {
                                                                                                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 71)) {
                                                                                                        gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero71";
                                                                                                        if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                            gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/FE34BD60");
                                                                                                            gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero71.dds";
                                                                                                        }

                                                                                                    }
                                                                                                    else {
                                                                                                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 72)) {
                                                                                                            gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero72";
                                                                                                            gv_CharNoMana[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 2;
                                                                                                            if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                                                                                                                gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/97DE05EF");
                                                                                                                gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero72.dds";
                                                                                                            }

                                                                                                            TriggerEnable(gt_TrHero66PassiveOn2, true);
                                                                                                        }

                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

    }
}

void gf_HrCharMake4 () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int autoCA58B850_ae = 8;
    const int autoCA58B850_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (autoCA58B850_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= autoCA58B850_ae) || (autoCA58B850_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= autoCA58B850_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += autoCA58B850_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive) && ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] >= 73) && (gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] <= 96))) {
            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == 73)) {
                gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Hero73";
                PlayerCreateEffectPoint(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], "Hero73Skill1G", PointFromId(578));
                if ((gv_ReadyClickBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] == false)) {
                    gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = StringExternal("Param/Value/6952E7F9");
                    gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = "Assets\\AddIcon\\btn-hero73.dds";
                }

            }

        }

    }
}

void gf_HrAssistSystemAdd3 () {
    // Variable Declarations
    int lv_eC84A4ECA095ECA095EC8898;

    // Automatic Variable Declarations
    const int autoB7FEB2D3_ae = 14;
    const int autoB7FEB2D3_ai = 1;
    const int auto7CE88E88_ae = 84;
    const int auto7CE88E88_ai = 1;
    const int autoDEA0CF90_ae = 4;
    const int autoDEA0CF90_ai = 1;
    const int auto9C1DA608_ae = 11;
    const int auto9C1DA608_ai = 1;
    const int auto9A65E712_ae = 13;
    const int auto9A65E712_ai = 1;
    const int auto288AB2CD_ae = 3;
    const int auto288AB2CD_ai = 1;
    const int autoCDDB3A86_ae = 23;
    const int autoCDDB3A86_ai = 1;
    const int auto31C92194_ae = 11;
    const int auto31C92194_ai = 1;
    const int auto73608C52_ae = 10;
    const int auto73608C52_ai = 1;

    // Variable Initialization

    // Implementation
    DialogDestroy(gv_BeforeStartCounterDialog[0]);
    DialogDestroy(gv_BeforeStartCounterDialog[1]);
    DialogDestroy(gv_CharChooseFullDialog);
    DialogDestroy(gv_CharChooseDialog[0]);
    DialogDestroy(gv_CharChooseDialog[1]);
    DialogDestroy(gv_CharChooseDialog[2]);
    DialogDestroy(gv_CharChooseDialog[3]);
    DialogDestroy(gv_CharChooseDialog[4]);
    DialogDestroy(gv_CharChooseDialog[5]);
    DialogDestroy(gv_CharChooseDialog[6]);
    DialogDestroy(gv_CharChooseDialog[7]);
    DialogDestroy(gv_TeamSelectDialog[0]);
    DialogDestroy(gv_TeamSelectDialog[1]);
    gv_BeforeStartCounterDialog[0] = c_invalidDialogId;
    gv_BeforeStartCounterDialog[1] = c_invalidDialogId;
    gv_BeforeStartCounterDialogLabel[0] = c_invalidDialogControlId;
    gv_BeforeStartCounterDialogLabel[1] = c_invalidDialogControlId;
    gv_BeforeStartCounterDialogImage = c_invalidDialogControlId;
    gv_BeforeStartCounterDialogNum = 0;
    gv_CharChooseFullDialog = c_invalidDialogId;
    gv_CharChooseFullDialogImage[0] = c_invalidDialogControlId;
    gv_CharChooseFullDialogImage[1] = c_invalidDialogControlId;
    gv_CharChooseFullDialogLabel = c_invalidDialogControlId;
    gv_CharChooseDialog[0] = c_invalidDialogId;
    gv_CharChooseDialog[1] = c_invalidDialogId;
    gv_CharChooseDialog[2] = c_invalidDialogId;
    gv_CharChooseDialog[3] = c_invalidDialogId;
    gv_CharChooseDialog[4] = c_invalidDialogId;
    gv_CharChooseDialog[5] = c_invalidDialogId;
    gv_CharChooseDialog[6] = c_invalidDialogId;
    gv_CharChooseDialog[7] = c_invalidDialogId;
    gv_CharChooseDialogReadyBtn = c_invalidDialogControlId;
    gv_CharChooseDialogLabel[0] = c_invalidDialogControlId;
    gv_CharChooseDialogLabel[1] = c_invalidDialogControlId;
    gv_CharChooseDialogLabel[2] = c_invalidDialogControlId;
    gv_CharChooseDialogLabel[3] = c_invalidDialogControlId;
    gv_CharChooseDialogLabel[4] = c_invalidDialogControlId;
    gv_CharChooseDialogLabel[5] = c_invalidDialogControlId;
    gv_CharChooseDialogLabel[6] = c_invalidDialogControlId;
    lv_eC84A4ECA095ECA095EC8898 = 0;
    for ( ; ( (autoB7FEB2D3_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= autoB7FEB2D3_ae) || (autoB7FEB2D3_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= autoB7FEB2D3_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += autoB7FEB2D3_ai ) {
        gv_CharChooseDialogImage[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
    }
    lv_eC84A4ECA095ECA095EC8898 = 0;
    gv_CharChooseDialogNextBtn[0] = c_invalidDialogControlId;
    gv_CharChooseDialogNextBtn[1] = c_invalidDialogControlId;
    gv_CharChooseDialogNextImage[0] = c_invalidDialogControlId;
    gv_CharChooseDialogNextImage[1] = c_invalidDialogControlId;
    lv_eC84A4ECA095ECA095EC8898 = 0;
    for ( ; ( (auto7CE88E88_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= auto7CE88E88_ae) || (auto7CE88E88_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= auto7CE88E88_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += auto7CE88E88_ai ) {
        gv_CharChooseWindowBtn[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
        gv_CharChooseWindowImage[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
    }
    lv_eC84A4ECA095ECA095EC8898 = 0;
    lv_eC84A4ECA095ECA095EC8898 = 0;
    for ( ; ( (autoDEA0CF90_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= autoDEA0CF90_ae) || (autoDEA0CF90_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= autoDEA0CF90_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += autoDEA0CF90_ai ) {
        gv_CharChooseWindowRandomBtn[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
        gv_CharChooseWindowRandomImage[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
    }
    lv_eC84A4ECA095ECA095EC8898 = 0;
    lv_eC84A4ECA095ECA095EC8898 = 0;
    for ( ; ( (auto9C1DA608_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= auto9C1DA608_ae) || (auto9C1DA608_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= auto9C1DA608_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += auto9C1DA608_ai ) {
        gv_CharChooseWindowSpellBtn[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
        gv_CharChooseWindowSpellImage[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
    }
    lv_eC84A4ECA095ECA095EC8898 = 0;
    gv_GameModeBtn[0] = c_invalidDialogControlId;
    gv_GameModeBtn[1] = c_invalidDialogControlId;
    gv_GameModeLabel[0] = c_invalidDialogControlId;
    gv_GameModeLabel[1] = c_invalidDialogControlId;
    gv_TeamSelectDialog[0] = c_invalidDialogId;
    gv_TeamSelectDialog[1] = c_invalidDialogId;
    lv_eC84A4ECA095ECA095EC8898 = 0;
    for ( ; ( (auto9A65E712_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= auto9A65E712_ae) || (auto9A65E712_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= auto9A65E712_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += auto9A65E712_ai ) {
        gv_TeamSelectDialogImage[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
    }
    lv_eC84A4ECA095ECA095EC8898 = 0;
    lv_eC84A4ECA095ECA095EC8898 = 0;
    for ( ; ( (auto288AB2CD_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= auto288AB2CD_ae) || (auto288AB2CD_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= auto288AB2CD_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += auto288AB2CD_ai ) {
        gv_TeamSelectDialogLabel[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
    }
    lv_eC84A4ECA095ECA095EC8898 = 0;
    lv_eC84A4ECA095ECA095EC8898 = 0;
    for ( ; ( (autoCDDB3A86_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= autoCDDB3A86_ae) || (autoCDDB3A86_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= autoCDDB3A86_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += autoCDDB3A86_ai ) {
        gv_TeamSelectDialogNemoImage[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
    }
    lv_eC84A4ECA095ECA095EC8898 = 0;
    lv_eC84A4ECA095ECA095EC8898 = 0;
    for ( ; ( (auto31C92194_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= auto31C92194_ae) || (auto31C92194_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= auto31C92194_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += auto31C92194_ai ) {
        gv_TeamSelectBtn[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
    }
    lv_eC84A4ECA095ECA095EC8898 = 0;
    lv_eC84A4ECA095ECA095EC8898 = 0;
    for ( ; ( (auto73608C52_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= auto73608C52_ae) || (auto73608C52_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= auto73608C52_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += auto73608C52_ai ) {
        gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
        gv_TeamSelectDialogPlayerName[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
        gv_TeamSelectDialogPlayerBorder[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
        gv_TeamSelectDialogPlayerSpellImage1[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
        gv_TeamSelectDialogPlayerSpellImage2[lv_eC84A4ECA095ECA095EC8898] = c_invalidDialogControlId;
    }
    lv_eC84A4ECA095ECA095EC8898 = 0;
}

void gf_HrHeroLevelUpLink1 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 1)) {
        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp", 1);
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 2)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp2", 1);
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 3)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp3", 1);
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 4)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp4", 1);
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 5)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp22", 1);
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 6)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5", 1);
                            UnitBehaviorAddPlayer(gv_PlayerHero[EventPlayer()], "DefensePower", EventPlayer(), 1);
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 7)) {
                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp43", 1);
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 8)) {
                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52", 1);
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 9)) {
                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp9", 1);
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 10)) {
                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp522", 1);
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 11)) {
                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5222", 1);
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 12)) {
                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp32", 1);
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 13)) {
                                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp33", 1);
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[EventPlayer()] == 14)) {
                                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp92", 1);
                                                            UnitBehaviorAddPlayer(gv_PlayerHero[EventPlayer()], "Amor2", EventPlayer(), 1);
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[EventPlayer()] == 15)) {
                                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52222", 1);
                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[EventPlayer()] == 16)) {
                                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52223", 1);
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 17)) {
                                                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52224", 1);
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 18)) {
                                                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52225", 1);
                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 19)) {
                                                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52226", 1);
                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 20)) {
                                                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52227", 1);
                                                                                }
                                                                                else {
                                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 21)) {
                                                                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp332", 1);
                                                                                    }
                                                                                    else {
                                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 22)) {
                                                                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52228", 1);
                                                                                        }
                                                                                        else {
                                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 23)) {
                                                                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp522232", 1);
                                                                                            }
                                                                                            else {
                                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 24)) {
                                                                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp523", 1);
                                                                                                }
                                                                                                else {
                                                                                                    if (((gv_SelectedCharNum[EventPlayer()] >= 25) && (gv_SelectedCharNum[EventPlayer()] <= 48))) {
                                                                                                        gf_HrHeroLevelUpLink2();
                                                                                                    }
                                                                                                    else {
                                                                                                        if (((gv_SelectedCharNum[EventPlayer()] >= 49) && (gv_SelectedCharNum[EventPlayer()] <= 72))) {
                                                                                                            gf_HrHeroLevelUpLink3();
                                                                                                        }
                                                                                                        else {
                                                                                                            if (((gv_SelectedCharNum[EventPlayer()] >= 73) && (gv_SelectedCharNum[EventPlayer()] <= 96))) {
                                                                                                                gf_HrHeroLevelUpLink4();
                                                                                                            }

                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrHeroLevelUpLink2 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 25)) {
        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5223", 1);
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 26)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp432", 1);
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 27)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp322", 1);
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 28)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp522233", 1);
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 29)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp522272", 1);
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 30)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp3322", 1);
                            UnitBehaviorAddPlayer(gv_PlayerHero[EventPlayer()], "Hero30Passive", EventPlayer(), 1);
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 31)) {
                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5224", 1);
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 32)) {
                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52229", 1);
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 33)) {
                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp34", 1);
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 34)) {
                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5232", 1);
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 35)) {
                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp3323", 1);
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 36)) {
                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52232", 1);
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 37)) {
                                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp222", 1);
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[EventPlayer()] == 38)) {
                                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp44", 1);
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[EventPlayer()] == 39)) {
                                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp522234", 1);
                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[EventPlayer()] == 40)) {
                                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp93", 1);
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 41)) {
                                                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp522262", 1);
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 42)) {
                                                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5222622", 1);
                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 43)) {
                                                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp342", 1);
                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 44)) {
                                                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp932", 1);
                                                                                }
                                                                                else {
                                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 45)) {
                                                                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp524", 1);
                                                                                    }
                                                                                    else {
                                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 46)) {
                                                                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp3324", 1);
                                                                                        }
                                                                                        else {
                                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 47)) {
                                                                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5222322", 1);
                                                                                                UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero47Passive", gv_PlayerHero[EventPlayer()], 1);
                                                                                            }
                                                                                            else {
                                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 48)) {
                                                                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5225", 1);
                                                                                                }

                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrHeroLevelUpLink3 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 49)) {
        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5222342", 1);
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 50)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5242", 1);
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 51)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp33222", 1);
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 52)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52223422", 1);
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 53)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52223222", 1);
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 54)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp6", 1);
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 55)) {
                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp522322", 1);
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 56)) {
                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp522232222", 1);
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 57)) {
                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp33242", 1);
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 58)) {
                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp35", 1);
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 59)) {
                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5223222", 1);
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 60)) {
                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp52233", 1);
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 61)) {
                                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp433", 1);
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[EventPlayer()] == 62)) {
                                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp2222", 1);
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[EventPlayer()] == 63)) {
                                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp522292", 1);
                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[EventPlayer()] == 64)) {
                                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp442", 1);
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 65)) {
                                                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp434", 1);
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 66)) {
                                                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5222332", 1);
                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 67)) {
                                                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5222333", 1);
                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 68)) {
                                                                                    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp33223", 1);
                                                                                }
                                                                                else {
                                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 69)) {
                                                                                        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp4322", 1);
                                                                                    }
                                                                                    else {
                                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 70)) {
                                                                                            TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp933", 1);
                                                                                        }
                                                                                        else {
                                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 71)) {
                                                                                                TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp5222334", 1);
                                                                                            }
                                                                                            else {
                                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 72)) {
                                                                                                    TechTreeUpgradeAddLevel(EventPlayer(), "Hero72Levelup", 1);
                                                                                                }

                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrHeroLevelUpLink4 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 73)) {
        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp4422", 1);
    }

}

void gf_HrSkillLearnDialogMake () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;

    // Automatic Variable Declarations
    const int autoB908CBE4_ae = 8;
    const int autoB908CBE4_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;

    // Implementation
    DialogCreate(385, 115, c_anchorRight, 93, 294, true);
    gv_SkillLearnWindow = DialogLastCreated();
    DialogSetImageVisible(gv_SkillLearnWindow, false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 365, 90, c_anchorCenter, 0, -5, StringToText(""), "Assets\\blackbg.tga", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_SkillLearnWindowImage[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 385, 115, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_chat_frame_protoss.dds", c_triggerImageTypeBorder, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_SkillLearnWindowImage[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_SkillLearnWindow, 75, 75, c_anchorLeft, 60, -5, StringExternal("Param/Value/9746353B"), StringToText(""), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_SkillLearnWindowBtn[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_SkillLearnWindow, 60, 60, c_anchorLeft, 67, -5, StringToText(""), "Assets\\Textures\\btn-ability-terran-heal.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_SkillLearnWindowBtnImage[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_SkillLearnWindow, 75, 75, c_anchorLeft, 136, -5, StringExternal("Param/Value/CC8564BC"), StringToText(""), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_SkillLearnWindowBtn[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_SkillLearnWindow, 60, 60, c_anchorLeft, 143, -5, StringToText(""), "Assets\\Textures\\btn-ability-terran-heal.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_SkillLearnWindowBtnImage[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_SkillLearnWindow, 75, 75, c_anchorLeft, 212, -5, StringExternal("Param/Value/5111BB33"), StringToText(""), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_SkillLearnWindowBtn[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_SkillLearnWindow, 60, 60, c_anchorLeft, 219, -5, StringToText(""), "Assets\\Textures\\btn-ability-terran-heal.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_SkillLearnWindowBtnImage[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_SkillLearnWindow, 75, 75, c_anchorLeft, 288, -5, StringExternal("Param/Value/60EE4FA2"), StringToText(""), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), false);
    gv_SkillLearnWindowBtn[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_SkillLearnWindow, 60, 60, c_anchorLeft, 293, -5, StringToText(""), "Assets\\Textures\\btn-ability-terran-heal.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_SkillLearnWindowBtnImage[3] = DialogControlLastCreated();
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (autoB908CBE4_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= autoB908CBE4_ae) || (autoB908CBE4_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= autoB908CBE4_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += autoB908CBE4_ai ) {
        libNtve_gf_CreateDialogItemLabel(gv_SkillLearnWindow, 100, 60, c_anchorLeft, -4, 10, (StringExternal("Param/Value/CF098128") + IntToText(gv_SkillLearnPossibleStat[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]) + StringExternal("Param/Value/0915B747")), Color(100,100,100), false, 2.0);
        libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
        gv_SkillLearnWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    }
}

void gf_HrSkillLearnHeroCategoryLink () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 1)) {
        gf_HrSkillLearnHero1();
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 2)) {
            gf_HrSkillLearnHero2();
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 3)) {
                gf_HrSkillLearnHero3();
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 4)) {
                    gf_HrSkillLearnHero4();
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 5)) {
                        gf_HrSkillLearnHero5();
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 6)) {
                            gf_HrSkillLearnHero6();
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 7)) {
                                gf_HrSkillLearnHero7();
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 8)) {
                                    gf_HrSkillLearnHero8();
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 9)) {
                                        gf_HrSkillLearnHero9();
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 10)) {
                                            gf_HrSkillLearnHero10();
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 11)) {
                                                gf_HrSkillLearnHero11();
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 12)) {
                                                    gf_HrSkillLearnHero12();
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 13)) {
                                                        gf_HrSkillLearnHero13();
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[EventPlayer()] == 14)) {
                                                            gf_HrSkillLearnHero14();
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[EventPlayer()] == 15)) {
                                                                gf_HrSkillLearnHero15();
                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[EventPlayer()] == 16)) {
                                                                    gf_HrSkillLearnHero16();
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 17)) {
                                                                        gf_HrSkillLearnHero17();
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 18)) {
                                                                            gf_HrSkillLearnHero18();
                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 19)) {
                                                                                gf_HrSkillLearnHero19();
                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 20)) {
                                                                                    gf_HrSkillLearnHero20();
                                                                                }
                                                                                else {
                                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 21)) {
                                                                                        gf_HrSkillLearnHero21();
                                                                                    }
                                                                                    else {
                                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 22)) {
                                                                                            gf_HrSkillLearnHero22();
                                                                                        }
                                                                                        else {
                                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 23)) {
                                                                                                gf_HrSkillLearnHero23();
                                                                                            }
                                                                                            else {
                                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 24)) {
                                                                                                    gf_HrSkillLearnHero24();
                                                                                                }
                                                                                                else {
                                                                                                    if (((gv_SelectedCharNum[EventPlayer()] >= 25) && (gv_SelectedCharNum[EventPlayer()] <= 48))) {
                                                                                                        gf_HrSkillLearnHeroCategoryLink2();
                                                                                                    }
                                                                                                    else {
                                                                                                        if (((gv_SelectedCharNum[EventPlayer()] >= 49) && (gv_SelectedCharNum[EventPlayer()] <= 72))) {
                                                                                                            gf_HrSkillLearnHeroCategoryLink3();
                                                                                                        }
                                                                                                        else {
                                                                                                            if (((gv_SelectedCharNum[EventPlayer()] >= 73) && (gv_SelectedCharNum[EventPlayer()] <= 96))) {
                                                                                                                gf_HrSkillLearnHeroCategoryLink4();
                                                                                                            }

                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrSkillLearnHeroCategoryLink2 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 25)) {
        gf_HrSkillLearnHero25();
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 26)) {
            gf_HrSkillLearnHero26();
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 27)) {
                gf_HrSkillLearnHero27();
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 28)) {
                    gf_HrSkillLearnHero28();
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 29)) {
                        gf_HrSkillLearnHero29();
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 30)) {
                            gf_HrSkillLearnHero30();
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 31)) {
                                gf_HrSkillLearnHero31();
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 32)) {
                                    gf_HrSkillLearnHero32();
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 33)) {
                                        gf_HrSkillLearnHero33();
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 34)) {
                                            gf_HrSkillLearnHero34();
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 35)) {
                                                gf_HrSkillLearnHero35();
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 36)) {
                                                    gf_HrSkillLearnHero36();
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 37)) {
                                                        gf_HrSkillLearnHero37();
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[EventPlayer()] == 38)) {
                                                            gf_HrSkillLearnHero38();
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[EventPlayer()] == 39)) {
                                                                gf_HrSkillLearnHero39();
                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[EventPlayer()] == 40)) {
                                                                    gf_HrSkillLearnHero40();
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 41)) {
                                                                        gf_HrSkillLearnHero41();
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 42)) {
                                                                            gf_HrSkillLearnHero42();
                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 43)) {
                                                                                gf_HrSkillLearnHero43();
                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 44)) {
                                                                                    gf_HrSkillLearnHero44();
                                                                                }
                                                                                else {
                                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 45)) {
                                                                                        gf_HrSkillLearnHero45();
                                                                                    }
                                                                                    else {
                                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 46)) {
                                                                                            gf_HrSkillLearnHero46();
                                                                                        }
                                                                                        else {
                                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 47)) {
                                                                                                gf_HrSkillLearnHero47();
                                                                                            }
                                                                                            else {
                                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 48)) {
                                                                                                    gf_HrSkillLearnHero48();
                                                                                                }

                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrSkillLearnHeroCategoryLink3 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 49)) {
        gf_HrSkillLearnHero49();
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 50)) {
            gf_HrSkillLearnHero50();
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 51)) {
                gf_HrSkillLearnHero51();
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 52)) {
                    gf_HrSkillLearnHero52();
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 53)) {
                        gf_HrSkillLearnHero53();
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 54)) {
                            gf_HrSkillLearnHero54();
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 55)) {
                                gf_HrSkillLearnHero55();
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 56)) {
                                    gf_HrSkillLearnHero56();
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 57)) {
                                        gf_HrSkillLearnHero57();
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 58)) {
                                            gf_HrSkillLearnHero58();
                                        }
                                        else {
                                            if ((gv_SelectedCharNum[EventPlayer()] == 59)) {
                                                gf_HrSkillLearnHero59();
                                            }
                                            else {
                                                if ((gv_SelectedCharNum[EventPlayer()] == 60)) {
                                                    gf_HrSkillLearnHero60();
                                                }
                                                else {
                                                    if ((gv_SelectedCharNum[EventPlayer()] == 61)) {
                                                        gf_HrSkillLearnHero61();
                                                    }
                                                    else {
                                                        if ((gv_SelectedCharNum[EventPlayer()] == 62)) {
                                                            gf_HrSkillLearnHero62();
                                                        }
                                                        else {
                                                            if ((gv_SelectedCharNum[EventPlayer()] == 63)) {
                                                                gf_HrSkillLearnHero63();
                                                            }
                                                            else {
                                                                if ((gv_SelectedCharNum[EventPlayer()] == 64)) {
                                                                    gf_HrSkillLearnHero64();
                                                                }
                                                                else {
                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 65)) {
                                                                        gf_HrSkillLearnHero65();
                                                                    }
                                                                    else {
                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 66)) {
                                                                            gf_HrSkillLearnHero66();
                                                                        }
                                                                        else {
                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 67)) {
                                                                                gf_HrSkillLearnHero67();
                                                                            }
                                                                            else {
                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 68)) {
                                                                                    gf_HrSkillLearnHero68();
                                                                                }
                                                                                else {
                                                                                    if ((gv_SelectedCharNum[EventPlayer()] == 69)) {
                                                                                        gf_HrSkillLearnHero69();
                                                                                    }
                                                                                    else {
                                                                                        if ((gv_SelectedCharNum[EventPlayer()] == 70)) {
                                                                                            gf_HrSkillLearnHero70();
                                                                                        }
                                                                                        else {
                                                                                            if ((gv_SelectedCharNum[EventPlayer()] == 71)) {
                                                                                                gf_HrSkillLearnHero71();
                                                                                            }
                                                                                            else {
                                                                                                if ((gv_SelectedCharNum[EventPlayer()] == 72)) {
                                                                                                    gf_HrSkillLearnHero72();
                                                                                                }

                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrSkillLearnHeroCategoryLink4 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 73)) {
        gf_HrSkillLearnHero73();
    }

}

void gf_HrSkillLearnWindowOpen () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetDialogItemText(gv_SkillLearnWindowNum[EventPlayer()], (StringExternal("Param/Value/BF05A81F") + IntToText(gv_SkillLearnPossibleStat[EventPlayer()]) + StringExternal("Param/Value/731A1880")), PlayerGroupSingle(EventPlayer()));
    if ((gv_SelectedCharNum[EventPlayer()] != 60)) {
        if ((gv_SkillLearnPossibleStat[EventPlayer()] > 0)) {
            if ((gv_SkillQLevel[EventPlayer()] < 5) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillQLevel[EventPlayer()]) >= (gv_SkillQLevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[0], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][0] = true;
            }
            else {
                gv_SkillLearnSwitchKey[EventPlayer()][0] = false;
            }
            if ((gv_SkillWLevel[EventPlayer()] < 5) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillWLevel[EventPlayer()]) >= (gv_SkillWLevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[1], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][1] = true;
            }
            else {
                gv_SkillLearnSwitchKey[EventPlayer()][1] = false;
            }
            if ((gv_SkillELevel[EventPlayer()] < 5) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillELevel[EventPlayer()]) >= (gv_SkillELevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[2], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][2] = true;
            }
            else {
                gv_SkillLearnSwitchKey[EventPlayer()][2] = false;
            }
            if ((gv_SkillLearnPossibleStatR[EventPlayer()] > 0) && (gv_SkillRLevel[EventPlayer()] < 3)) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[3], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][3] = true;
            }
            else {
                gv_SkillLearnSwitchKey[EventPlayer()][3] = false;
            }
            DialogSetVisible(gv_SkillLearnWindow, PlayerGroupSingle(EventPlayer()), true);
        }

    }
    else {
        if ((gv_SkillLearnPossibleStat[EventPlayer()] > 0)) {
            if ((gv_SkillQLevel[EventPlayer()] < 6) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillQLevel[EventPlayer()]) >= (gv_SkillQLevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[0], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][0] = true;
            }
            else {
                gv_SkillLearnSwitchKey[EventPlayer()][0] = false;
            }
            if ((gv_SkillWLevel[EventPlayer()] < 6) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillWLevel[EventPlayer()]) >= (gv_SkillWLevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[1], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][1] = true;
            }
            else {
                gv_SkillLearnSwitchKey[EventPlayer()][1] = false;
            }
            if ((gv_SkillELevel[EventPlayer()] < 6) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillELevel[EventPlayer()]) >= (gv_SkillELevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[2], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][2] = true;
            }
            else {
                gv_SkillLearnSwitchKey[EventPlayer()][2] = false;
            }
            DialogSetVisible(gv_SkillLearnWindow, PlayerGroupSingle(EventPlayer()), true);
        }

    }
}

void gf_HrSkillLearnWindowClose () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetDialogItemText(gv_SkillLearnWindowNum[EventPlayer()], (StringExternal("Param/Value/5910D4FA") + IntToText(gv_SkillLearnPossibleStat[EventPlayer()]) + StringExternal("Param/Value/0FF38FCB")), PlayerGroupSingle(EventPlayer()));
    if ((gv_SelectedCharNum[EventPlayer()] != 60)) {
        if ((gv_SkillLearnPossibleStat[EventPlayer()] > 0)) {
            if ((gv_SkillQLevel[EventPlayer()] < 5) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillQLevel[EventPlayer()]) >= (gv_SkillQLevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[0], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][0] = true;
            }
            else {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[0], PlayerGroupSingle(EventPlayer()), false);
                gv_SkillLearnSwitchKey[EventPlayer()][0] = false;
            }
            if ((gv_SkillWLevel[EventPlayer()] < 5) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillWLevel[EventPlayer()]) >= (gv_SkillWLevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[1], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][1] = true;
            }
            else {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[1], PlayerGroupSingle(EventPlayer()), false);
                gv_SkillLearnSwitchKey[EventPlayer()][1] = false;
            }
            if ((gv_SkillELevel[EventPlayer()] < 5) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillELevel[EventPlayer()]) >= (gv_SkillELevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[2], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][2] = true;
            }
            else {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[2], PlayerGroupSingle(EventPlayer()), false);
                gv_SkillLearnSwitchKey[EventPlayer()][2] = false;
            }
            if ((gv_SkillLearnPossibleStatR[EventPlayer()] > 0) && (gv_SkillRLevel[EventPlayer()] < 3)) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[3], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][3] = true;
            }
            else {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[3], PlayerGroupSingle(EventPlayer()), false);
                gv_SkillLearnSwitchKey[EventPlayer()][3] = false;
            }
        }

    }
    else {
        if ((gv_SkillLearnPossibleStat[EventPlayer()] > 0)) {
            if ((gv_SkillQLevel[EventPlayer()] < 6) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillQLevel[EventPlayer()]) >= (gv_SkillQLevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[0], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][0] = true;
            }
            else {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[0], PlayerGroupSingle(EventPlayer()), false);
                gv_SkillLearnSwitchKey[EventPlayer()][0] = false;
            }
            if ((gv_SkillWLevel[EventPlayer()] < 6) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillWLevel[EventPlayer()]) >= (gv_SkillWLevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[1], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][1] = true;
            }
            else {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[1], PlayerGroupSingle(EventPlayer()), false);
                gv_SkillLearnSwitchKey[EventPlayer()][1] = false;
            }
            if ((gv_SkillELevel[EventPlayer()] < 6) && ((gv_PlayerLevel[EventPlayer()][0] - gv_SkillELevel[EventPlayer()]) >= (gv_SkillELevel[EventPlayer()] + 1))) {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[2], PlayerGroupSingle(EventPlayer()), true);
                gv_SkillLearnSwitchKey[EventPlayer()][2] = true;
            }
            else {
                DialogControlSetEnabled(gv_SkillLearnWindowBtn[2], PlayerGroupSingle(EventPlayer()), false);
                gv_SkillLearnSwitchKey[EventPlayer()][2] = false;
            }
        }

    }
    if ((gv_SkillLearnPossibleStat[EventPlayer()] == 0)) {
        DialogControlSetEnabled(gv_SkillLearnWindowBtn[0], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetEnabled(gv_SkillLearnWindowBtn[1], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetEnabled(gv_SkillLearnWindowBtn[2], PlayerGroupSingle(EventPlayer()), false);
        if ((gv_SkillLearnPossibleStatR[EventPlayer()] == 0)) {
            DialogControlSetEnabled(gv_SkillLearnWindowBtn[3], PlayerGroupSingle(EventPlayer()), false);
        }

        DialogSetVisible(gv_SkillLearnWindow, PlayerGroupSingle(EventPlayer()), false);
    }

}

void gf_HrSkillLearnHero1 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223334", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233323", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233323222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332222", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322222", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223333", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233332", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero2 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233353", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333532", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233353222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333523", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero3 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233354", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333545", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335452", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233354522", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333545222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333542", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335422", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233354222", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333542222", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335422222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "DefensePower", gv_PlayerHero[EventPlayer()], 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Amor2", gv_PlayerHero[EventPlayer()], 1);
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333543", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335432", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233354323", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333543232", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335432322", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333544", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233354322", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero4 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335233", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352333", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333523332", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335233322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352333222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352332", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333523323", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335233232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352332322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333523323222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333523322", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335233223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335233222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352332222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero5 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333524", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335243", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352432", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333524322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335243222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335242", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352423", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333524232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335242322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352423222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333524223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        gf_HrCriticalChanceLevelIncrease();
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333524222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335242222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero6 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233363", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333633", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong3222", gv_PlayerHero[EventPlayer()], 1);
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333632", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336322", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336323", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233363232", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero7 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233364", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333643", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333642", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336422", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336423", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233364232", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp3", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp32", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp322", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp23", 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AlwaysGold2", gv_PlayerHero[EventPlayer()], 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp232", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero8 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp8", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp83", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp82", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp823", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp8232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp82322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp823222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp822", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp8223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp8222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp82222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp822222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero9 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233373", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333732", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp28", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233372", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333723", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333722", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233372232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333722322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233372222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero10 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333622", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336222", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362222", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp10", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp102", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336223", 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero10Skill3Slow32", gv_PlayerHero[EventPlayer()], 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero10Skill3Slow322", gv_PlayerHero[EventPlayer()], 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362232", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362233", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333622332", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333622333", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336223332", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362233322", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero11 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233365", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333653", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333652", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336522", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333654", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336543", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233365432", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333654322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336543222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336542", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233365422", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero12 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223338", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233384", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233382", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333822", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233383", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333833", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223338332", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233383322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333833222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333832", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223338322", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero13 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333742", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337422", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp13", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp132", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333743", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337433", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337432", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374322", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337434", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374342", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero14 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333744", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337443", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337442", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374422", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333744222", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337442222", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374422222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337444", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374443", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374442", 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero14Skill4Passive", gv_PlayerHero[EventPlayer()], 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333744422", 1);
                UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Hero14Skill4Passive", EventPlayer(), 1);
                UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero14Skill4Passive2", gv_PlayerHero[EventPlayer()], 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333744422", 1);
                    UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Hero14Skill4Passive2", EventPlayer(), 1);
                    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero14Skill4Passive22", gv_PlayerHero[EventPlayer()], 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero15 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233366", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333663", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333664", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336643", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336642", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233366423", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233366422", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333664222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero16 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233367", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333672", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333634", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336342", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp34", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp342", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp3422", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336343", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233363433", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233363432", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333634322", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero17 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233368", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333683", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333682", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336823", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336822", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233368223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333682232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336822322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233368223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233368222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333682222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero18 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233369", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333693", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336932", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233369322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333693222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333692", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336923", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336922", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233369223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333692232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336922322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233369223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233369222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333692222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero19 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336103", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336102", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361023", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336102322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361023222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361022", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336102222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero20 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333553", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333552", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355232", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335523", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355233", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333552332", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong3222222635", gv_PlayerHero[EventPlayer()], 1);
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333552222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335522222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero21 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336104", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361043", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610432", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336104322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361043222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361042", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610423", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336104232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361042322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610423222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336104223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336104222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361042222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero22 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336105", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361053", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361052", 1);
            UnitBehaviorAddPlayer(gv_PlayerHero[EventPlayer()], "DefensePower", EventPlayer(), 3);
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", 3);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610523", 1);
                UnitBehaviorAddPlayer(gv_PlayerHero[EventPlayer()], "DefensePower", EventPlayer(), 2);
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", 2);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336105232", 1);
                    UnitBehaviorAddPlayer(gv_PlayerHero[EventPlayer()], "DefensePower", EventPlayer(), 2);
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", 2);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361052322", 1);
                        UnitBehaviorAddPlayer(gv_PlayerHero[EventPlayer()], "DefensePower", EventPlayer(), 2);
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", 2);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610523222", 1);
                            UnitBehaviorAddPlayer(gv_PlayerHero[EventPlayer()], "DefensePower", EventPlayer(), 2);
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", 2);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336105223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361052232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333610522322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336105223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336105222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361052222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero23 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233393", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333923", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333923222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero24 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333611", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336113", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336112", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361123", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361122", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333611223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336112232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361122322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333611223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333611222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336112222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361122222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero25 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero25Skill12", gv_PlayerHero[EventPlayer()], 1);
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233310", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333103", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333102", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331023", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331022", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233310223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333102232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331022322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233310223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233310222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333102222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero26 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233375", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333753", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337532", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233375322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333753222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333752", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337523", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233375223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333752232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337522322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233375223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233375222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333752222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337522222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero27 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233356", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333563", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335632", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233356322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333563222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333562", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335623", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233356232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333562322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335623222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335622", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233356223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233356222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333562222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335622222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero28 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333612", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336123", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336122", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361223", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361222", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333612223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333612222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336122222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361222222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero29 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333613", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336133", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336132", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361323", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361322", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333613223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336132232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361322322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333613223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333613222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336132222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero30 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333745", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337453", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374532", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333745322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337453222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337452", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374523", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233374522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333745223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333745222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337452222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero31 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333554", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335543", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355432", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333554322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335543222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335542", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355423", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333554223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333554222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335542222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero32 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339224", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392243", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922432", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339224322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392243222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392242", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922424", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922423", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339224233", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392242332", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922423322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339224233222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339224232", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392242322", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922423222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero33 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333113", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333112", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331123", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333112322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331123222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331122", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333112232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331122322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333112222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero34 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333546", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335463", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233354632", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333546322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335463222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335462", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233354623", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233354622", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333546223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335462232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233354622322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333546223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333546222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335462222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero35 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333614", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336143", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336142", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361423", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333614232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336142322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361423222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333614223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336142232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361422322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333614223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333614222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336142222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero36 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333615", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336153", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336152", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361523", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333615232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336152322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361523222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333615223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333615222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336152222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero37 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922425", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339224253", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339224252", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392242523", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233392242522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922425223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922425222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339224252222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero38 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333555", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335553", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335552", 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero38Skill233", gv_PlayerHero[EventPlayer()], 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355523", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333555232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335552322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355523222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333555223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335552232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355522322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333555223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333555222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335552222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero39 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233312", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333123", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333122", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331223", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331222", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233312223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333122232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331222322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233312223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233312222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333122222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero40 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333556", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335563", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335562", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355623", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333556232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335562322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355623222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355622", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333556223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335562232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355622322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333556223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333556222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335562222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero41 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333616", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336164", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336162", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361622", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333616222", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336162222", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361622222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336163", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361633", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "DefensePower", gv_PlayerHero[EventPlayer()], 2);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Amor2", gv_PlayerHero[EventPlayer()], 2);
        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", 2);
        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222342", 2);
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361632", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333616322", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336163222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero42 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333617", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336173", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336172", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361723", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361722", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333617223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333617222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336172222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361722222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero43 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333618", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336183", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361832", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333618322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336183222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336182", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361823", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333618232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336182322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361823222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361822", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333618223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333618222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336182222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361822222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero44 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333619", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336193", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336192", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361923", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361922", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333619223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333619222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336192222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361922222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero45 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333223", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332233", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332232", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322323", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322322", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333223223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332232232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322322322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333223223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333223222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332232222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322322222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero46 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332234", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322344", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322342", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333223423", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332234232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322342322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333223423222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333223422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332234223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332234222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322342222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero47 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335544", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355443", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333554432", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335544322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355443222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355442", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333554423", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333554422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335544223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355442232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333554422322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335544223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335544222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355442222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333554422222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero48 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333224", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332243", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322432", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333224322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332243222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332242", 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero48Skill2Impact3", gv_PlayerHero[EventPlayer()], 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322423", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333224232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332242322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322423222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333224223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333224222", 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "DefensePower", gv_PlayerHero[EventPlayer()], 3);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332242222", 1);
                UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "DefensePower", gv_PlayerHero[EventPlayer()], 5);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322422222", 1);
                    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "DefensePower", gv_PlayerHero[EventPlayer()], 7);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero49 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233376", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333763", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333762", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337624", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233376242", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333762422", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337624222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337622", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233376222", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333762222", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337622222", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233376222222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223337623", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233376232", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero50 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336184", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361843", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361842", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333618423", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333618422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336184223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361842232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333618422322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336184223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336184222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361842222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero51 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233313", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333133", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333132", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331323", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233313232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333132322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331323222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331322", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233313223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333132232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331322322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233313223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233313222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333132222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero52 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333655", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336553", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233365532", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333655322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336553222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336552", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233365523", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333655232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336552322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233365523222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233365522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333655223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333655222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336552222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233365522222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero53 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333620", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336203", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336202", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362023", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333620232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336202322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362023222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362022", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333620223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336202232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362022322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333620223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333620222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336202222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362022222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero54 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333557", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335573", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355732", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333557322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335573222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335572", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355722", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333621", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336213", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362132", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333621322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336213222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336212", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362122", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333621222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero55 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352334", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333523344", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333523342", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335233423", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352334232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333523342322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335233423222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335233422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233352334222", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333523343", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335233432", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero56 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333623", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336233", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336232", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362323", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333623232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336232322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362323222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362322", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333623223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336232232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362322322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333623223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333623222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336232222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero57 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333624", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336243", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336242", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362423", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333624223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333624222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336242222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero58 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333225", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332253", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322532", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333225322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332253222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332252", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322523", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333225223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333225222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332252222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero59 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333625", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336253", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336252", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362523", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333625232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336252322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362523222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362522", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333625223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336252232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362522322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333625223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333625222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336252222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero60 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 6)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336124", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361244", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 6)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361242", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333612422", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 6)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233361243", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333612432", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero61 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333626", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336263", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362632", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333626322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336263222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336262", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362623", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362622", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333626223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333626222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336262222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero62 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333627", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336273", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336272", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362723", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362722", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333627223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333627222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336272222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero63 () {
    // Variable Declarations
    int lv_GPlayerNum1;
    int lv_GPlayerNum2;

    // Automatic Variable Declarations
    const int autoFE58B061_ae = 8;
    const int autoFE58B061_ai = 1;
    const int auto2DB3F367_ae = 4;
    const int auto2DB3F367_ai = 1;

    // Variable Initialization
    lv_GPlayerNum1 = 1;
    lv_GPlayerNum2 = 5;

    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333558", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
                    lv_GPlayerNum1 = 1;
                    for ( ; ( (auto2DB3F367_ai >= 0 && lv_GPlayerNum1 <= auto2DB3F367_ae) || (auto2DB3F367_ai < 0 && lv_GPlayerNum1 >= auto2DB3F367_ae) ) ; lv_GPlayerNum1 += auto2DB3F367_ai ) {
                        if ((PlayerType(gv_PlayerBayul[lv_GPlayerNum1]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_GPlayerNum1]) == c_playerStatusActive)) {
                            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_GPlayerNum1], "SpellUp22223335583", 1);
                        }

                    }
                }
                else {
                    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
                        lv_GPlayerNum2 = 5;
                        for ( ; ( (autoFE58B061_ai >= 0 && lv_GPlayerNum2 <= autoFE58B061_ae) || (autoFE58B061_ai < 0 && lv_GPlayerNum2 >= autoFE58B061_ae) ) ; lv_GPlayerNum2 += autoFE58B061_ai ) {
                            if ((PlayerType(gv_PlayerBayul[lv_GPlayerNum2]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_GPlayerNum2]) == c_playerStatusActive)) {
                                TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_GPlayerNum2], "SpellUp22223335583", 1);
                            }

                        }
                    }

                }
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335582", 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero63Skill2Passive", gv_PlayerHero[EventPlayer()], 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355824", 1);
                UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero63Skill2Passive2", gv_PlayerHero[EventPlayer()], 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333558242", 1);
                    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero63Skill2Passive2", gv_PlayerHero[EventPlayer()], 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335582422", 1);
                        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero63Skill2Passive2", gv_PlayerHero[EventPlayer()], 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355824222", 1);
                            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero63Skill2Passive2", gv_PlayerHero[EventPlayer()], 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355822", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333558222", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335582222", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355822222", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333558222222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355823", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333558232", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335582322", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero64 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333226", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332262", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333628", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336283", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362832", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333628322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336283222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336282", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362823", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362822", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333628222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero65 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233357", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333573", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335732", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233357322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333573222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333572", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335723", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233357232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333572322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335723222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335722", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233357223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233357222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333572222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero66 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333227", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332273", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322732", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333227322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332273222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332272", 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero66Skill2", gv_PlayerHero[EventPlayer()], 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322723", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322722", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333227222", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333227223", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332272232", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero67 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333559", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335593", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355932", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333559322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335593222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335592", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355923", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333559232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335592322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355923222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355922", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333559223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335592232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355922322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333559223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333559222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335592222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero68 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333114", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331143", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311432", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333114322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331143222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331142", 1);
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero68Skill2", gv_PlayerHero[EventPlayer()], 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311423", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333114232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331142322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311423222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311422", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333114223", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331142232", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311422322", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333114223222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333114222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223331142222", 1);
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233311422222", 1);
                }

            }
        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero69 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333629", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336293", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362932", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333629322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336293222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336292", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362923", 1);
            }
            else {
                if ((gv_SkillWLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333629232", 1);
                }
                else {
                    if ((gv_SkillWLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336292322", 1);
                    }
                    else {
                        if ((gv_SkillWLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362923222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233362922", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333629223", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333629222", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223336292222", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero70 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335510", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355103", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551032", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335510322", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355103222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355102", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551024", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551022", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335510222", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355102222", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551022222", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335510222222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551023", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335510232", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero71 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335511", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355112", 1);
            }
            else {
                if ((gv_SkillQLevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551122", 1);
                }
                else {
                    if ((gv_SkillQLevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335511222", 1);
                    }
                    else {
                        if ((gv_SkillQLevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355112222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355113", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551132", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551133", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335511332", 1);
            }
            else {
                if ((gv_SkillELevel[EventPlayer()] == 2)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355113322", 1);
                }
                else {
                    if ((gv_SkillELevel[EventPlayer()] == 3)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551133222", 1);
                    }
                    else {
                        if ((gv_SkillELevel[EventPlayer()] == 4)) {
                            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223335511332222", 1);
                        }

                    }
                }
            }
        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233355114", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333551142", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero72 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Hero72Skill1Learn", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "Hero72Skill1Up", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Hero72Skill2Learn", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "Hero72Skill2Up", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Hero72Skill3Learn", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "Hero72Skill3Up", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Hero72Skill4Learn", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "Hero72Skill4Up", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrSkillLearnHero73 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SkillLearnSwitchQ[EventPlayer()] == true) && (gv_SkillQLevel[EventPlayer()] < 5)) {
        if ((gv_SkillQLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Hero73SkillLearn", 1);
        }
        else {
            if ((gv_SkillQLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "Hero73SkillLearn2", 1);
            }

        }
        gv_SkillQLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchW[EventPlayer()] == true) && (gv_SkillWLevel[EventPlayer()] < 5)) {
        if ((gv_SkillWLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Hero73SkillLearn3", 1);
        }
        else {
            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "Hero73SkillLearn22", 1);
            }

        }
        gv_SkillWLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchE[EventPlayer()] == true) && (gv_SkillELevel[EventPlayer()] < 5)) {
        if ((gv_SkillELevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Hero73SkillLearn32", 1);
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "Hero73SkillLearn222", 1);
            }

        }
        gv_SkillELevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
    }

    if ((gv_SkillLearnSwitchR[EventPlayer()] == true) && (gv_SkillRLevel[EventPlayer()] < 3) && (gv_SkillLearnPossibleStatR[EventPlayer()] >= 1)) {
        if ((gv_SkillRLevel[EventPlayer()] == 0)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "Hero73SkillLearn4", 1);
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] >= 1)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "Hero73SkillLearn223", 1);
            }

        }
        gv_SkillRLevel[EventPlayer()] += 1;
        gv_SkillLearnPossibleStat[EventPlayer()] -= 1;
        gv_SkillLearnPossibleStatR[EventPlayer()] -= 1;
    }

    gf_HrSkillLearnWindowClose();
}

void gf_HrStatDialogMake1a () {
    // Variable Declarations
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 29;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 134;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 20;

    // Implementation
    DialogCreate(270, 284, c_anchorBottomRight, 408, -10, true);
    gv_StatusWindow = DialogLastCreated();
    DialogSetImageVisible(gv_StatusWindow, false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 220, 250, c_anchorCenter, 0, 0, StringToText(""), "Assets\\blackbg.tga", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowImage[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 250, 290, c_anchorCenter, 0, 5, StringToText(""), "Assets\\Textures\\ui_chat_frame_protoss.dds", c_triggerImageTypeBorder, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowImage[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/0F6E4246") + IntToText(gv_StatHowMoney[0][0]) + StringExternal("Param/Value/891B282F")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-protoss-groundweaponslevel3.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/74423AD9") + IntToText(gv_StatHowMoney[1][0]) + StringExternal("Param/Value/8088D325")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-protoss-airweaponslevel3.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[1] = DialogControlLastCreated();
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/B762C11C") + IntToText(gv_StatHowMoney[2][0]) + StringExternal("Param/Value/A6B27F25")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-protoss-groundarmorlevel2.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/793ADEEF") + IntToText(gv_StatHowMoney[3][0]) + StringExternal("Param/Value/A8695773")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-protoss-airarmorlevel3.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[3] = DialogControlLastCreated();
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/56C3945D") + IntToText(gv_StatHowMoney[4][0]) + StringExternal("Param/Value/127C08B6")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-terran-caduceusreactor.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/E47F7098") + IntToText(gv_StatHowMoney[5][0]) + StringExternal("Param/Value/C8B41D66")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[5] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-protoss-graviticbooster.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[5] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 44, 45, c_anchorBottomLeft, 33, 22, StringExternal("Param/Value/194E30BE"), StringExternal("Param/Value/0A92B612"), "Assets\\Textures\\protoss-border-button-game.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\protoss-border-button-game.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_StatusWindowPageBtn[0] = DialogControlLastCreated();
    DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 44, 45, c_anchorBottomLeft, 73, 22, StringExternal("Param/Value/FBD5DF0F"), StringExternal("Param/Value/5535F4B9"), "Assets\\Textures\\protoss-border-button-game.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\protoss-border-button-game.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_StatusWindowPageBtn[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 44, 45, c_anchorBottomLeft, 113, 22, StringExternal("Param/Value/CF1BBA4C"), StringExternal("Param/Value/DBC83AA6"), "Assets\\Textures\\protoss-border-button-game.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\protoss-border-button-game.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_StatusWindowPageBtn[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 44, 45, c_anchorBottomLeft, 153, 22, StringExternal("Param/Value/7EE239FC"), StringExternal("Param/Value/5737A71A"), "Assets\\Textures\\protoss-border-button-game.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\protoss-border-button-game.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_StatusWindowPageBtn[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 44, 45, c_anchorBottomLeft, 193, 22, StringExternal("Param/Value/1598FBB3"), StringExternal("Param/Value/E294E7CE"), "Assets\\Textures\\protoss-border-button-game.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\protoss-border-button-game.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_StatusWindowPageBtn[4] = DialogControlLastCreated();
    DialogCreate(270, 100, c_anchorBottomRight, 408, 225, true);
    gv_StatusWindow2 = DialogLastCreated();
    DialogSetImageVisible(gv_StatusWindow2, false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow2, 170, 45, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_ingame_gameclock_protoss.dds", c_triggerImageTypeEndCap, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_CreateDialogItemLabel(gv_StatusWindow2, 180, 45, c_anchorCenter, 0, 12, StringExternal("Param/Value/EF8CF166"), Color(100,100,100), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    DialogCreate(255, 60, c_anchorBottomLeft, 12, 304, true);
    gv_HeroFixedBtnWindow = DialogLastCreated();
    DialogSetImageVisible(gv_HeroFixedBtnWindow, false);
    libNtve_gf_CreateDialogItemButton(gv_HeroFixedBtnWindow, 255, 60, c_anchorCenter, 0, 0, StringExternal("Param/Value/66C49DBD"), StringExternal("Param/Value/130D817D"), "Assets\\Textures\\ui_void_storybutton_small_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_void_storybutton_small_normalpressed.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    gv_HeroFixedBtnWindowBtn[0] = DialogControlLastCreated();
}

void gf_HrStatDialogMake1b () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    const int autoD947F2D3_ae = 8;
    const int autoD947F2D3_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 97;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 202;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 45;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (autoD947F2D3_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= autoD947F2D3_ae) || (autoD947F2D3_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= autoD947F2D3_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += autoD947F2D3_ai ) {
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/760EF0C8") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][0]) + StringExternal("Param/Value/9B6B133F")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][0] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/02E4C19B") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][1]) + StringExternal("Param/Value/15F881BB")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][1] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/07A85A9A") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][2]) + StringExternal("Param/Value/A6018535")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][2] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/36A72367") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][3]) + StringExternal("Param/Value/2EC8C9E3")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][3] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/A509C15A") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][4]) + StringExternal("Param/Value/F49C874E")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][4] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/4F4D4678") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][5]) + StringExternal("Param/Value/3ED8A80C")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][5] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 = 45;
    }
}

void gf_HrStatDialogMake2a () {
    // Variable Declarations
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 29;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 134;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 20;

    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/105F4D99") + IntToText(gv_StatHowMoney[6][0]) + StringExternal("Param/Value/71ED1578")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[6] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-terran-corvidreactor.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[6] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/B52C4DBD") + IntToText(gv_StatHowMoney[7][0]) + StringExternal("Param/Value/4B39A3DF")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[7] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-terran-moebiusreactor.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[7] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/25D75730") + IntToText(gv_StatHowMoney[8][0]) + StringExternal("Param/Value/FED58AF3")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[8] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-tips-terran-penetrator.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[8] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/0D38B383") + IntToText(gv_StatHowMoney[9][0]) + StringExternal("Param/Value/9FB47B93")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[9] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-ability-protoss-blinkshieldrestore.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[9] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/BC0C4F6D") + IntToText(gv_StatHowMoney[10][0]) + StringExternal("Param/Value/2CC75CD2")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[10] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-research-terran-commandcenterreactor.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[10] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/45A143F6") + IntToText(gv_StatHowMoney[11][0]) + StringExternal("Param/Value/A214EC24")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[11] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\AddIcon\\btn-ability-terran-yamatocannon-ultra-color.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[11] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
}

void gf_HrStatDialogMake2b () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    const int auto39686EB8_ae = 8;
    const int auto39686EB8_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 97;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 202;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 45;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (auto39686EB8_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto39686EB8_ae) || (auto39686EB8_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto39686EB8_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto39686EB8_ai ) {
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/DE594C7B") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][6]) + StringExternal("Param/Value/15CE61F1")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][6] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/4489B42E") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][7]) + StringExternal("Param/Value/E3E5CF71")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][7] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/0754513D") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][8]) + StringExternal("Param/Value/25205028")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][8] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/78940A81") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][9]) + StringExternal("Param/Value/21CBD8ED")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][9] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/8752F9D5") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][10]) + StringExternal("Param/Value/6C10B44F")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][10] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/F9DE2DFF") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][11]) + StringExternal("Param/Value/88C5DFE8")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][11] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 = 45;
    }
}

void gf_HrStatDialogMake3a2 () {
    // Variable Declarations
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 29;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 134;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 20;

    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/FED2E4BB") + IntToText(gv_StatHowMoney[12][0]) + StringExternal("Param/Value/5BD409C6")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[12] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-ability-hornerhan-mechbioweaponupgrades-c.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[12] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/99E0EBC2") + IntToText(gv_StatHowMoney[13][0]) + StringExternal("Param/Value/3E972BDA")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[13] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-ability-mengsk-siegetank-shockandawe.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[13] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/5E89B444") + IntToText(gv_StatHowMoney[14][0]) + StringExternal("Param/Value/ED07ED74")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[14] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-ability-hornerhan-hellbat-fear.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[14] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/BE23B6F8") + IntToText(gv_StatHowMoney[15][0]) + StringExternal("Param/Value/C46BC4C8")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[15] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-ability-mengsk-ghost-staticempblast.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[15] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/E0BA54A0") + IntToText(gv_StatHowMoney[16][0]) + StringExternal("Param/Value/067028AD")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[16] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-ability-kerrigan-malignantcreep.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[16] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_zerg_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/63C1F55F") + IntToText(gv_StatHowMoney[17][0]) + StringExternal("Param/Value/864F237F")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_zerg_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[17] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-ability-mengsk-viking-cheatdeath.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[17] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
}

void gf_HrStatDialogMake3b2 () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    const int auto9FB9DA07_ae = 8;
    const int auto9FB9DA07_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 97;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 202;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 45;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (auto9FB9DA07_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto9FB9DA07_ae) || (auto9FB9DA07_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto9FB9DA07_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto9FB9DA07_ai ) {
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/A853CE51") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][12]) + StringExternal("Param/Value/01A529CE")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][12] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/F2D441BC") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][13]) + StringExternal("Param/Value/1B6B90A9")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][13] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/99EB848F") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][14]) + StringExternal("Param/Value/8589AD33")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][14] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/8C0DAC01") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][15]) + StringExternal("Param/Value/6C8C01A4")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][15] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/0DEC0E96") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][16]) + StringExternal("Param/Value/279CB271")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][16] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/51AAA6BB") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][17]) + StringExternal("Param/Value/2BF353AB")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][17] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 = 45;
    }
}

void gf_HrStatDialogMake3a () {
    // Variable Declarations
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 29;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 134;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 20;

    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/2E68C9BA") + IntToText(gv_StatHowMoney[18][0]) + StringExternal("Param/Value/11CDAC01")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[18] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-tips-sellzergbiosamples.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[18] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/5936EEEA") + IntToText(gv_StatHowMoney[19][0]) + StringExternal("Param/Value/0EC8098E")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[19] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-tips-sellprotossartifacts.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[19] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/2F67E042") + IntToText(gv_StatHowMoney[20][0]) + StringExternal("Param/Value/3308F27F")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[20] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\AddIcon\\btn-custom-terran-engine.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[20] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/FD3563C7") + IntToText(gv_StatHowMoney[21][0]) + StringExternal("Param/Value/777978E1")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[21] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-terran-jotunboosters.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[21] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/18EE85FD") + IntToText(gv_StatHowMoney[22][0]) + StringExternal("Param/Value/97B7197B")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[22] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-ability-protoss-hardenedshields-color.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[22] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/707486D0") + IntToText(gv_StatHowMoney[23][0]) + StringExternal("Param/Value/74F45D38")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[23] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-upgrade-terran-behemothreactor.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[23] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
}

void gf_HrStatDialogMake3b () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    const int autoA4E55CF4_ae = 8;
    const int autoA4E55CF4_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 97;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 202;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 45;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (autoA4E55CF4_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= autoA4E55CF4_ae) || (autoA4E55CF4_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= autoA4E55CF4_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += autoA4E55CF4_ai ) {
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/D51AB9EE") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][18]) + StringExternal("Param/Value/9F2C3EA5")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][18] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/C09BA795") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][19]) + StringExternal("Param/Value/CF3E1C6B")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][19] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/FE48A2A8") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][20]) + StringExternal("Param/Value/C6561A10")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][20] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/4054ACB0") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][21]) + StringExternal("Param/Value/D7ED20C2")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][21] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/CD32922B") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][22]) + StringExternal("Param/Value/32E6FC84")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][22] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/02D07892") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][23]) + StringExternal("Param/Value/4AE265E7")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][23] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 = 45;
    }
}

void gf_HrStatDialogMake4a () {
    // Variable Declarations
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 29;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 134;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 20;

    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/E8EEDC9A") + IntToText(gv_StatHowMoney[24][0]) + StringExternal("Param/Value/F921592A")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[24] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\AddIcon\\btn-items-postion.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[24] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/56E70969") + IntToText(gv_StatHowMoney[25][0]) + StringExternal("Param/Value/829AA365")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[25] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\AddIcon\\btn-items-postion2.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[25] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/CB424073") + IntToText(gv_StatHowMoney[26][0]) + StringExternal("Param/Value/0A92B03F")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[26] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\Textures\\btn-building-protoss-obelisk.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[26] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/4B152A48") + IntToText(gv_StatHowMoney[27][0]) + StringExternal("Param/Value/F0642B8D")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[27] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\AddIcon\\btn-ability-zerg-domination-color.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[27] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/581492DB") + IntToText(gv_StatHowMoney[28][0]) + StringExternal("Param/Value/7037D2B3")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[28] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898ECA28C + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\AddIcon\\btn-items-pwpotion.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[28] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_StatusWindow, 70, 70, c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898, StringToText(""), StringToText(""), "Assets\\Textures\\ui_glossary_strongagainst_protoss_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), (StringExternal("Param/Value/09E4F027") + IntToText(gv_StatHowMoney[29][0]) + StringExternal("Param/Value/B72DF259")), PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_gloassary_stongagainst_protoss_normaloverandpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_StatusWindowBtn[29] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_StatusWindow, 52, 52, c_anchorTopLeft, (lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 + 10), (lv_eC84A4ECA095yECB695EBB380EC8898 + 10), StringToText(""), "Assets\\AddIcon\\btn-items-blackpotion.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_StatusWindowBtnImage[29] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
}

void gf_HrStatDialogMake4b () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;
    int lv_eC84A4ECA095xECB695EBB380EC8898ECA28C;
    int lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0;
    int lv_eC84A4ECA095yECB695EBB380EC8898;

    // Automatic Variable Declarations
    const int autoE259EDEB_ae = 8;
    const int autoE259EDEB_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    lv_eC84A4ECA095xECB695EBB380EC8898ECA28C = 97;
    lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0 = 202;
    lv_eC84A4ECA095yECB695EBB380EC8898 = 45;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (autoE259EDEB_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= autoE259EDEB_ae) || (autoE259EDEB_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= autoE259EDEB_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += autoE259EDEB_ai ) {
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/9636AB41") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][24]) + StringExternal("Param/Value/DB470392")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][24] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/D04B2E04") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][25]) + StringExternal("Param/Value/42F55FE5")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][25] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/AE5AEC1A") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][26]) + StringExternal("Param/Value/E311DC8B")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][26] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/E9FED7E3") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][27]) + StringExternal("Param/Value/49C77318")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][27] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 += 65;
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898ECA28C, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/76166ED8") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][28]) + StringExternal("Param/Value/22884353")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][28] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        DialogControlCreate(gv_StatusWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), 70, 50);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_anchorTopLeft, lv_eC84A4ECA095xECB695EBB380EC8898EC9AB0, lv_eC84A4ECA095yECB695EBB380EC8898);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/CD472C2A") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][29]) + StringExternal("Param/Value/C25E6834")), PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]));
        gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][29] = DialogControlLastCreated();
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        lv_eC84A4ECA095yECB695EBB380EC8898 = 45;
    }
}

void gf_HrStatMoneySet () {
    int i;
    int j;

    for (i = 0; i < 30; i += 1) {
        for (j = 0; j <= 8 ; j += 1 ) {
            gv_StatHowMoney[i][gv_PlayerBayul[j]] = gv_ShopItemParameters[i].minerals_cost;
        }
    }
}

static void lf_PayCostsForShopItem(int shop_index) {
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropMinerals, c_playerPropOperSubtract, gv_StatHowMoney[shop_index][EventPlayer()]);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperSubtract, gv_ShopItemParameters[shop_index].gas_cost);
    gv_StatHowMoney[shop_index][EventPlayer()] += gv_ShopItemParameters[shop_index].minerals_increase;
}

static void lf_DisableShopButtonOnMaxUpgrades(int shop_index) {
    if ((gv_StatusWindowNum[EventPlayer()][shop_index] >= gv_ShopItemParameters[shop_index].max_upgrades)) {
        DialogControlSetEnabled(gv_StatusWindowBtn[shop_index], PlayerGroupSingle(EventPlayer()), false);
    }
}

void gf_HrStat1 () {
    const int shop_index = 0;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong24", gv_PlayerHero[EventPlayer()], 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322232", 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222323", 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222322", 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/65A12297") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/504C5FDC")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/16A3EF70") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/92DCA530")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat2 () {
    const int shop_index = 1;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong24233", gv_PlayerHero[EventPlayer()], 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332223", 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322233", 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222333", 1);
    if ((gv_SelectedCharNum[EventPlayer()] == 71)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero71Passive", gv_PlayerHero[EventPlayer()], 1);
    }
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/630A62CE") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/1E37331F")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/656F7482") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/D7E1C95B")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat3 () {
    const int shop_index = 2;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "DefensePower", gv_PlayerHero[EventPlayer()], 4);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", 4);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/2F79A13D") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/D52A61AD")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/3E816046") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/960D2C83")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat4 () {
    const int shop_index = 3;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Amor2", gv_PlayerHero[EventPlayer()], 4);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222342", 4);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/2ACCA46C") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/435BBCB2")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/1CF49202") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/64B96C4D")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat5 () {
    const int shop_index = 4;
    // Upgrade
    UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLifeMax, (UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLifeMax, c_unitPropCurrent) + 100.0));    
    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp422", 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/5567282B") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/4BCFA2C0")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/2013D8A0") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/77C9F250")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat6 () {
    const int shop_index = 5;
    if ((gv_CharNoMana[EventPlayer()] == 0)) {
        // Upgrade
        UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergyMax, (UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergyMax, c_unitPropCurrent) + 75.0));
        TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp42", 1);
        // Shop Changes
        gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
        libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/18DF7C33") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/266C386E")), PlayerGroupSingle(EventPlayer()));
        lf_PayCostsForShopItem(shop_index);
        libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/836385E4") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/FDACEA09")), PlayerGroupSingle(EventPlayer()));
        lf_DisableShopButtonOnMaxUpgrades(shop_index);
    } else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/A72FF288"));
    }
}

void gf_HrStat7 () {
    const int shop_index = 6;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong24222", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/A56E3141") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/2BAF824D")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/3B9EF42D") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/C7535C3C")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat8 () {
    const int shop_index = 7;
    if ((gv_CharNoMana[EventPlayer()] == 0)) {
        // Upgrade
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong2422", gv_PlayerHero[EventPlayer()], 1);
        // Shop Changes
        gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
        libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/0BA6465C") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/7D802EEE")), PlayerGroupSingle(EventPlayer()));
        lf_PayCostsForShopItem(shop_index);
        libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/BEA13735") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/3E68978B")), PlayerGroupSingle(EventPlayer()));
        lf_DisableShopButtonOnMaxUpgrades(shop_index);
    } else {
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/A72FF288"));
    }
}

void gf_HrStat9 () {
    const int shop_index = 8;
    // Upgrade
    gf_HrAttackSpeedLevelIncrease();
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332223222", 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/016D7E1B") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/2A26AC9A")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/F7FDE15B") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/26E55644")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat10 () {
    const int shop_index = 9;
    // Upgrade
    if ((gv_StatusWindowNum[EventPlayer()][shop_index] == 1)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Armorbreak", gv_PlayerHero[EventPlayer()], 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Armorbreak2", gv_PlayerHero[EventPlayer()], 1);
        TechTreeUpgradeAddLevel(EventPlayer(), "Armorbreakupgrade", 1);
        TechTreeUpgradeAddLevel(EventPlayer(), "Armorbreakupgrade3", 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][shop_index] == 2)) {
        TechTreeUpgradeAddLevel(EventPlayer(), "Armorbreakupgrade2", 1);
        TechTreeUpgradeAddLevel(EventPlayer(), "Armorbreakupgrade32", 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][shop_index] == 3)) {
        TechTreeUpgradeAddLevel(EventPlayer(), "Armorbreakupgrade22", 1);
        TechTreeUpgradeAddLevel(EventPlayer(), "Armorbreakupgrade322", 1);
    }

    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/E83DF35E") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/5E9CA015")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/971AFD3E") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/9C0F7D59")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat11 () {
    const int shop_index = 10;
    // Upgrade
    gf_HrEvasionLevelIncrease();
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/9EF04A19") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/312059D4")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/546F2B11") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/7EAD3D35")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat12 () {
    const int shop_index = 11;
    // Upgrade
    gf_HrCriticalChanceLevelIncrease();
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/A74FC466") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/373CE98F")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/E0DED4C4") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/52E90764")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

// gf_HrStat25 to gf_HrStat30 are seals

static void lf_DisableSeals() {
    int i;
    const int first_seal_index = 12;
    const int last_seal_index = 17;
    for (i = first_seal_index; i <= last_seal_index; i += 1) {
        DialogControlSetEnabled(gv_StatusWindowBtn[i], PlayerGroupSingle(EventPlayer()), false);
    }
    gv_SealBought[EventPlayer()] = true;
}

void gf_HrStat25 () {
    const int shop_index = 12;
    // Upgrade
    if ((UnitWeaponRange(gv_PlayerHero[EventPlayer()], 1) > 2.5)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP3", gv_PlayerHero[EventPlayer()], 1);
    } else {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP32", gv_PlayerHero[EventPlayer()], 1);
    }
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP33", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/8A7F65C7") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/36A17EA3")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableSeals();
}

void gf_HrStat26 () {
    const int shop_index = 13;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP323", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/4851ADBC") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/DBB538DF")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableSeals();
}

void gf_HrStat27 () {
    const int shop_index = 14;
    // Upgrade
    gf_HrCriticalChanceLevelIncrease();
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP3233", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/0450D79A") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/924BE64C")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableSeals();
}

void gf_HrStat28 () {
    const int shop_index = 15;
    // Upgrade
    gf_HrCooldownReductionLevelIncrease();
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP323333", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/7CC06727") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/12C02D1B")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableSeals();
}

void gf_HrStat29 () {
    const int shop_index = 16;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP32333", gv_PlayerHero[EventPlayer()], 1);
    gf_HrEvasionLevelIncrease();
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/EAFCB85C") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/0B2277F9")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableSeals();
}

void gf_HrStat30 () {
    const int shop_index = 17;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP323332", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/4CD6BABA") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/0BD69820")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableSeals();
}

void gf_HrStat13 () {
    const int shop_index = 18;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP", gv_PlayerHero[EventPlayer()], 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp4232", 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/3E26FE28") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/50CAF2F4")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/59E5C445") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/D23DAF42")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat14 () {
    const int shop_index = 19;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroGainHP2", gv_PlayerHero[EventPlayer()], 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp4233", 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp4233222", 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp4233222232", 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp42332222332", 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "HeroLvUp423322223322", 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/F76E2374") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/CEE4DA7E")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/7A06C1E6") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/C3E5D723")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat15 () {
    const int shop_index = 20;
    // Upgrade
    gf_HrCooldownReductionLevelIncrease();
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] += 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/74BA56B3") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/97EC7ED4")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    libNtve_gf_SetDialogItemTooltip(gv_StatusWindowBtn[shop_index], (StringExternal("Param/Value/91BB6474") + IntToText(gv_StatHowMoney[shop_index][EventPlayer()]) + StringExternal("Param/Value/6332FECD")), PlayerGroupSingle(EventPlayer()));
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat16 () {
    const int shop_index = 21;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "BoosterItem2", gv_PlayerHero[EventPlayer()], 1);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322232222", 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] = 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/2BBFB346") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/A431C779")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat17 () {
    const int shop_index = 22;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "MagicShield", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] = 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/E63A395A") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/AEFB2F88")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat18 () {
    const int shop_index = 23;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "MagmaFire", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] = 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/F16E4894") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/50B26F7B")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat19 () {
    const int shop_index = 24;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong25", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] = 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/97E83587") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/1E42F4E5")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat20 () {
    const int shop_index = 25;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong252", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] = 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/AA3D08C5") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/2EAA36A2")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat21 () {
    const int shop_index = 26;
    // Implementation
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Gamsi", c_unitCreateIgnorePlacement, EventPlayer(), UnitGetPosition(gv_PlayerHero[EventPlayer()]));
    UnitGroupAdd(gv_WardGroup[EventPlayer()], UnitLastCreated());
    UnitControlGroupAddUnit(EventPlayer(), 3, UnitLastCreated());
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] = 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/44B3468A") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/5214615F")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat22 () {
    const int shop_index = 27;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong242422", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] = 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/4792A2C8") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/B2C67E7D")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat23 () {
    const int shop_index = 28;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroLevelup2", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] = 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/0DBB13B3") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/F51317E6")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrStat24 () {
    const int shop_index = 29;
    // Upgrade
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroLevelup22", gv_PlayerHero[EventPlayer()], 1);
    // Shop Changes
    gv_StatusWindowNum[EventPlayer()][shop_index] = 1;
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][shop_index], (StringExternal("Param/Value/38D5186D") + IntToText(gv_StatusWindowNum[EventPlayer()][shop_index]) + StringExternal("Param/Value/83231539")), PlayerGroupSingle(EventPlayer()));
    lf_PayCostsForShopItem(shop_index);
    lf_DisableShopButtonOnMaxUpgrades(shop_index);
}

void gf_HrAttackSpeedLevelIncrease () {
    // Implementation
    if ((gv_StatusWindowNum[EventPlayer()][8] == 1)) {
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][8] == 2)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "AttackSpeed", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed2", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][8] == 3)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "AttackSpeed2", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed22", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][8] == 4)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "AttackSpeed22", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][8] == 5)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "AttackSpeed222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed2222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][8] == 6)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "AttackSpeed2222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed22222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][8] == 7)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "AttackSpeed22222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed222222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][8] == 8)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "AttackSpeed222222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed2222222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][8] == 9)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "AttackSpeed2222222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed22222222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((gv_StatusWindowNum[EventPlayer()][8] == 10)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "AttackSpeed22222222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "AttackSpeed222222222", gv_PlayerHero[EventPlayer()], 1);
    }
}

void gf_HrEvasionLevelIncrease () {
    // Implementation
    if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "SpellDong24232") == true)) { // 10%
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "SpellDong24232", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong242323", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "SpellDong242323") == true)) { // 20%
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "SpellDong242323", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong2423232", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "SpellDong2423232") == true)) { // 30%
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "SpellDong2423232", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong24232322", gv_PlayerHero[EventPlayer()], 1);
    }
    else {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong24232", gv_PlayerHero[EventPlayer()], 1);
    }
}

void gf_HrCriticalChanceLevelIncrease () {
    // Implementation
    if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Critical") == true)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Critical", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical2", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Critical2") == true)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Critical2", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical22", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Critical22") == true)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Critical22", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Critical222") == true)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Critical222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical2222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Critical2222") == true)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Critical2222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical22222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Critical22222") == true)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Critical22222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical222223", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Critical222223") == true)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Critical222223", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical222222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Critical222222") == true)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Critical222222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical2222222", gv_PlayerHero[EventPlayer()], 1);
    }
    else if ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Critical2222222") == true)) {
        UnitBehaviorRemovePlayer(gv_PlayerHero[EventPlayer()], "Critical2222222", EventPlayer(), 1);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical22222222", gv_PlayerHero[EventPlayer()], 1);
    }
    else {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical", gv_PlayerHero[EventPlayer()], 1);
    }
}

void gf_HrCooldownReductionLevelIncrease () {
    // Implementation
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222332", 2);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222332222", 2);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222332222222", 2);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222332222222222", 2);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332223322222222222", 2);
}

void gf_HrStatTooltip1 () {
    // Implementation
    gv_PlayerProfileAddToolTip[EventPlayer()][0] = (StringExternal("Param/Value/454F0C48") + IntToText(gv_StatusWindowNum[EventPlayer()][0]) + StringExternal("Param/Value/B3285745") + IntToText(gv_StatusWindowNum[EventPlayer()][1]) + StringExternal("Param/Value/BD6955AB") + IntToText(gv_StatusWindowNum[EventPlayer()][2]) + StringExternal("Param/Value/A45AC4F5") + IntToText(gv_StatusWindowNum[EventPlayer()][3]) + StringExternal("Param/Value/BC19B8D0") + IntToText(gv_StatusWindowNum[EventPlayer()][4]) + StringExternal("Param/Value/A99A4175") + IntToText(gv_StatusWindowNum[EventPlayer()][5]));
    gv_PlayerProfileAddToolTip[EventPlayer()][1] = (StringExternal("Param/Value/8BBB5E19") + IntToText(gv_StatusWindowNum[EventPlayer()][6]) + StringExternal("Param/Value/1823CFAF") + IntToText(gv_StatusWindowNum[EventPlayer()][7]) + StringExternal("Param/Value/2885836E") + IntToText(gv_StatusWindowNum[EventPlayer()][8]) + StringExternal("Param/Value/A2FB0C3E") + IntToText(gv_StatusWindowNum[EventPlayer()][9]) + StringExternal("Param/Value/10B42239") + IntToText(gv_StatusWindowNum[EventPlayer()][10]) + StringExternal("Param/Value/50FB32FE") + IntToText(gv_StatusWindowNum[EventPlayer()][11]));
    gv_PlayerProfileAddToolTip[EventPlayer()][2] = (StringExternal("Param/Value/DD0C5473") + IntToText(gv_StatusWindowNum[EventPlayer()][18]) + StringExternal("Param/Value/B70D348E") + IntToText(gv_StatusWindowNum[EventPlayer()][19]) + StringExternal("Param/Value/B4D33109") + IntToText(gv_StatusWindowNum[EventPlayer()][20]) + StringExternal("Param/Value/6245E433") + IntToText(gv_StatusWindowNum[EventPlayer()][21]) + StringExternal("Param/Value/5B340842") + IntToText(gv_StatusWindowNum[EventPlayer()][22]) + StringExternal("Param/Value/B9C2BC99") + IntToText(gv_StatusWindowNum[EventPlayer()][23]));
    gv_PlayerProfileAddToolTip[EventPlayer()][3] = (StringExternal("Param/Value/3D45FE00") + IntToText(gv_StatusWindowNum[EventPlayer()][12]) + StringExternal("Param/Value/534A9DE2") + IntToText(gv_StatusWindowNum[EventPlayer()][13]) + StringExternal("Param/Value/EB492814") + IntToText(gv_StatusWindowNum[EventPlayer()][14]) + StringExternal("Param/Value/3AE29E15") + IntToText(gv_StatusWindowNum[EventPlayer()][15]) + StringExternal("Param/Value/9C0DD5D0") + IntToText(gv_StatusWindowNum[EventPlayer()][16]) + StringExternal("Param/Value/551BCA61") + IntToText(gv_StatusWindowNum[EventPlayer()][17]));
    gv_PlayerProfileAddToolTip[EventPlayer()][4] = (StringExternal("Param/Value/55551A0E") + IntToText(gv_StatusWindowNum[EventPlayer()][27]) + StringExternal("Param/Value/D611CB56") + IntToText(gv_StatusWindowNum[EventPlayer()][28]) + StringExternal("Param/Value/56E9B7F1") + IntToText(gv_StatusWindowNum[EventPlayer()][29]));
    libNtve_gf_SetDialogItemTooltip(gv_ScoreDialogName[EventPlayer()], (StringExternal("Param/Value/7E3ED890") + PlayerName(EventPlayer()) + StringExternal("Param/Value/CBC26373") + StringExternal("Param/Value/FB232C25") + gv_PlayerProfileAddToolTip[EventPlayer()][0] + StringExternal("Param/Value/8E22CA11") + gv_PlayerProfileAddToolTip[EventPlayer()][1] + StringExternal("Param/Value/3102855D") + gv_PlayerProfileAddToolTip[EventPlayer()][2] + StringExternal("Param/Value/33A342C6") + gv_PlayerProfileAddToolTip[EventPlayer()][3] + StringExternal("Param/Value/9CF05C59") + gv_PlayerProfileAddToolTip[EventPlayer()][4] + StringExternal("Param/Value/91926A18")), PlayerGroupAll());
}

void gf_HrItemUseComplete () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_StatusWindowNum[EventPlayer()][28] != 0)) {
        gv_StatusWindowNum[EventPlayer()][28] = 0;
        DialogControlSetEnabled(gv_StatusWindowBtn[28], PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][28], (StringExternal("Param/Value/68B8F61B") + IntToText(gv_StatusWindowNum[EventPlayer()][28]) + StringExternal("Param/Value/9418664B")), PlayerGroupSingle(EventPlayer()));
    }

    if ((gv_StatusWindowNum[EventPlayer()][29] != 0)) {
        gv_StatusWindowNum[EventPlayer()][29] = 0;
        DialogControlSetEnabled(gv_StatusWindowBtn[29], PlayerGroupSingle(EventPlayer()), true);
        libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][29], (StringExternal("Param/Value/5A294C24") + IntToText(gv_StatusWindowNum[EventPlayer()][29]) + StringExternal("Param/Value/4C29070D")), PlayerGroupSingle(EventPlayer()));
    }

    gf_HrStatTooltip1();
}

void gf_HrAssistSystemAdd2 () {
    // Automatic Variable Declarations
    // Implementation
    if ((EventPlayer() == gv_PlayerBayul[1])) {
        UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Player1Assist23", EventPlayerEffectUsedUnit(c_effectUnitTarget), 1);
    }
    else {
        if ((EventPlayer() == gv_PlayerBayul[2])) {
            UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Player1Assist223", EventPlayerEffectUsedUnit(c_effectUnitTarget), 1);
        }
        else {
            if ((EventPlayer() == gv_PlayerBayul[3])) {
                UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Player1Assist2223", EventPlayerEffectUsedUnit(c_effectUnitTarget), 1);
            }
            else {
                if ((EventPlayer() == gv_PlayerBayul[4])) {
                    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Player1Assist22223", EventPlayerEffectUsedUnit(c_effectUnitTarget), 1);
                }
                else {
                    if ((EventPlayer() == gv_PlayerBayul[5])) {
                        UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Player1Assist222223", EventPlayerEffectUsedUnit(c_effectUnitTarget), 1);
                    }
                    else {
                        if ((EventPlayer() == gv_PlayerBayul[6])) {
                            UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Player1Assist2222223", EventPlayerEffectUsedUnit(c_effectUnitTarget), 1);
                        }
                        else {
                            if ((EventPlayer() == gv_PlayerBayul[7])) {
                                UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Player1Assist22222223", EventPlayerEffectUsedUnit(c_effectUnitTarget), 1);
                            }
                            else {
                                if ((EventPlayer() == gv_PlayerBayul[8])) {
                                    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Player1Assist222222222", EventPlayerEffectUsedUnit(c_effectUnitTarget), 1);
                                }

                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrHeroBSpawnH1 () {
    // Automatic Variable Declarations
    // Implementation
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropLifeMax, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLifeMax, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropEnergyMax, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergyMax, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropLife, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLife, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropEnergy, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergy, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropLevel, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLevel, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropXP, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropXP, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropKills, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropKills, c_unitPropCurrent));
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "SpellDong24", EventPlayerEffectUsedUnit(c_effectUnitTarget), gv_StatusWindowNum[EventPlayer()][0]);
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "SpellDong24233", EventPlayerEffectUsedUnit(c_effectUnitTarget), gv_StatusWindowNum[EventPlayer()][1]);
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "DefensePower", EventPlayerEffectUsedUnit(c_effectUnitTarget), (gv_StatusWindowNum[EventPlayer()][2] * 4));
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Amor2", EventPlayerEffectUsedUnit(c_effectUnitTarget), (gv_StatusWindowNum[EventPlayer()][3] * 4));
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "SpellDong2423", EventPlayerEffectUsedUnit(c_effectUnitTarget), gv_StatusWindowNum[EventPlayer()][9]);
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "BoosterItem2", EventPlayerEffectUsedUnit(c_effectUnitTarget), gv_StatusWindowNum[EventPlayer()][15]);
}

void gf_HrHeroBSpawnH2 () {
    // Automatic Variable Declarations
    // Implementation
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropLifeMax, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLifeMax, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropEnergyMax, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergyMax, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropLife, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLife, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropEnergy, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergy, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropLevel, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLevel, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropXP, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropXP, c_unitPropCurrent));
    UnitSetPropertyFixed(EventPlayerEffectUsedUnit(c_effectUnitTarget), c_unitPropKills, UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropKills, c_unitPropCurrent));
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "SpellDong24", EventPlayerEffectUsedUnit(c_effectUnitTarget), gv_StatusWindowNum[EventPlayer()][0]);
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "SpellDong24233", EventPlayerEffectUsedUnit(c_effectUnitTarget), gv_StatusWindowNum[EventPlayer()][1]);
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "DefensePower", EventPlayerEffectUsedUnit(c_effectUnitTarget), (gv_StatusWindowNum[EventPlayer()][2] * 4));
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Amor2", EventPlayerEffectUsedUnit(c_effectUnitTarget), (gv_StatusWindowNum[EventPlayer()][3] * 4));
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "Hero61Skill4Attackspeed", EventPlayerEffectUsedUnit(c_effectUnitTarget), gv_StatusWindowNum[EventPlayer()][8]);
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "SpellDong2423", EventPlayerEffectUsedUnit(c_effectUnitTarget), gv_StatusWindowNum[EventPlayer()][9]);
    UnitBehaviorAdd(EventPlayerEffectUsedUnit(c_effectUnitTarget), "BoosterItem2", EventPlayerEffectUsedUnit(c_effectUnitTarget), gv_StatusWindowNum[EventPlayer()][15]);
}

void gf_HrMonsterBuffPickUp1 () {
    // Automatic Variable Declarations
    // Implementation
    gv_HeroBuffIng[libNtve_gf_KillingPlayer()][1] = 1;
    if ((UnitHasBehavior(gv_PlayerHero[libNtve_gf_KillingPlayer()], "SpellDong242423") == true)) {
        PlayerCreateEffectUnit(libNtve_gf_KillingPlayer(), "HealingLifeH33", gv_PlayerHero[libNtve_gf_KillingPlayer()]);
        UnitBehaviorAdd(gv_PlayerHero[libNtve_gf_KillingPlayer()], "SpellDong242423", gv_PlayerHero[libNtve_gf_KillingPlayer()], 1);
    }
    else {
        PlayerCreateEffectUnit(libNtve_gf_KillingPlayer(), "HealingLifeH33", gv_PlayerHero[libNtve_gf_KillingPlayer()]);
        UnitBehaviorAdd(gv_PlayerHero[libNtve_gf_KillingPlayer()], "SpellDong242423", gv_PlayerHero[libNtve_gf_KillingPlayer()], 1);
        TechTreeUpgradeAddLevel(libNtve_gf_KillingPlayer(), "SpellUp2222333222332", 2);
        TechTreeUpgradeAddLevel(libNtve_gf_KillingPlayer(), "SpellUp2222333222332222", 2);
        TechTreeUpgradeAddLevel(libNtve_gf_KillingPlayer(), "SpellUp2222333222332222222", 2);
        TechTreeUpgradeAddLevel(libNtve_gf_KillingPlayer(), "SpellUp2222333222332222222222", 2);
    }
}

void gf_HrMonsterBuffPickUp2 () {
    // Automatic Variable Declarations
    // Implementation
    gv_HeroBuffIng[libNtve_gf_KillingPlayer()][0] = 1;
    PlayerCreateEffectUnit(libNtve_gf_KillingPlayer(), "HealingLifeH33", gv_PlayerHero[libNtve_gf_KillingPlayer()]);
    if ((gv_CharNoMana[libNtve_gf_KillingPlayer()] != 3)) {
        UnitBehaviorAdd(gv_PlayerHero[libNtve_gf_KillingPlayer()], "SpellDong24242", gv_PlayerHero[libNtve_gf_KillingPlayer()], 1);
    }
    else {
        UnitBehaviorAdd(gv_PlayerHero[libNtve_gf_KillingPlayer()], "SpellDong242424", gv_PlayerHero[libNtve_gf_KillingPlayer()], 1);
    }
}

void gf_HrMonsterBuffPickUp4 () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80;

    // Automatic Variable Declarations
    const int auto8631C532_ae = 4;
    const int auto8631C532_ai = 1;
    const int auto47A23E18_ae = 8;
    const int auto47A23E18_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;

    // Implementation
    if ((gv_MonsterKillOnlyOne[0] == false)) {
        gv_MonsterKillOnlyOne[0] = true;
        SoundPlay(SoundLink("Ursula_Death", -1), PlayerGroupAll(), 200.0, 0.0);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/99A72CA0") + TextWithColor(StringExternal("Param/Value/A641DDBE"), Color(100.00, 100.00, 0.00)) + StringExternal("Param/Value/E82D3D1F")));
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), libNtve_gf_KillingPlayer()) == true)) {
            lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
            for ( ; ( (auto8631C532_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 <= auto8631C532_ae) || (auto8631C532_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 >= auto8631C532_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 += auto8631C532_ai ) {
                if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerStatusActive)) {
                    UIDisplayMessage(PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]), c_messageAreaSubtitle, (StringExternal("Param/Value/384EF115") + TextWithColor(StringExternal("Param/Value/72EB257C"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/C728AE8E")));
                    PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], c_playerPropMinerals, c_playerPropOperAdd, 400);
                    if ((UnitHasBehavior(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], "SpellDong2424") == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]] == false)) {
                        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], "SpellDong2424", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], 1);
                    }
                    else {
                        if ((UnitHasBehavior(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], "SpellDong2424") == false) && (gv_HeroDeathBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]] == false)) {
                            UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], "SpellDong2424", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], 1);
                            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], "SpellUp222233322232", 3);
                            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], "SpellUp2222333222323", 3);
                            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], "SpellUp2222333222322", 3);
                            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], "SpellUp22223332223", 3);
                            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], "SpellUp222233322233", 3);
                            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], "SpellUp2222333222333", 3);
                            UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], "SpellDong24", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], 3);
                            UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], "SpellDong24233", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], 3);
                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]] == 71)) {
                                UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], "Hero71Passive", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], 3);
                            }

                        }

                    }
                }

            }
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), libNtve_gf_KillingPlayer()) == true)) {
                lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;
                for ( ; ( (auto47A23E18_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 <= auto47A23E18_ae) || (auto47A23E18_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 >= auto47A23E18_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 += auto47A23E18_ai ) {
                    if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerStatusActive)) {
                        UIDisplayMessage(PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]), c_messageAreaSubtitle, (StringExternal("Param/Value/28830AB3") + TextWithColor(StringExternal("Param/Value/389DCFE8"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/C1BDEC9F")));
                        PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], c_playerPropMinerals, c_playerPropOperAdd, 400);
                        if ((UnitHasBehavior(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], "SpellDong2424") == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]] == false)) {
                            UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], "SpellDong2424", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], 1);
                        }
                        else {
                            if ((UnitHasBehavior(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], "SpellDong2424") == false) && (gv_HeroDeathBoolean[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]] == false)) {
                                UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], "SpellDong2424", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], 1);
                                TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], "SpellUp222233322232", 3);
                                TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], "SpellUp2222333222323", 3);
                                TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], "SpellUp2222333222322", 3);
                                TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], "SpellUp22223332223", 3);
                                TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], "SpellUp222233322233", 3);
                                TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], "SpellUp2222333222333", 3);
                                UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], "SpellDong24", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], 3);
                                UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], "SpellDong24233", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], 3);
                                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]] == 71)) {
                                    UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], "Hero71Passive", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], 3);
                                }

                            }

                        }
                    }

                }
            }

        }
    }

}

void gf_HrMonsterBuffPickUp3 () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80;

    // Automatic Variable Declarations
    const int auto266A3258_ae = 4;
    const int auto266A3258_ai = 1;
    const int auto4270D250_ae = 8;
    const int auto4270D250_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;

    // Implementation
    if ((gv_MonsterKillOnlyOne[1] == false)) {
        gv_MonsterKillOnlyOne[1] = true;
        SoundPlay(SoundLink("Ursula_Death", -1), PlayerGroupAll(), 200.0, 0.0);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/5F908B50") + TextWithColor(StringExternal("Param/Value/E5AC2DF6"), Color(100.00, 100.00, 0.00)) + StringExternal("Param/Value/11A402F4")));
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), libNtve_gf_KillingPlayer()) == true)) {
            lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
            for ( ; ( (auto266A3258_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 <= auto266A3258_ae) || (auto266A3258_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 >= auto266A3258_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 += auto266A3258_ai ) {
                if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerStatusActive)) {
                    UIDisplayMessage(PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]), c_messageAreaSubtitle, (StringExternal("Param/Value/0B2706A5") + TextWithColor(StringExternal("Param/Value/C825D102"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/0B1E7918")));
                    PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], c_playerPropMinerals, c_playerPropOperAdd, 350);
                }

            }
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), libNtve_gf_KillingPlayer()) == true)) {
                lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;
                for ( ; ( (auto4270D250_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 <= auto4270D250_ae) || (auto4270D250_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 >= auto4270D250_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 += auto4270D250_ai ) {
                    if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerStatusActive)) {
                        UIDisplayMessage(PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]), c_messageAreaSubtitle, (StringExternal("Param/Value/23CF5BBC") + TextWithColor(StringExternal("Param/Value/4415B380"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/C9C7F429")));
                        PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], c_playerPropMinerals, c_playerPropOperAdd, 350);
                    }

                }
            }

        }
    }

}

void gf_HrMonsterBirdRegenTimerStart () {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitGroupHasUnit(gv_MonsterBirdGroup[0], EventUnit()) == true) && (gv_RegenNewTimerBirdBoolean[0] == false)) {
        gv_RegenNewTimerBirdBoolean[0] = true;
        if ((gv_RegenNewTimerBirdStrong[0] < 20)) {
            gv_RegenNewTimerBirdStrong[0] += 1;
        }

        PlayerCreateEffectPoint(11, "MonsterMakeTimerG", PointFromId(554));
        UnitRemove(gv_MonsterBirdPing1[0]);
    }
    else {
        if ((UnitGroupHasUnit(gv_MonsterBirdGroup[1], EventUnit()) == true) && (gv_RegenNewTimerBirdBoolean[1] == false)) {
            gv_RegenNewTimerBirdBoolean[1] = true;
            if ((gv_RegenNewTimerBirdStrong[1] < 20)) {
                gv_RegenNewTimerBirdStrong[1] += 1;
            }

            PlayerCreateEffectPoint(11, "MonsterMakeTimerG", PointFromId(555));
            UnitRemove(gv_MonsterBirdPing1[1]);
        }

    }
}

void gf_HrMonsterDogRegenTimerStart () {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitGroupHasUnit(gv_MonsterDogGroup[0], EventUnit()) == true) && (gv_RegenNewTimerDogBoolean[0] == false)) {
        gv_RegenNewTimerDogBoolean[0] = true;
        if ((gv_RegenNewTimerDogStrong[0] < 20)) {
            gv_RegenNewTimerDogStrong[0] += 1;
        }

        PlayerCreateEffectPoint(11, "MonsterMakeTimerG3", PointFromId(560));
        UnitRemove(gv_MonsterDogPing1[0]);
    }
    else {
        if ((UnitGroupHasUnit(gv_MonsterDogGroup[1], EventUnit()) == true) && (gv_RegenNewTimerDogBoolean[1] == false)) {
            gv_RegenNewTimerDogBoolean[1] = true;
            if ((gv_RegenNewTimerDogStrong[1] < 20)) {
                gv_RegenNewTimerDogStrong[1] += 1;
            }

            PlayerCreateEffectPoint(11, "MonsterMakeTimerG3", PointFromId(556));
            UnitRemove(gv_MonsterDogPing1[1]);
        }

    }
}

void gf_HrMonsterCowRegenTimerStart () {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitGroupHasUnit(gv_MonsterCowGroup[0], EventUnit()) == true) && (gv_RegenNewTimerCowBoolean[0] == false)) {
        gv_RegenNewTimerCowBoolean[0] = true;
        if ((gv_RegenNewTimerCowStrong[0] < 20)) {
            gv_RegenNewTimerCowStrong[0] += 1;
        }

        PlayerCreateEffectPoint(11, "MonsterMakeTimerG32", PointFromId(214));
        UnitRemove(gv_MonsterCowPing1[0]);
    }
    else {
        if ((UnitGroupHasUnit(gv_MonsterCowGroup[1], EventUnit()) == true) && (gv_RegenNewTimerCowBoolean[1] == false)) {
            gv_RegenNewTimerCowBoolean[1] = true;
            if ((gv_RegenNewTimerCowStrong[1] < 20)) {
                gv_RegenNewTimerCowStrong[1] += 1;
            }

            PlayerCreateEffectPoint(11, "MonsterMakeTimerG32", PointFromId(157));
            UnitRemove(gv_MonsterCowPing1[1]);
        }

    }
}

void gf_HrMonsterGarlicRegenTimerStart () {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitGroupHasUnit(gv_MonsterGalicGroup[0], EventUnit()) == true) && (gv_RegenNewTimerGalicBoolean[0] == false)) {
        gv_RegenNewTimerGalicBoolean[0] = true;
        if ((gv_RegenNewTimerGalicStrong[0] < 20)) {
            gv_RegenNewTimerGalicStrong[0] += 1;
        }

        PlayerCreateEffectPoint(11, "MonsterMakeTimerG3222", PointFromId(548));
        UnitRemove(gv_MonsterGalicPing1[0]);
    }
    else {
        if ((UnitGroupHasUnit(gv_MonsterGalicGroup[1], EventUnit()) == true) && (gv_RegenNewTimerGalicBoolean[1] == false)) {
            gv_RegenNewTimerGalicBoolean[1] = true;
            if ((gv_RegenNewTimerGalicStrong[1] < 20)) {
                gv_RegenNewTimerGalicStrong[1] += 1;
            }

            PlayerCreateEffectPoint(11, "MonsterMakeTimerG3222", PointFromId(551));
            UnitRemove(gv_MonsterGalicPing1[1]);
        }

    }
}

void gf_HrMonsterScorpionRegenTimerStart () {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitGroupHasUnit(gv_MonsterScolpionGroup[0], EventUnit()) == true) && (gv_RegenNewTimerScolpionBoolean[0] == false)) {
        gv_RegenNewTimerScolpionBoolean[0] = true;
        if ((gv_RegenNewTimerScolpionStrong[0] < 20)) {
            gv_RegenNewTimerScolpionStrong[0] += 1;
        }

        PlayerCreateEffectPoint(11, "MonsterMakeTimerG32222", PointFromId(564));
        UnitRemove(gv_MonsterScolpionPing1[0]);
    }
    else {
        if ((UnitGroupHasUnit(gv_MonsterScolpionGroup[1], EventUnit()) == true) && (gv_RegenNewTimerScolpionBoolean[1] == false)) {
            gv_RegenNewTimerScolpionBoolean[1] = true;
            if ((gv_RegenNewTimerScolpionStrong[1] < 20)) {
                gv_RegenNewTimerScolpionStrong[1] += 1;
            }

            PlayerCreateEffectPoint(11, "MonsterMakeTimerG32222", PointFromId(567));
            UnitRemove(gv_MonsterScolpionPing1[1]);
        }

    }
}

void gf_HrMonsterIceBugRegenTimerStart () {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitGroupHasUnit(gv_MonsterIceBugGroup[0], EventUnit()) == true) && (gv_RegenNewTimerIceBugBoolean[0] == false)) {
        gv_RegenNewTimerIceBugBoolean[0] = true;
        if ((gv_RegenNewTimerIceBugStrong[0] < 20)) {
            gv_RegenNewTimerIceBugStrong[0] += 1;
        }

        PlayerCreateEffectPoint(11, "MonsterMakeTimerG322", PointFromId(570));
        UnitRemove(gv_MonsterIceBugPing1[0]);
    }
    else {
        if ((UnitGroupHasUnit(gv_MonsterIceBugGroup[1], EventUnit()) == true) && (gv_RegenNewTimerIceBugBoolean[1] == false)) {
            gv_RegenNewTimerIceBugBoolean[1] = true;
            if ((gv_RegenNewTimerIceBugStrong[1] < 20)) {
                gv_RegenNewTimerIceBugStrong[1] += 1;
            }

            PlayerCreateEffectPoint(11, "MonsterMakeTimerG322", PointFromId(573));
            UnitRemove(gv_MonsterIceBugPing1[1]);
        }
        else {
            if ((UnitGroupHasUnit(gv_MonsterIceBugGroup[2], EventUnit()) == true) && (gv_RegenNewTimerIceBugBoolean[2] == false)) {
                gv_RegenNewTimerIceBugBoolean[2] = true;
                if ((gv_RegenNewTimerIceBugStrong[2] < 20)) {
                    gv_RegenNewTimerIceBugStrong[2] += 1;
                }

                PlayerCreateEffectPoint(11, "MonsterMakeTimerG322", PointFromId(574));
                UnitRemove(gv_MonsterIceBugPing1[2]);
            }
            else {
                if ((UnitGroupHasUnit(gv_MonsterIceBugGroup[3], EventUnit()) == true) && (gv_RegenNewTimerIceBugBoolean[3] == false)) {
                    gv_RegenNewTimerIceBugBoolean[3] = true;
                    if ((gv_RegenNewTimerIceBugStrong[3] < 20)) {
                        gv_RegenNewTimerIceBugStrong[3] += 1;
                    }

                    PlayerCreateEffectPoint(11, "MonsterMakeTimerG322", PointFromId(577));
                    UnitRemove(gv_MonsterIceBugPing1[3]);
                }

            }
        }
    }
}

void gf_HrMonsterBossRegenTimerStart () {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitGroupHasUnit(gv_MonsterBossGroup[0], EventUnit()) == true) && (gv_RegenNewTimerIceBossBoolean[0] == false)) {
        gv_RegenNewTimerIceBossBoolean[0] = true;
        if ((gv_RegenNewTimerIceBossStrong[0] < 5)) {
            gv_RegenNewTimerIceBossStrong[0] += 1;
        }

        PlayerCreateEffectPoint(11, "MonsterMakeTimerG322222", PointFromId(578));
        UnitRemove(gv_MonsterIceBossPing1[0]);
    }
    else {
        if ((UnitGroupHasUnit(gv_MonsterBossGroup[1], EventUnit()) == true) && (gv_RegenNewTimerIceBossBoolean[1] == false)) {
            gv_RegenNewTimerIceBossBoolean[1] = true;
            if ((gv_RegenNewTimerIceBossStrong[1] < 5)) {
                gv_RegenNewTimerIceBossStrong[1] += 1;
            }

            PlayerCreateEffectPoint(11, "MonsterMakeTimerG322222", PointFromId(579));
            UnitRemove(gv_MonsterIceBossPing1[1]);
        }

    }
}

void gf_HrHeroReviveWindowMake () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int auto569A25A6_ae = 8;
    const int auto569A25A6_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Implementation
    DialogCreate(850, 400, c_anchorCenter, 0, -100, true);
    gv_HeroReviveWindow = DialogLastCreated();
    DialogSetImageVisible(gv_HeroReviveWindow, false);
    DialogControlCreate(gv_HeroReviveWindow, c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 825, 80);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, 0, -100);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), StringExternal("Param/Value/781CCDB4"), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (auto569A25A6_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= auto569A25A6_ae) || (auto569A25A6_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= auto569A25A6_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += auto569A25A6_ai ) {
        DialogControlCreate(gv_HeroReviveWindow, c_triggerControlTypeLabel);
        DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 500, 80);
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, 0, 30);
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/C2E7A3BA") + IntToText(20) + StringExternal("Param/Value/254C3E7A")), PlayerGroupAll());
        libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
        DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
        gv_HeroReviveWindowTime[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = DialogControlLastCreated();
    }
}

void gf_HrHeroSkillIncreaseEffect () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[gv_HeroKillPlayer[EventPlayer()]] == 32) && (gv_SkillWLevel[gv_HeroKillPlayer[EventPlayer()]] >= 1)) {
        PlayerCreateEffectPoint(gv_HeroKillPlayer[EventPlayer()], "Hero32Skill2G22", PointFromId(1));
    }
    else {
        if ((gv_SelectedCharNum[gv_HeroKillPlayer[EventPlayer()]] == 46) && (TechTreeUpgradeCount(gv_HeroKillPlayer[EventPlayer()], "SpellUp222233322343", c_techCountCompleteOnly) < 50)) {
            UnitBehaviorAdd(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "Hero46Passive", gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], 2);
            TechTreeUpgradeAddLevel(gv_HeroKillPlayer[EventPlayer()], "SpellUp222233322343", 2);
        }
        else {
            if ((gv_SelectedCharNum[gv_HeroKillPlayer[EventPlayer()]] == 66) && (TechTreeUpgradeCount(gv_HeroKillPlayer[EventPlayer()], "SpellUp222233322722322", c_techCountCompleteOnly) < 24)) {
                TechTreeUpgradeAddLevel(gv_HeroKillPlayer[EventPlayer()], "SpellUp222233322722322", 1);
                if (((TechTreeUpgradeCount(gv_HeroKillPlayer[EventPlayer()], "SpellUp222233322722322", c_techCountCompleteOnly) == 4) || (TechTreeUpgradeCount(gv_HeroKillPlayer[EventPlayer()], "SpellUp222233322722322", c_techCountCompleteOnly) == 8) || (TechTreeUpgradeCount(gv_HeroKillPlayer[EventPlayer()], "SpellUp222233322722322", c_techCountCompleteOnly) == 12) || (TechTreeUpgradeCount(gv_HeroKillPlayer[EventPlayer()], "SpellUp222233322722322", c_techCountCompleteOnly) == 16) || (TechTreeUpgradeCount(gv_HeroKillPlayer[EventPlayer()], "SpellUp222233322722322", c_techCountCompleteOnly) == 24))) {
                    PlayerCreateEffectPoint(gv_HeroKillPlayer[EventPlayer()], "Hero66Passive", PointFromId(1));
                }

            }
            else {
                if ((gv_SelectedCharNum[gv_HeroKillPlayer[EventPlayer()]] == 70) && (UnitHasBehavior(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "Hero70Skill2cool") == true)) {
                    UnitCreateEffectUnit(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "Hero70Skill2Dong3", gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]]);
                }

            }
        }
    }
}

void gf_HrHeroSkillIncreaseEffect2 () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_SelectedCharNum[EventPlayer()] == 24)) {
        PlayerCreateEffectPoint(EventPlayer(), "Hero24Death", UnitGetPosition(EventUnit()));
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 54)) {
            UnitBehaviorRemove(EventUnit(), "Hero54Passive", (TechTreeBehaviorCount(EventPlayer(), "Hero54Passive", c_techCountInProgressOrBetter) / 2));
            UnitBehaviorRemove(EventUnit(), "Hero54Passive2", (TechTreeBehaviorCount(EventPlayer(), "Hero54Passive2", c_techCountInProgressOrBetter) / 2));
            UnitBehaviorRemove(EventUnit(), "Hero54Passive22", (TechTreeBehaviorCount(EventPlayer(), "Hero54Passive22", c_techCountInProgressOrBetter) / 2));
            UnitBehaviorRemove(EventUnit(), "Hero54Passive222", (TechTreeBehaviorCount(EventPlayer(), "Hero54Passive222", c_techCountInProgressOrBetter) / 2));
        }

    }
}

void gf_HrHeroAllKillMessage () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_GameEndBoolean == false) && (((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[1]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[2]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[3]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[4]] == true) && (gv_HeroAllKill[0] == false) && (PlayerGroupCount(gv_TeamPlayerGroup[0]) >= 2)) || ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[5]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[6]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[7]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[8]] == true) && (gv_HeroAllKill[1] == false) && (PlayerGroupCount(gv_TeamPlayerGroup[1]) >= 2)))) {
        Wait(1.0, c_timeReal);
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_HeroAllKill[0] == false)) {
            gv_HeroAllKill[0] = true;
            SoundPlay(SoundLink("SystemSound22", -1), GameAttributePlayersForTeam(1), 200.0, 0.0);
            SoundPlay(SoundLink("SystemSound2", -1), GameAttributePlayersForTeam(2), 200.0, 0.0);
            UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/7857B2B6") + TextWithColor(StringExternal("Param/Value/1F561659"), Color(100.00, 0.00, 0.00)) + StringExternal("Param/Value/FF226EE3")));
            UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/194C4BFC") + TextWithColor(StringExternal("Param/Value/8C5502B7"), Color(100.00, 0.00, 0.00)) + StringExternal("Param/Value/FC6E6AA4")));
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_HeroAllKill[1] == false)) {
                gv_HeroAllKill[1] = true;
                SoundPlay(SoundLink("SystemSound22", -1), GameAttributePlayersForTeam(2), 200.0, 0.0);
                SoundPlay(SoundLink("SystemSound2", -1), GameAttributePlayersForTeam(1), 200.0, 0.0);
                UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/963C7A18") + TextWithColor(StringExternal("Param/Value/9271688F"), Color(100.00, 0.00, 0.00)) + StringExternal("Param/Value/09B39D91")));
                UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/A3DC4FC2") + TextWithColor(StringExternal("Param/Value/1D6118B0"), Color(100.00, 0.00, 0.00)) + StringExternal("Param/Value/7EE08D4A")));
            }

        }
    }

}

void gf_HrHeroAddKillMessage () {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitHasBehavior(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "PlayerGKill") == true) && (UnitHasBehavior(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "PlayerGKill2") == true)) {
        if ((UnitBehaviorCount(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "PlayerGKill2") == 2)) {
            SoundPlay(SoundLink("SystemSound3", -1), PlayerGroupAll(), 200.0, 0.0);
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/BE5FE003") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/AB71EABA"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/C12AB978")));
        }
        else {
            if ((UnitBehaviorCount(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "PlayerGKill2") == 3)) {
                SoundPlay(SoundLink("SystemSound32", -1), PlayerGroupAll(), 200.0, 0.0);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/2A008C47") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/7146803F"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/1D6D54E4")));
            }
            else {
                if ((UnitBehaviorCount(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "PlayerGKill2") == 4)) {
                    SoundPlay(SoundLink("SystemSound322", -1), PlayerGroupAll(), 200.0, 0.0);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/E93C159A") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/87097627"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/C93617CD")));
                }

            }
        }
    }
    else {
        if ((UnitHasBehavior(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "PlayerGKill") == false) && (gv_HeroNonStopKill[gv_HeroKillPlayer[EventPlayer()]] >= 2)) {
            if ((gv_HeroNonStopKill[gv_HeroKillPlayer[EventPlayer()]] == 2)) {
                SoundPlay(SoundLink("SystemSound3234", -1), PlayerGroupAll(), 200.0, 0.0);
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/E6F97B35") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/A21CFBE1"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/018568F0")));
            }
            else {
                if ((gv_HeroNonStopKill[gv_HeroKillPlayer[EventPlayer()]] == 3)) {
                    SoundPlay(SoundLink("SystemSound32342", -1), PlayerGroupAll(), 200.0, 0.0);
                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/796E1E00") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/4C15A50D"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/AEC890D1")));
                }
                else {
                    if ((gv_HeroNonStopKill[gv_HeroKillPlayer[EventPlayer()]] == 4)) {
                        SoundPlay(SoundLink("SystemSound323422", -1), PlayerGroupAll(), 200.0, 0.0);
                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/D41287B8") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/50A89A4B"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/7BDAFC68")));
                    }
                    else {
                        if ((gv_HeroNonStopKill[gv_HeroKillPlayer[EventPlayer()]] == 5)) {
                            SoundPlay(SoundLink("SystemSound323", -1), PlayerGroupAll(), 200.0, 0.0);
                            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/56211A06") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/00C847D5"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/9AA0EC4A")));
                        }
                        else {
                            if ((gv_HeroNonStopKill[gv_HeroKillPlayer[EventPlayer()]] == 6)) {
                                SoundPlay(SoundLink("SystemSound3232", -1), PlayerGroupAll(), 200.0, 0.0);
                                UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/A97DE4A0") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/3619623F"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/7CBD2A7C")));
                            }
                            else {
                                if ((gv_HeroNonStopKill[gv_HeroKillPlayer[EventPlayer()]] == 7)) {
                                    SoundPlay(SoundLink("SystemSound3233", -1), PlayerGroupAll(), 200.0, 0.0);
                                    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/E9D21E31") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/551276B1"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/4ED678AB")));
                                }
                                else {
                                    if ((gv_HeroNonStopKill[gv_HeroKillPlayer[EventPlayer()]] >= 8)) {
                                        SoundPlay(SoundLink("SystemSound32332", -1), PlayerGroupAll(), 200.0, 0.0);
                                        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/F7ECA966") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + TextWithColor(StringExternal("Param/Value/1141AA81"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/398F817B")));
                                    }

                                }
                            }
                        }
                    }
                }
            }
        }

    }
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/76DCFFCF") + TextWithColor(PlayerName(gv_HeroKillPlayer[EventPlayer()]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_HeroKillPlayer[EventPlayer()], false))) + StringExternal("Param/Value/DAB50B22") + TextWithColor(UnitTypeGetName(UnitGetType(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]])), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/94486C00") + StringExternal("Param/Value/05DC0F58") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/365C631C") + TextWithColor(UnitTypeGetName(UnitGetType(gv_PlayerHero[EventPlayer()])), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/5BF56652") + StringExternal("Param/Value/3B1C6BBD")));
}

void gf_HrAssistantBonusTeam1 () {
    int init_i;

    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;
    text[12] lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898;
    bool[12] lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4;
    int lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90;

    // Automatic Variable Declarations
    const int auto6FD40A14_ae = 4;
    const int auto6FD40A14_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for (init_i = 0; init_i <= 11; init_i += 1) {
        lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[init_i] = StringToText("");
    }

    // Implementation
    if ((PlayerType(gv_PlayerBayul[1]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[1]) == c_playerStatusActive) && (gv_HeroKillPlayer[EventPlayer()] != gv_PlayerBayul[1]) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist") == true)) {
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[1]] = true;
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 += 1;
    }

    if ((PlayerType(gv_PlayerBayul[2]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[2]) == c_playerStatusActive) && (gv_HeroKillPlayer[EventPlayer()] != gv_PlayerBayul[2]) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist3") == true)) {
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[2]] = true;
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 += 1;
    }

    if ((PlayerType(gv_PlayerBayul[3]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[3]) == c_playerStatusActive) && (gv_HeroKillPlayer[EventPlayer()] != gv_PlayerBayul[3]) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist32") == true)) {
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[3]] = true;
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 += 1;
    }

    if ((PlayerType(gv_PlayerBayul[4]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[4]) == c_playerStatusActive) && (gv_HeroKillPlayer[EventPlayer()] != gv_PlayerBayul[4]) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist322") == true)) {
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[4]] = true;
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 += 1;
    }

    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (auto6FD40A14_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto6FD40A14_ae) || (auto6FD40A14_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto6FD40A14_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto6FD40A14_ai ) {
        if ((lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == true)) {
            lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = (TextWithColor(PlayerName(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], false))) + StringExternal("Param/Value/3934F88A"));
            gv_PlayerLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][3] += 1;
            PlayerCreateEffectUnit(EventPlayer(), "HeroKillMo2", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]);
            libNtve_gf_SetDialogItemText(gv_ScoreDialogTotalScore[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], (StringExternal("Param/Value/2C3357F5") + IntToText(gv_PlayerLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][1]) + StringExternal("Param/Value/D9E79FA4") + IntToText(gv_PlayerLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][2]) + StringExternal("Param/Value/DC65B07B") + IntToText(gv_PlayerLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][3]) + StringExternal("Param/Value/39AC057A")), PlayerGroupAll());
            UIDisplayMessage(PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_messageAreaSubtitle, (StringExternal("Param/Value/7498FB6B") + TextWithColor(StringExternal("Param/Value/A61AFE81"), Color(0.00, 87.45, 100.00)) + TextWithColor(IntToText(gv_HeroKillMoney[EventPlayer()][2]), Color(0.00, 87.45, 100.00)) + TextWithColor(StringExternal("Param/Value/DE3747DD"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/D089DE34")));
            if ((gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][15] == 1)) {
                PlayerCreateEffectUnit(EventPlayer(), "HeroKillMo22", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]);
                UIDisplayMessage(PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_messageAreaSubtitle, (StringExternal("Param/Value/F7E20A48") + TextWithColor(StringExternal("Param/Value/2C30D7B6"), Color(0.00, 87.45, 100.00)) + TextWithColor(IntToText((gv_HeroKillMoney[EventPlayer()][2] / 2)), Color(0.00, 87.45, 100.00)) + TextWithColor(StringExternal("Param/Value/3BEF4AFB"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/17688C44")));
            }

            if (((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 4) || (gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 4)) && (UnitHasBehavior(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "SpellDong4") == true)) {
                UnitCreateEffectUnit(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "Spelldong22", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]);
            }

            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 32) && (gv_SkillWLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] >= 1)) {
                PlayerCreateEffectPoint(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "Hero32Skill2G22", PointFromId(1));
            }
            else {
                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 34) && (gv_SkillRLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] >= 1)) {
                    PlayerCreateEffectPoint(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "Hero34Skill4G", PointFromId(1));
                }
                else {
                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 46) && (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322343", c_techCountCompleteOnly) < 50)) {
                        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "Hero46Passive", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], 1);
                        TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322343", 1);
                    }
                    else {
                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 66) && (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) < 24)) {
                            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", 1);
                            if (((TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 4) || (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 8) || (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 12) || (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 16) || (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 24))) {
                                PlayerCreateEffectPoint(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "Hero66Passive", PointFromId(1));
                            }

                        }
                        else {
                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 70) && (UnitHasBehavior(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "Hero70Skill2cool") == true)) {
                                UnitCreateEffectUnit(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "Hero70Skill2Dong3", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]);
                            }

                        }
                    }
                }
            }
        }

    }
    if ((lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 >= 1)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/A1D07191") + lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[1]] + lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[2]] + lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[3]] + lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[4]] + StringExternal("Param/Value/D2E6CCBC")));
    }

}

void gf_HrAssistantBonusTeam2 () {
    int init_i;

    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;
    text[12] lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898;
    bool[12] lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4;
    int lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90;

    // Automatic Variable Declarations
    const int auto5F196C6B_ae = 8;
    const int auto5F196C6B_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 5;
    for (init_i = 0; init_i <= 11; init_i += 1) {
        lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[init_i] = StringToText("");
    }

    // Implementation
    if ((PlayerType(gv_PlayerBayul[5]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[5]) == c_playerStatusActive) && (gv_HeroKillPlayer[EventPlayer()] != gv_PlayerBayul[5]) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist3222") == true)) {
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[5]] = true;
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 += 1;
    }

    if ((PlayerType(gv_PlayerBayul[6]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[6]) == c_playerStatusActive) && (gv_HeroKillPlayer[EventPlayer()] != gv_PlayerBayul[6]) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist32222") == true)) {
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[6]] = true;
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 += 1;
    }

    if ((PlayerType(gv_PlayerBayul[7]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[7]) == c_playerStatusActive) && (gv_HeroKillPlayer[EventPlayer()] != gv_PlayerBayul[7]) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist322222") == true)) {
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[7]] = true;
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 += 1;
    }

    if ((PlayerType(gv_PlayerBayul[8]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[8]) == c_playerStatusActive) && (gv_HeroKillPlayer[EventPlayer()] != gv_PlayerBayul[8]) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist3222222") == true)) {
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[8]] = true;
        lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 += 1;
    }

    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 5;
    for ( ; ( (auto5F196C6B_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto5F196C6B_ae) || (auto5F196C6B_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto5F196C6B_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto5F196C6B_ai ) {
        if ((lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8EC9DB8ECA69DED948CEBA088EC9DB4EC96B4[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == true)) {
            lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = (TextWithColor(PlayerName(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], false))) + StringExternal("Param/Value/057E1FFE"));
            gv_PlayerLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][3] += 1;
            PlayerCreateEffectUnit(EventPlayer(), "HeroKillMo2", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]);
            libNtve_gf_SetDialogItemText(gv_ScoreDialogTotalScore[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], (StringExternal("Param/Value/30C3264C") + IntToText(gv_PlayerLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][1]) + StringExternal("Param/Value/C140D7C8") + IntToText(gv_PlayerLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][2]) + StringExternal("Param/Value/9130939D") + IntToText(gv_PlayerLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][3]) + StringExternal("Param/Value/581A015F")), PlayerGroupAll());
            UIDisplayMessage(PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_messageAreaSubtitle, (StringExternal("Param/Value/878D3123") + TextWithColor(StringExternal("Param/Value/86749EDE"), Color(0.00, 87.45, 100.00)) + TextWithColor(IntToText(gv_HeroKillMoney[EventPlayer()][2]), Color(0.00, 87.45, 100.00)) + TextWithColor(StringExternal("Param/Value/F27D4BF3"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/806A603B")));
            if ((gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][15] == 1)) {
                PlayerCreateEffectUnit(EventPlayer(), "HeroKillMo22", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]);
                UIDisplayMessage(PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), c_messageAreaSubtitle, (StringExternal("Param/Value/0DFFE2F2") + TextWithColor(StringExternal("Param/Value/4B765203"), Color(0.00, 87.45, 100.00)) + TextWithColor(IntToText((gv_HeroKillMoney[EventPlayer()][2] / 2)), Color(0.00, 87.45, 100.00)) + TextWithColor(StringExternal("Param/Value/602F3107"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/0A4EA953")));
            }

            if (((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 4) || (gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 4)) && (UnitHasBehavior(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "SpellDong4") == true)) {
                UnitCreateEffectUnit(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "Spelldong22", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]);
            }

            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 32) && (gv_SkillWLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] >= 1)) {
                PlayerCreateEffectPoint(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "Hero32Skill2G22", PointFromId(1));
            }
            else {
                if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 34) && (gv_SkillRLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] >= 1)) {
                    PlayerCreateEffectPoint(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "Hero34Skill4G", PointFromId(1));
                }
                else {
                    if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 46) && (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322343", c_techCountCompleteOnly) < 50)) {
                        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "Hero46Passive", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], 1);
                        TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322343", 1);
                    }
                    else {
                        if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 66) && (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) < 24)) {
                            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", 1);
                            if (((TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 4) || (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 8) || (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 12) || (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 16) || (TechTreeUpgradeCount(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "SpellUp222233322722322", c_techCountCompleteOnly) == 24))) {
                                PlayerCreateEffectPoint(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], "Hero66Passive", PointFromId(1));
                            }

                        }
                        else {
                            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 70) && (UnitHasBehavior(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "Hero70Skill2cool") == true)) {
                                UnitCreateEffectUnit(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "Hero70Skill2Dong3", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]);
                            }

                        }
                    }
                }
            }
        }

    }
    if ((lv_eC84A4ECA095EC96B4EC8B9CEC8AA4ED8AB8ECB69CEBA0A5EC97ACEBB680EC88ABEC9E90 >= 1)) {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/9C537CB8") + lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[5]] + lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[6]] + lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[7]] + lv_eC84A4ECA095EBB3B4EC97ACECA788ED948CEBA088EC9DB4EC96B4EC9DB4EBA684EBB380EC8898[gv_PlayerBayul[8]] + StringExternal("Param/Value/D53A8EAC")));
    }

}

void gf_HrHeroBuffPut () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_HeroBuffIng[EventPlayer()][0] >= 1)) {
        PlayerCreateEffectPoint(EventPlayer(), "HeroOkGi22232222", PointFromId(1));
        if ((PlayerType(gv_HeroKillPlayer[EventPlayer()]) == c_playerTypeUser) && (gv_HeroDeathBoolean[gv_HeroKillPlayer[EventPlayer()]] == false)) {
            gv_HeroBuffIng[gv_HeroKillPlayer[EventPlayer()]][0] = 1;
            if ((gv_CharNoMana[gv_HeroKillPlayer[EventPlayer()]] != 3)) {
                UnitBehaviorAdd(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "SpellDong24242", gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], 1);
            }
            else {
                UnitBehaviorAdd(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "SpellDong242424", gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], 1);
            }
        }

    }

    if ((gv_HeroBuffIng[EventPlayer()][1] >= 1)) {
        PlayerCreateEffectPoint(EventPlayer(), "HeroOkGi2223222", PointFromId(1));
        if ((PlayerType(gv_HeroKillPlayer[EventPlayer()]) == c_playerTypeUser) && (gv_HeroDeathBoolean[gv_HeroKillPlayer[EventPlayer()]] == false)) {
            gv_HeroBuffIng[gv_HeroKillPlayer[EventPlayer()]][1] = 1;
            if ((UnitHasBehavior(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "SpellDong242423") == true)) {
                UnitBehaviorAdd(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "SpellDong242423", gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], 1);
            }
            else {
                UnitBehaviorAdd(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "SpellDong242423", gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], 1);
                TechTreeUpgradeAddLevel(gv_HeroKillPlayer[EventPlayer()], "SpellUp2222333222332", 2);
                TechTreeUpgradeAddLevel(gv_HeroKillPlayer[EventPlayer()], "SpellUp2222333222332222", 2);
                TechTreeUpgradeAddLevel(gv_HeroKillPlayer[EventPlayer()], "SpellUp2222333222332222222", 2);
                TechTreeUpgradeAddLevel(gv_HeroKillPlayer[EventPlayer()], "SpellUp2222333222332222222222", 2);
            }
        }

    }

}

void gf_HrHeroPassiveRepair () {
    // Automatic Variable Declarations
    // Implementation
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Toherodamage", gv_PlayerHero[EventPlayer()], 1);
    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Critical3", gv_PlayerHero[EventPlayer()], 1);
    if ((gv_StatusWindowNum[EventPlayer()][22] >= 1)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "MagicShield", gv_PlayerHero[EventPlayer()], 1);
    }

    if ((gv_StatusWindowNum[EventPlayer()][23] >= 1)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "MagmaFire", gv_PlayerHero[EventPlayer()], 1);
    }

    if ((gv_SelectedCharNum[EventPlayer()] == 10)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroDeathPrevention23", gv_PlayerHero[EventPlayer()], 1);
    }
    else {
        if ((gv_SelectedCharNum[EventPlayer()] == 17)) {
            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "HeroDeathPrevention24", gv_PlayerHero[EventPlayer()], 1);
        }
        else {
            if ((gv_SelectedCharNum[EventPlayer()] == 20)) {
                UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "SpellDong322222262", gv_PlayerHero[EventPlayer()], 1);
            }
            else {
                if ((gv_SelectedCharNum[EventPlayer()] == 21)) {
                    UnitBehaviorAddPlayer(gv_PlayerHero[EventPlayer()], "Hero21Skill122", EventPlayer(), 1);
                }
                else {
                    if ((gv_SelectedCharNum[EventPlayer()] == 34)) {
                        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero34PassiveSlow2", gv_PlayerHero[EventPlayer()], 1);
                    }
                    else {
                        if ((gv_SelectedCharNum[EventPlayer()] == 35)) {
                            UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero35Passive", gv_PlayerHero[EventPlayer()], 1);
                        }
                        else {
                            if ((gv_SelectedCharNum[EventPlayer()] == 39)) {
                                UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero39PassiveCool", gv_PlayerHero[EventPlayer()], 1);
                            }
                            else {
                                if ((gv_SelectedCharNum[EventPlayer()] == 48)) {
                                    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero48Passive", gv_PlayerHero[EventPlayer()], 1);
                                }
                                else {
                                    if ((gv_SelectedCharNum[EventPlayer()] == 52)) {
                                        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero52Skill4222", gv_PlayerHero[EventPlayer()], 1);
                                    }
                                    else {
                                        if ((gv_SelectedCharNum[EventPlayer()] == 68)) {
                                            if ((gv_SkillWLevel[EventPlayer()] >= 1)) {
                                                UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero68Skill2", gv_PlayerHero[EventPlayer()], 1);
                                            }

                                        }

                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

void gf_HrStartBeforeCounterMake () {
    // Automatic Variable Declarations
    // Implementation
    DialogCreate(250, 150, c_anchorCenter, 0, -200, true);
    gv_BeforeStartCounterDialog[0] = DialogLastCreated();
    DialogSetImageVisible(gv_BeforeStartCounterDialog[0], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 130, 100, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_frame_blueinnercontainerframe.dds", c_triggerImageTypeHorizontalBorder, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_BeforeStartCounterDialogImage = DialogControlLastCreated();
    DialogControlCreate(gv_BeforeStartCounterDialog[0], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 135, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, 3, 5);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/94D343D6") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/45769D9C")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_BeforeStartCounterDialogLabel[0] = DialogControlLastCreated();
    DialogCreate(600, 150, c_anchorCenter, 0, -350, true);
    gv_BeforeStartCounterDialog[1] = DialogLastCreated();
    DialogSetImageVisible(gv_BeforeStartCounterDialog[1], false);
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 600, 80);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, 0, 0);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/11884929") + TextWithColor(PlayerName(1), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(1, false))) + TextWithColor(StringExternal("Param/Value/34283B96"), Color(100.00, 100.00, 100.00))), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_BeforeStartCounterDialogLabel[1] = DialogControlLastCreated();
}

void gf_HrStartBeforeCounterMake2 () {
    // Automatic Variable Declarations
    // Implementation
    DialogCreate(550, 120, c_anchorTop, 0, 70, true);
    gv_BeforeStartCounterWindow = DialogLastCreated();
    DialogSetImageVisible(gv_BeforeStartCounterWindow, false);
    DialogControlCreate(gv_BeforeStartCounterWindow, c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 500, 80);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, 0, 30);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/B8036857") + IntToText(gv_BeforeStartCounterWindowVar) + StringExternal("Param/Value/FCF0A61C")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_BeforeStartCounterWindowNum = DialogControlLastCreated();
}

void gf_HrStartBeforeCounterMake3 () {
    // Variable Declarations
    int lv_GPlayerNum1;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_GPlayerNum1 = 1;

    // Implementation
    DialogCreate(685, 455, c_anchorCenter, 0, -123, true);
    gv_CharChooseDialog[0] = DialogLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 685, 455, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_armory_text_outerframe.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[0] = DialogControlLastCreated();
    DialogSetImageVisible(gv_CharChooseDialog[0], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 700, 85, c_anchorTop, 0, 15, StringToText(""), "Assets\\Textures\\ui_ingame_playervision_colorbg.dds", c_triggerImageTypeNormal, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[1] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 27);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/E0E1A27E") + TextWithColor(StringExternal("Param/Value/96D4980E"), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/7AD502C2")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_CharChooseDialogLabel[0] = DialogControlLastCreated();
    gf_HrCharSelectDialogHeroBtnMake1();
    DialogCreate(685, 455, c_anchorCenter, 0, -123, true);
    gv_CharChooseDialog[3] = DialogLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 685, 455, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_armory_text_outerframe.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[7] = DialogControlLastCreated();
    DialogSetImageVisible(gv_CharChooseDialog[3], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 700, 85, c_anchorTop, 0, 15, StringToText(""), "Assets\\Textures\\ui_ingame_playervision_colorbg.dds", c_triggerImageTypeNormal, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[8] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 27);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/FB5D33D4") + TextWithColor(StringExternal("Param/Value/0D37E18B"), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/146229BA")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_CharChooseDialogLabel[3] = DialogControlLastCreated();
    gf_HrCharSelectDialogHeroBtnMake2();
    DialogCreate(685, 455, c_anchorCenter, 0, -123, true);
    gv_CharChooseDialog[5] = DialogLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 685, 455, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_armory_text_outerframe.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[9] = DialogControlLastCreated();
    DialogSetImageVisible(gv_CharChooseDialog[5], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 700, 85, c_anchorTop, 0, 15, StringToText(""), "Assets\\Textures\\ui_ingame_playervision_colorbg.dds", c_triggerImageTypeNormal, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[10] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 27);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/69AAADF8") + TextWithColor(StringExternal("Param/Value/04DF2E8C"), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/34C3F65A")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_CharChooseDialogLabel[4] = DialogControlLastCreated();
    gf_HrCharSelectDialogHeroBtnMake3();
    DialogCreate(685, 455, c_anchorCenter, 0, -123, true);
    gv_CharChooseDialog[6] = DialogLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 685, 455, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_armory_text_outerframe.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[11] = DialogControlLastCreated();
    DialogSetImageVisible(gv_CharChooseDialog[6], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 700, 85, c_anchorTop, 0, 15, StringToText(""), "Assets\\Textures\\ui_ingame_playervision_colorbg.dds", c_triggerImageTypeNormal, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[12] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 27);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/87951378") + TextWithColor(StringExternal("Param/Value/443D63A6"), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/D7947AF7")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_CharChooseDialogLabel[5] = DialogControlLastCreated();
    gf_HrCharSelectDialogHeroBtnMake4();
    DialogCreate(685, 455, c_anchorCenter, 0, -123, true);
    gv_CharChooseDialog[7] = DialogLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 685, 455, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_armory_text_outerframe.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[13] = DialogControlLastCreated();
    DialogSetImageVisible(gv_CharChooseDialog[7], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 700, 85, c_anchorTop, 0, 15, StringToText(""), "Assets\\Textures\\ui_ingame_playervision_colorbg.dds", c_triggerImageTypeNormal, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[14] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 27);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/782A238D") + TextWithColor(StringExternal("Param/Value/62B9222C"), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/BB63803C")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_CharChooseDialogLabel[6] = DialogControlLastCreated();
    gf_HrCharSelectDialogHeroBtnMake5();
    DialogCreate(685, 100, c_anchorCenter, 0, 70, true);
    gv_CharChooseDialog[4] = DialogLastCreated();
    DialogSetImageVisible(gv_CharChooseDialog[4], false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 225, 60, c_anchorCenter, 0, 0, StringToText(""), StringExternal("Param/Value/0CBFDDE9"), "Assets\\Textures\\ui_battlenet_glue_navbuttons_orange_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glue_navbuttons_orange_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    gv_CharChooseDialogReadyBtn = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 170, 70, c_anchorCenter, -200, 3, StringToText(""), StringToText(""), "Assets\\Textures\\ui_button_nav_right_normaloverpressedover_protoss.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_button_nav_right_normalpressed_protoss.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    gv_CharChooseDialogNextBtn[0] = DialogControlLastCreated();
    DialogControlSetEnabled(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 40, 40, c_anchorCenter, -200, 4, StringToText(""), "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_disabled.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseDialogNextImage[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 170, 70, c_anchorCenter, 200, 3, StringToText(""), StringToText(""), "Assets\\Textures\\ui_button_nav_left_normaloverpressedover_protoss.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_button_nav_left_normalpressed_protoss.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    gv_CharChooseDialogNextBtn[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 40, 40, c_anchorCenter, 200, 4, StringToText(""), "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseDialogNextImage[1] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemRotation(gv_CharChooseDialogNextImage[1], 180, PlayerGroupAll());
    DialogCreate(550, 300, c_anchorCenter, 0, 0, true);
    gv_CharChooseDialog[1] = DialogLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 550, 300, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_armory_text_outerframe.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    DialogSetImageVisible(gv_CharChooseDialog[1], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 650, 85, c_anchorTop, 0, 15, StringToText(""), "Assets\\Textures\\ui_ingame_playervision_colorbg.dds", c_triggerImageTypeNormal, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[2] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 27);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/9E9A042C") + TextWithColor(StringExternal("Param/Value/4C5AE804"), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/ECB2D1D5")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_CharChooseDialogLabel[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 300, 70, c_anchorCenter, -50, -20, StringToText(""), StringExternal("Param/Value/A1199FED"), "Assets\\Textures\\ui_battlenet_glue_navbuttons_blue_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glue_navbuttons_blue_normalpressed.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    gv_GameModeBtn[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 300, 70, c_anchorCenter, -50, 60, StringToText(""), StringExternal("Param/Value/D523EB49"), "Assets\\Textures\\ui_battlenet_glue_navbuttons_blue_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glue_navbuttons_blue_normalpressed.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    gv_GameModeBtn[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 85, 90, c_anchorCenter, 166, -20, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_frame_dialogbox_header.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 85, 90, c_anchorCenter, 166, 60, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_frame_dialogbox_header.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 70, c_anchorCenter, 167, -1, (StringExternal("Param/Value/FD1FDC82") + TextWithColor(IntToText(gv_GameModeVoteInt[0]), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/9DC3D54C")), Color(100,100,100), false, 0.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_GameModeLabel[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 70, c_anchorCenter, 167, 79, (StringExternal("Param/Value/3982B81A") + TextWithColor(IntToText(gv_GameModeVoteInt[0]), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/1255ADAD")), Color(100,100,100), false, 0.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_GameModeLabel[1] = DialogControlLastCreated();
    DialogCreate(685, 310, c_anchorCenter, 0, 245, true);
    gv_CharChooseDialog[2] = DialogLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 685, 310, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_armory_text_outerframe.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    DialogSetImageVisible(gv_CharChooseDialog[2], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 700, 85, c_anchorTop, 0, 15, StringToText(""), "Assets\\Textures\\ui_ingame_playervision_colorbg.dds", c_triggerImageTypeNormal, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_CharChooseDialogImage[6] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 300, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 27);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/652FC3C6") + TextWithColor(StringExternal("Param/Value/2A46CE28"), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/02F1E97E")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_CharChooseDialogLabel[2] = DialogControlLastCreated();
    gf_HrCharSelectDialogSpellBtnMake1();
    gf_HrCharSelectDialogSpellBtnMake2();
}

void gf_HrCharSelectDialogHeroBtnMake1 () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 30, 80, StringExternal("Param/Value/2494C124"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 40, 90, StringToText(""), "Assets\\Textures\\btn-unit-terran-tosh.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 135, 80, StringExternal("Param/Value/3CADB326"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 145, 90, StringToText(""), "Assets\\Textures\\btn-unit-protoss-zeratul.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 240, 80, StringExternal("Param/Value/08DEC2A7"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 250, 90, StringToText(""), "Assets\\Textures\\btn-unit-zerg-ultralisk.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 345, 80, StringExternal("Param/Value/B99391E7"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 355, 90, StringToText(""), "Assets\\Textures\\btn-unit-protoss-archon.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 450, 80, StringExternal("Param/Value/41DC308B"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 460, 90, StringToText(""), "Assets\\Textures\\btn-unit-protoss-tassadar.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 555, 80, StringExternal("Param/Value/6466DB4A"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[5] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 565, 90, StringToText(""), "Assets\\AddIcon\\btn-hero6.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[5] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 30, 180, StringExternal("Param/Value/9AA5AECB"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[6] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 40, 190, StringToText(""), "Assets\\Textures\\btn-unit-terran-medic.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[6] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 135, 180, StringExternal("Param/Value/9748FA07"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[7] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 145, 190, StringToText(""), "Assets\\Textures\\btn-unit-terran-reaper.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[7] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 240, 180, StringExternal("Param/Value/7CA18253"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[8] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 250, 190, StringToText(""), "Assets\\Textures\\btn-unit-terran-nova.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[8] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 345, 180, StringExternal("Param/Value/95804919"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[9] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 355, 190, StringToText(""), "Assets\\Textures\\btn-unit-zerg-baneling.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[9] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 450, 180, StringExternal("Param/Value/5A3FD145"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[10] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 460, 190, StringToText(""), "Assets\\Textures\\btn-unit-zerg-kerrigan.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[10] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 555, 180, StringExternal("Param/Value/7158C425"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[11] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 565, 190, StringToText(""), "Assets\\AddIcon\\btn-hero12.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[11] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 30, 280, StringExternal("Param/Value/8455CA56"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[12] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 40, 290, StringToText(""), "Assets\\AddIcon\\btn-hero13.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[12] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 135, 280, StringExternal("Param/Value/D9C3DF2D"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[13] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 145, 290, StringToText(""), "Assets\\Textures\\btn-unit-terran-marauderswann.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[13] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 240, 280, StringExternal("Param/Value/55C50E51"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[14] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 250, 290, StringToText(""), "Assets\\AddIcon\\btn-hero15.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[14] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 345, 280, StringExternal("Param/Value/AE11B399"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[15] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 355, 290, StringToText(""), "Assets\\Textures\\btn-unit-zerg-roach.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[15] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 450, 280, StringExternal("Param/Value/B2BEFDCA"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[16] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 460, 290, StringToText(""), "Assets\\Textures\\btn-unit-zerg-aberration.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[16] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[0], 100, 100, c_anchorTopLeft, 555, 280, StringExternal("Param/Value/7ABB05AB"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowRandomBtn[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[0], 80, 80, c_anchorTopLeft, 565, 290, StringToText(""), "Assets\\Textures\\btn-tips-tutorial.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowRandomImage[0] = DialogControlLastCreated();
}

void gf_HrCharSelectDialogHeroBtnMake2 () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 30, 80, StringExternal("Param/Value/1878496C"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[17] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 40, 90, StringToText(""), "Assets\\Textures\\btn-unit-xelnaga-viper.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[17] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 135, 80, StringExternal("Param/Value/1B2F1AB7"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[18] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 145, 90, StringToText(""), "Assets\\AddIcon\\btn-hero19.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[18] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 240, 80, StringExternal("Param/Value/8717D8EE"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[19] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 250, 90, StringToText(""), "Assets\\Textures\\btn-unit-protoss-darktemplar.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[19] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 345, 80, StringExternal("Param/Value/74C4A260"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[20] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 355, 90, StringToText(""), "Assets\\AddIcon\\btn-hero21.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[20] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 450, 80, StringExternal("Param/Value/3B94E9B5"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[21] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 460, 90, StringToText(""), "Assets\\Textures\\btn-unit-terran-thor.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[21] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 555, 80, StringExternal("Param/Value/92BE3943"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[22] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 565, 90, StringToText(""), "Assets\\AddIcon\\btn-hero23.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[22] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 30, 180, StringExternal("Param/Value/A4BD21B2"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[23] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 40, 190, StringToText(""), "Assets\\AddIcon\\btn-hero24.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[23] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 135, 180, StringExternal("Param/Value/39037900"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[24] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 145, 190, StringToText(""), "Assets\\Textures\\btn-unit-zerg-hydralisk.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[24] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 240, 180, StringExternal("Param/Value/E505BA23"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[25] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 250, 190, StringToText(""), "Assets\\Textures\\btn-unit-terran-medicstetmann.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[25] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 345, 180, StringExternal("Param/Value/18E8773C"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[26] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 355, 190, StringToText(""), "Assets\\Textures\\btn-unit-terran-predator.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[26] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 450, 180, StringExternal("Param/Value/907E3D24"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[27] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 460, 190, StringToText(""), "Assets\\Textures\\btn-unit-terran-firebatmercenary.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[27] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 555, 180, StringExternal("Param/Value/CE0B43F5"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[28] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 565, 190, StringToText(""), "Assets\\Textures\\btn-unit-zerg-queen.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[28] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 30, 280, StringExternal("Param/Value/532D16E6"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[29] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 40, 290, StringToText(""), "Assets\\AddIcon\\btn-hero30.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[29] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 135, 280, StringExternal("Param/Value/C5529E37"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[30] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 145, 290, StringToText(""), "Assets\\AddIcon\\btn-hero31.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[30] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 240, 280, StringExternal("Param/Value/B880D41C"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[31] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 90, 90, c_anchorTopLeft, 245, 285, StringToText(""), "Assets\\Textures\\btn-unit-zerg-zergling.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[31] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 345, 280, StringExternal("Param/Value/BEDAB7D4"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[32] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 90, 90, c_anchorTopLeft, 350, 285, StringToText(""), "Assets\\Textures\\btn-unit-rifleman.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[32] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 450, 280, StringExternal("Param/Value/A43FE6A8"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[33] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 460, 290, StringToText(""), "Assets\\Textures\\btn-unit-zerg-infestor.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[33] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[3], 100, 100, c_anchorTopLeft, 555, 280, StringExternal("Param/Value/1B3FDE96"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowRandomBtn[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[3], 80, 80, c_anchorTopLeft, 565, 290, StringToText(""), "Assets\\Textures\\btn-tips-tutorial.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowRandomImage[1] = DialogControlLastCreated();
}

void gf_HrCharSelectDialogHeroBtnMake3 () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 30, 80, StringExternal("Param/Value/12AE0B68"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[34] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 40, 90, StringToText(""), "Assets\\Textures\\btn-unit-protos-soulhunter.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[34] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 135, 80, StringExternal("Param/Value/7C82E900"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[35] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 145, 90, StringToText(""), "Assets\\AddIcon\\LadyAlexstrasa_Btn.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[35] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 240, 80, StringExternal("Param/Value/BD931C19"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[36] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 85, 85, c_anchorTopLeft, 248, 87, StringToText(""), "Assets\\AddIcon\\btn-hero37.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[36] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 345, 80, StringExternal("Param/Value/2D42F20D"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[37] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 355, 90, StringToText(""), "Assets\\AddIcon\\btn-hero38.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[37] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 450, 80, StringExternal("Param/Value/E509E242"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[38] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 460, 90, StringToText(""), "Assets\\Textures\\btn-unit-zerg-broodlord.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[38] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 555, 80, StringExternal("Param/Value/999838A0"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[39] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 565, 90, StringToText(""), "Assets\\AddIcon\\btn-hero40.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[39] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 30, 180, StringExternal("Param/Value/5C821AB5"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[40] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 40, 190, StringToText(""), "Assets\\Textures\\btn-unit-terran-siegetank.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[40] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 135, 180, StringExternal("Param/Value/4B47610B"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[41] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 145, 190, StringToText(""), "Assets\\AddIcon\\btn-hero42.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[41] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 240, 180, StringExternal("Param/Value/82A0CD73"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[42] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 90, 90, c_anchorTopLeft, 245, 185, StringToText(""), "Assets\\AddIcon\\btn-hero43.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[42] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 345, 180, StringExternal("Param/Value/9C88A981"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[43] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 355, 190, StringToText(""), "Assets\\AddIcon\\btn-hero44.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[43] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 450, 180, StringExternal("Param/Value/132BAF62"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[44] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 460, 190, StringToText(""), "Assets\\Textures\\btn-unit-protoss-zealot-nerazim.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[44] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 555, 180, StringExternal("Param/Value/064F4967"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[45] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 565, 190, StringToText(""), "Assets\\AddIcon\\btn-hero46.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[45] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 30, 280, StringExternal("Param/Value/2873890B"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[46] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 40, 290, StringToText(""), "Assets\\AddIcon\\btn-hero47.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[46] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 135, 280, StringExternal("Param/Value/DE70428C"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[47] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 90, 90, c_anchorTopLeft, 140, 285, StringToText(""), "Assets\\Textures\\btn-unit-protoss-colossus.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[47] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 240, 280, StringExternal("Param/Value/42998C10"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[48] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 250, 290, StringToText(""), "Assets\\AddIcon\\btn-hero49.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[48] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 345, 280, StringExternal("Param/Value/EC0E1493"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[49] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 355, 290, StringToText(""), "Assets\\AddIcon\\btn-hero50.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[49] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 450, 280, StringExternal("Param/Value/BF089656"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[50] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 460, 290, StringToText(""), "Assets\\AddIcon\\btn-hero51.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[50] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[5], 100, 100, c_anchorTopLeft, 555, 280, StringExternal("Param/Value/8C1FFB5E"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowRandomBtn[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[5], 80, 80, c_anchorTopLeft, 565, 290, StringToText(""), "Assets\\Textures\\btn-tips-tutorial.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowRandomImage[2] = DialogControlLastCreated();
}

void gf_HrCharSelectDialogHeroBtnMake4 () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 30, 80, StringExternal("Param/Value/3EC1BF6D"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[51] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 40, 90, StringToText(""), "Assets\\AddIcon\\btn-hero52.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[51] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 135, 80, StringExternal("Param/Value/3700BB02"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[52] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 90, 90, c_anchorTopLeft, 140, 85, StringToText(""), "Assets\\Textures\\btn-unit-zerg-infestedcolonist.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[52] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 240, 80, StringExternal("Param/Value/CE13BE6F"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[53] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 85, 85, c_anchorTopLeft, 248, 87, StringToText(""), "Assets\\AddIcon\\btn-hero54.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[53] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 345, 80, StringExternal("Param/Value/DD93132A"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[54] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 355, 90, StringToText(""), "Assets\\AddIcon\\btn-hero55.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[54] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 450, 80, StringExternal("Param/Value/133EDE5E"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[55] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 460, 90, StringToText(""), "Assets\\AddIcon\\btn-hero56.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[55] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 555, 80, StringExternal("Param/Value/E71AFA18"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[56] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 565, 90, StringToText(""), "Assets\\AddIcon\\btn-hero57.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[56] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 30, 180, StringExternal("Param/Value/AAA3638A"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[57] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 40, 190, StringToText(""), "Assets\\AddIcon\\btn-hero58.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[57] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 135, 180, StringExternal("Param/Value/7F1D3CCC"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[58] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 145, 190, StringToText(""), "Assets\\AddIcon\\btn-hero59.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[58] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 240, 180, StringExternal("Param/Value/F1852CE0"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[59] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 85, 85, c_anchorTopLeft, 250, 190, StringToText(""), "Assets\\AddIcon\\btn-hero60.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[59] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 345, 180, StringExternal("Param/Value/32ED0183"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[60] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 355, 190, StringToText(""), "Assets\\AddIcon\\btn-hero61.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[60] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 450, 180, StringExternal("Param/Value/8293832A"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[61] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 460, 190, StringToText(""), "Assets\\AddIcon\\btn-hero62.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[61] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 555, 180, StringExternal("Param/Value/8B98AB21"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[62] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 565, 190, StringToText(""), "Assets\\AddIcon\\btn-hero63.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[62] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 30, 280, StringExternal("Param/Value/D869F3D6"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[63] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 40, 290, StringToText(""), "Assets\\AddIcon\\btn-hero64.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[63] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 135, 280, StringExternal("Param/Value/037DA826"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[64] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 145, 290, StringToText(""), "Assets\\AddIcon\\btn-hero65.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[64] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 240, 280, StringExternal("Param/Value/3C2AF12A"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[65] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 250, 290, StringToText(""), "Assets\\AddIcon\\btn-hero66.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[65] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 345, 280, StringExternal("Param/Value/6FAECD8C"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[66] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 355, 290, StringToText(""), "Assets\\AddIcon\\btn-hero67.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[66] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 450, 280, StringExternal("Param/Value/5F126115"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[67] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 70, 70, c_anchorTopLeft, 464, 294, StringToText(""), "Assets\\AddIcon\\btn-hero68.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[67] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[6], 100, 100, c_anchorTopLeft, 555, 280, StringExternal("Param/Value/1276829B"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowRandomBtn[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[6], 80, 80, c_anchorTopLeft, 565, 290, StringToText(""), "Assets\\Textures\\btn-tips-tutorial.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowRandomImage[3] = DialogControlLastCreated();
}

void gf_HrCharSelectDialogHeroBtnMake5 () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 30, 80, StringExternal("Param/Value/29858E35"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[68] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 40, 90, StringToText(""), "Assets\\AddIcon\\btn-hero69.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[68] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 135, 80, StringExternal("Param/Value/5AECD57D"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[69] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 145, 90, StringToText(""), "Assets\\AddIcon\\btn-hero70.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[69] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 240, 80, StringExternal("Param/Value/F920FBAE"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[70] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 85, 85, c_anchorTopLeft, 248, 87, StringToText(""), "Assets\\AddIcon\\btn-hero71.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[70] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 345, 80, StringExternal("Param/Value/DC59CFAB"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[71] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 355, 90, StringToText(""), "Assets\\AddIcon\\btn-hero72.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[71] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 450, 80, StringExternal("Param/Value/5BAB177E"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[72] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 460, 90, StringToText(""), "Assets\\AddIcon\\btn-hero73.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[72] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 555, 80, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[73] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 565, 90, StringToText(""), "Assets\\AddIcon\\btn-hero57.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[73] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 30, 180, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[74] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 40, 190, StringToText(""), "Assets\\AddIcon\\btn-hero58.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[74] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 135, 180, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[75] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 145, 190, StringToText(""), "Assets\\AddIcon\\btn-hero59.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[75] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 240, 180, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[76] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 85, 85, c_anchorTopLeft, 250, 190, StringToText(""), "Assets\\AddIcon\\btn-hero60.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[76] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 345, 180, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[77] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 355, 190, StringToText(""), "Assets\\AddIcon\\btn-hero61.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[77] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 450, 180, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[78] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 460, 190, StringToText(""), "Assets\\AddIcon\\btn-hero62.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[78] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 555, 180, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[79] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 565, 190, StringToText(""), "Assets\\AddIcon\\btn-hero63.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[79] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 30, 280, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[80] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 40, 290, StringToText(""), "Assets\\AddIcon\\btn-hero64.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[80] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 135, 280, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[81] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 145, 290, StringToText(""), "Assets\\AddIcon\\btn-hero65.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[81] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 240, 280, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[82] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 250, 290, StringToText(""), "Assets\\AddIcon\\btn-hero66.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[82] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 345, 280, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[83] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 355, 290, StringToText(""), "Assets\\AddIcon\\btn-hero67.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[83] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 450, 280, StringToText(""), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowBtn[84] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 70, 70, c_anchorTopLeft, 464, 294, StringToText(""), "Assets\\AddIcon\\btn-hero68.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowImage[84] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[7], 100, 100, c_anchorTopLeft, 555, 280, StringExternal("Param/Value/6E7DDF14"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowRandomBtn[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[7], 80, 80, c_anchorTopLeft, 565, 290, StringToText(""), "Assets\\Textures\\btn-tips-tutorial.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowRandomImage[4] = DialogControlLastCreated();
}

void gf_HrCharSelectDialogSpellBtnMake1 () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 30, 80, StringExternal("Param/Value/4EC2F48A"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[0] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 40, 90, StringToText(""), "Assets\\Textures\\btn-research-zerg-cellularreactor.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[0] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 135, 80, StringExternal("Param/Value/8196C838"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[1] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 145, 90, StringToText(""), "Assets\\Textures\\btn-tips-hacking.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[1] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 135, 80, StringExternal("Param/Value/A2591E45"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 145, 90, StringToText(""), "Assets\\Textures\\btn-ability-terran-heal-color.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 240, 80, StringExternal("Param/Value/22CF545F"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 250, 90, StringToText(""), "Assets\\Textures\\btn-tips-hyperion.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 345, 80, StringExternal("Param/Value/A8AA1181"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 355, 90, StringToText(""), "Assets\\Textures\\btn-tips-fallenheroes.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 450, 80, StringExternal("Param/Value/CF4FEBAE"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[5] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 460, 90, StringToText(""), "Assets\\AddIcon\\btn-custom-protoss-rapiddeployment.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[5] = DialogControlLastCreated();
}

void gf_HrCharSelectDialogSpellBtnMake2 () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 30, 180, StringExternal("Param/Value/ABD6B75E"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[6] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 40, 190, StringToText(""), "Assets\\Textures\\btn-ability-protoss-shieldcapacitor.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[6] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 135, 180, StringExternal("Param/Value/F258D1AF"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[7] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 145, 190, StringToText(""), "Assets\\Textures\\btn-tips-biosample.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[7] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 240, 180, StringExternal("Param/Value/BEAEC8D0"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[8] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 250, 190, StringToText(""), "Assets\\Textures\\btn-tips-challengecounter.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[8] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 345, 180, StringExternal("Param/Value/3049A19A"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[9] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 355, 190, StringToText(""), "Assets\\Textures\\btn-tips-walloffire.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[9] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 450, 180, StringExternal("Param/Value/199C91AA"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[10] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 460, 190, StringToText(""), "Assets\\Textures\\btn-tips-defierbones.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[10] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(gv_CharChooseDialog[2], 100, 100, c_anchorTopLeft, 555, 180, StringExternal("Param/Value/8D6F960E"), StringToText(""), "Assets\\Textures\\ui_techpurchase_techbutton_selected_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_techpurchase_techbutton_hired_normaloverpressedover.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeBorder, PlayerGroupAll());
    gv_CharChooseWindowSpellBtn[11] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_CharChooseDialog[2], 80, 80, c_anchorTopLeft, 565, 190, StringToText(""), "Assets\\Textures\\btn-tips-visitthelab.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseWindowSpellImage[11] = DialogControlLastCreated();
}

void gf_HrTeamSelectDialogMake () {
    // Variable Declarations
    int lv_GPlayerNum1;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_GPlayerNum1 = 1;

    // Implementation
    DialogCreate(375, 720, c_anchorCenter, -520, 5, true);
    gv_TeamSelectDialog[0] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 375, 720, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_frame_bucket_long.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogImage[0] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 225, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 35);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/35F2819E") + TextWithColor(StringExternal("Param/Value/C7DCD83F"), Color(70.98, 100.00, 70.98)) + StringExternal("Param/Value/AACDFCE4")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogLabel[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 355, 6, c_anchorTop, 0, 220, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_columbutton_frame_gradient.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(45.88, 72.94, 100.00), PlayerGroupAll());
    gv_TeamSelectDialogImage[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 355, 6, c_anchorTop, 0, 374, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_columbutton_frame_gradient.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(45.88, 72.94, 100.00), PlayerGroupAll());
    gv_TeamSelectDialogImage[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 355, 6, c_anchorTop, 0, 529, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_columbutton_frame_gradient.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(45.88, 72.94, 100.00), PlayerGroupAll());
    gv_TeamSelectDialogImage[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 80, 80, c_anchorTop, -65, 100, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(60.78, 89.02, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 55, 55, c_anchorTop, 11, 125, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 55, 55, c_anchorTop, 71, 125, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 80, 80, c_anchorTop, -65, 251, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(60.78, 89.02, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 55, 55, c_anchorTop, 11, 276, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 55, 55, c_anchorTop, 71, 276, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[5] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 80, 80, c_anchorTop, -65, 404, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(60.78, 89.02, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[6] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 55, 55, c_anchorTop, 11, 429, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[7] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 55, 55, c_anchorTop, 71, 429, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[8] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 80, 80, c_anchorTop, -65, 557, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(60.78, 89.02, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[9] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 55, 55, c_anchorTop, 11, 582, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[10] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 55, 55, c_anchorTop, 71, 582, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[11] = DialogControlLastCreated();
    DialogCreate(375, 720, c_anchorCenter, 520, 5, true);
    gv_TeamSelectDialog[1] = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 375, 720, c_anchorCenter, 0, 0, StringToText(""), "Assets\\rightbody.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogImage[4] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 225, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 35);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/A2EA6B06") + TextWithColor(StringExternal("Param/Value/FE926CFB"), Color(100.00, 81.57, 100.00)) + StringExternal("Param/Value/0D257CFA")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogLabel[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 355, 6, c_anchorTop, 0, 220, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_columbutton_frame_gradient.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(45.88, 72.94, 100.00), PlayerGroupAll());
    gv_TeamSelectDialogImage[5] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 355, 6, c_anchorTop, 0, 374, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_columbutton_frame_gradient.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(45.88, 72.94, 100.00), PlayerGroupAll());
    gv_TeamSelectDialogImage[6] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 355, 6, c_anchorTop, 0, 529, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_columbutton_frame_gradient.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(45.88, 72.94, 100.00), PlayerGroupAll());
    gv_TeamSelectDialogImage[7] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 80, 80, c_anchorTop, -65, 100, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(60.78, 89.02, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[12] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 55, 55, c_anchorTop, 11, 125, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[13] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 55, 55, c_anchorTop, 71, 125, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[14] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 80, 80, c_anchorTop, -65, 251, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(60.78, 89.02, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[15] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 55, 55, c_anchorTop, 11, 276, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[16] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 55, 55, c_anchorTop, 71, 276, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[17] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 80, 80, c_anchorTop, -65, 404, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(60.78, 89.02, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[18] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 55, 55, c_anchorTop, 11, 429, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[19] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 55, 55, c_anchorTop, 71, 429, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[20] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 80, 80, c_anchorTop, -65, 557, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(60.78, 89.02, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[21] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 55, 55, c_anchorTop, 11, 582, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[22] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 55, 55, c_anchorTop, 71, 582, StringToText(""), "Assets\\Textures\\ui_help_frame_content.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_TeamSelectDialogNemoImage[23] = DialogControlLastCreated();
    gf_HrTeamSelectDialogTeam1Make();
    gf_HrTeamSelectDialogTeam1Make2();
}

void gf_HrTeamSelectDialogTeam1Make () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 70, 70, c_anchorTop, -65, 105, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[1]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 94, 94, c_anchorTop, 0, 0, StringToText(""), "Assets\\AddIcon\\Playerborder_unranked.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogNemoImage[0], c_anchorCenter, 0, -1);
    gv_TeamSelectDialogPlayerBorder[gv_PlayerBayul[1]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 45, 45, c_anchorTop, 11, 130, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[1]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 45, 45, c_anchorTop, 71, 130, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[1]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[0], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 325, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 185);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/14DCAF30") + PlayerName(gv_PlayerBayul[1]) + StringExternal("Param/Value/0D9AD964")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogPlayerName[gv_PlayerBayul[1]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[0], 60, 60, c_anchorCenter, 0, 0, StringExternal("Param/Value/E8FFC4AA"), StringToText(""), "Assets\\HeroChangeBtn.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\HeroChangeBtn.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[1]], c_anchorLeft, 5, 5);
    gv_TeamSelectBtn[0] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 70, 70, c_anchorTop, -65, 256, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[2]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 94, 94, c_anchorTop, 0, 0, StringToText(""), "Assets\\AddIcon\\Playerborder_unranked.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogNemoImage[3], c_anchorCenter, 0, -1);
    gv_TeamSelectDialogPlayerBorder[gv_PlayerBayul[2]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 45, 45, c_anchorTop, 11, 281, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[2]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 45, 45, c_anchorTop, 71, 281, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[2]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[0], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 325, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 336);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/A211DA62") + PlayerName(gv_PlayerBayul[2]) + StringExternal("Param/Value/22EE8011")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogPlayerName[gv_PlayerBayul[2]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[0], 60, 60, c_anchorCenter, 0, 0, StringExternal("Param/Value/FEBEFA1F"), StringToText(""), "Assets\\HeroChangeBtn.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\HeroChangeBtn.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[2]], c_anchorLeft, 5, 5);
    gv_TeamSelectBtn[1] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 70, 70, c_anchorTop, -65, 409, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[3]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 94, 94, c_anchorTop, 0, 0, StringToText(""), "Assets\\AddIcon\\Playerborder_unranked.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogNemoImage[6], c_anchorCenter, 0, -1);
    gv_TeamSelectDialogPlayerBorder[gv_PlayerBayul[3]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 45, 45, c_anchorTop, 11, 434, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[3]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 45, 45, c_anchorTop, 71, 434, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[3]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[0], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 325, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 489);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/F184F4AF") + PlayerName(gv_PlayerBayul[3]) + StringExternal("Param/Value/F243EEA9")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogPlayerName[gv_PlayerBayul[3]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[0], 60, 60, c_anchorCenter, 0, 0, StringExternal("Param/Value/0B289D6A"), StringToText(""), "Assets\\HeroChangeBtn.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\HeroChangeBtn.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[3]], c_anchorLeft, 5, 5);
    gv_TeamSelectBtn[2] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 70, 70, c_anchorTop, -65, 562, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[4]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 94, 94, c_anchorTop, 0, 0, StringToText(""), "Assets\\AddIcon\\Playerborder_unranked.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogNemoImage[9], c_anchorCenter, 0, -1);
    gv_TeamSelectDialogPlayerBorder[gv_PlayerBayul[4]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 45, 45, c_anchorTop, 11, 587, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[4]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 45, 45, c_anchorTop, 71, 587, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[4]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[0], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 325, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 642);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/6050C5F2") + PlayerName(gv_PlayerBayul[4]) + StringExternal("Param/Value/D51B5834")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogPlayerName[gv_PlayerBayul[4]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[0], 60, 60, c_anchorCenter, 0, 0, StringExternal("Param/Value/254DC7EC"), StringToText(""), "Assets\\HeroChangeBtn.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\HeroChangeBtn.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[4]], c_anchorLeft, 5, 5);
    gv_TeamSelectBtn[3] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 350, 180, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_dialogbox_base.dds", c_triggerImageTypeHorizontalBorder, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogImage[8] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 65, 65, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_replay_panelcontainer.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, gv_TeamSelectDialogImage[8], c_anchorTopLeft, 25, 30);
    gv_TeamSelectDialogImage[9] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[0], 60, 60, c_anchorCenter, 0, 0, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogImage[9], c_anchorCenter, 0, 0);
    gv_TeamSelectDialogImage[10] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[0], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 250, 120);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 35);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/169C3EB1") + TextWithColor(StringExternal("Param/Value/85343B14"), Color(100.00, 0.00, 0.00)) + StringExternal("Param/Value/1EA9116A")), PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogImage[9], c_anchorRight, 12, 35);
    gv_TeamSelectDialogLabel[2] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[0], 160, 50, c_anchorCenter, 0, 0, StringToText(""), StringExternal("Param/Value/B5FE2ECF"), "Assets\\Textures\\ui_battlenet_glue_mediumbluebutton_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glue_mediumbluebutton_normalpressed.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, gv_TeamSelectDialogImage[8], c_anchorBottom, -83, -25);
    gv_TeamSelectBtn[8] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[0], 160, 50, c_anchorCenter, 0, 0, StringToText(""), StringExternal("Param/Value/8E28482E"), "Assets\\Textures\\ui_battlenet_glue_mediumbluebutton_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glue_mediumbluebutton_normalpressed.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, gv_TeamSelectDialogImage[8], c_anchorBottom, 83, -25);
    gv_TeamSelectBtn[9] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
}

void gf_HrTeamSelectDialogTeam1Make2 () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 70, 70, c_anchorTop, -65, 105, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[5]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 94, 94, c_anchorTop, 0, 0, StringToText(""), "Assets\\AddIcon\\Playerborder_unranked.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogNemoImage[12], c_anchorCenter, 0, -1);
    gv_TeamSelectDialogPlayerBorder[gv_PlayerBayul[5]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 45, 45, c_anchorTop, 11, 130, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[5]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 45, 45, c_anchorTop, 71, 130, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[5]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[1], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 325, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 185);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/C71AF351") + PlayerName(gv_PlayerBayul[5]) + StringExternal("Param/Value/9B0B43D8")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogPlayerName[gv_PlayerBayul[5]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[1], 60, 60, c_anchorCenter, 0, 0, StringExternal("Param/Value/004DC037"), StringToText(""), "Assets\\HeroChangeBtn.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\HeroChangeBtn.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[5]], c_anchorLeft, 5, 5);
    gv_TeamSelectBtn[4] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 70, 70, c_anchorTop, -65, 256, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[6]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 94, 94, c_anchorTop, 0, 0, StringToText(""), "Assets\\AddIcon\\Playerborder_unranked.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogNemoImage[15], c_anchorCenter, 0, -1);
    gv_TeamSelectDialogPlayerBorder[gv_PlayerBayul[6]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 45, 45, c_anchorTop, 11, 281, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[6]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 45, 45, c_anchorTop, 71, 281, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[6]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[1], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 325, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 336);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/A185A9DE") + PlayerName(gv_PlayerBayul[6]) + StringExternal("Param/Value/C2DD86DD")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogPlayerName[gv_PlayerBayul[6]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[1], 60, 60, c_anchorCenter, 0, 0, StringExternal("Param/Value/A1780A99"), StringToText(""), "Assets\\HeroChangeBtn.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\HeroChangeBtn.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[6]], c_anchorLeft, 5, 5);
    gv_TeamSelectBtn[5] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 70, 70, c_anchorTop, -65, 409, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[7]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 94, 94, c_anchorTop, 0, 0, StringToText(""), "Assets\\AddIcon\\Playerborder_unranked.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogNemoImage[18], c_anchorCenter, 0, -1);
    gv_TeamSelectDialogPlayerBorder[gv_PlayerBayul[7]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 45, 45, c_anchorTop, 11, 434, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[7]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 45, 45, c_anchorTop, 71, 434, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[7]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[1], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 325, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 489);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/4C2E243B") + PlayerName(gv_PlayerBayul[7]) + StringExternal("Param/Value/70673AA7")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogPlayerName[gv_PlayerBayul[7]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[1], 60, 60, c_anchorCenter, 0, 0, StringExternal("Param/Value/504EB047"), StringToText(""), "Assets\\HeroChangeBtn.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\HeroChangeBtn.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[7]], c_anchorLeft, 5, 5);
    gv_TeamSelectBtn[6] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 70, 70, c_anchorTop, -65, 562, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[8]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 94, 94, c_anchorTop, 0, 0, StringToText(""), "Assets\\AddIcon\\Playerborder_unranked.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogNemoImage[21], c_anchorCenter, 0, -1);
    gv_TeamSelectDialogPlayerBorder[gv_PlayerBayul[8]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 45, 45, c_anchorTop, 11, 587, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[8]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 45, 45, c_anchorTop, 71, 587, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[8]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[1], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 325, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 642);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/8C3AF607") + PlayerName(gv_PlayerBayul[8]) + StringExternal("Param/Value/968CEEB4")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_TeamSelectDialogPlayerName[gv_PlayerBayul[8]] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[1], 60, 60, c_anchorCenter, 0, 0, StringExternal("Param/Value/19474607"), StringToText(""), "Assets\\HeroChangeBtn.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\HeroChangeBtn.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorRight, gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[8]], c_anchorLeft, 5, 5);
    gv_TeamSelectBtn[7] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 350, 180, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glues_dialogbox_base.dds", c_triggerImageTypeHorizontalBorder, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_TeamSelectDialogImage[11] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 65, 65, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_replay_panelcontainer.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, gv_TeamSelectDialogImage[11], c_anchorTopLeft, 25, 30);
    gv_TeamSelectDialogImage[12] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemImage(gv_TeamSelectDialog[1], 60, 60, c_anchorCenter, 0, 0, StringToText(""), "Assets\\InviButton.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorCenter, gv_TeamSelectDialogImage[12], c_anchorCenter, 0, 0);
    gv_TeamSelectDialogImage[13] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(gv_TeamSelectDialog[1], c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 250, 120);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 35);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/F0EC86E7") + TextWithColor(StringExternal("Param/Value/28CB0911"), Color(100.00, 0.00, 0.00)) + StringExternal("Param/Value/B0F5B472")), PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogImage[12], c_anchorRight, 12, 35);
    gv_TeamSelectDialogLabel[3] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[1], 160, 50, c_anchorCenter, 0, 0, StringToText(""), StringExternal("Param/Value/00BD21C3"), "Assets\\Textures\\ui_battlenet_glue_mediumbluebutton_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glue_mediumbluebutton_normalpressed.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, gv_TeamSelectDialogImage[11], c_anchorBottom, -83, -25);
    gv_TeamSelectBtn[10] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(gv_TeamSelectDialog[1], 160, 50, c_anchorCenter, 0, 0, StringToText(""), StringExternal("Param/Value/965E82DF"), "Assets\\Textures\\ui_battlenet_glue_mediumbluebutton_normaloverpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_battlenet_glue_mediumbluebutton_normalpressed.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    DialogControlSetPositionRelative(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, gv_TeamSelectDialogImage[11], c_anchorBottom, 83, -25);
    gv_TeamSelectBtn[11] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
}

void gf_HrScoreDialogMake () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80;
    int lv_eC84A4ECA095EC8389EC9DB4EBAFB8ECA780yECB695EAB092;
    int lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092;

    // Automatic Variable Declarations
    const int auto06B3226E_ae = 4;
    const int auto06B3226E_ai = 1;
    const int auto68E48430_ae = 8;
    const int auto68E48430_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;
    lv_eC84A4ECA095EC8389EC9DB4EBAFB8ECA780yECB695EAB092 = 75;
    lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 = 87;

    // Implementation
    DialogCreate(650, 490, c_anchorTopRight, 10, 30, true);
    gv_ScoreDialog[0] = DialogLastCreated();
    DialogSetImageVisible(gv_ScoreDialog[0], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 650, 490, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_mission_leaderboard_frame_light.dds", c_triggerImageTypeBorder, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(0.00, 50.20, 100.00), PlayerGroupAll());
    gv_ScoreDialogImage[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 650, 7, c_anchorTop, 0, 59, StringToText(""), "Assets\\Textures\\ui_battlenet_glue_columbutton_frame_gradient.dds", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(0.00, 50.20, 100.00), PlayerGroupAll());
    gv_ScoreDialogImage[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 650, 7, c_anchorCenter, 0, 25, StringToText(""), "Assets\\Textures\\ui_battlenet_challenge_frame_glowstroke.dds", c_triggerImageTypeEndCap, false, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(0.78, 34.51, 59.22), PlayerGroupAll());
    gv_ScoreDialogImageB[0] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 125, 45);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, 45, 32);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/7D878D2F") + TextWithColor(StringExternal("Param/Value/43A3F222"), Color(50.20, 100.00, 100.00)) + StringExternal("Param/Value/1FDAE664")), PlayerGroupAll());
    gv_ScoreDialogText[0] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 85, 45);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, 210, 32);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/A1020A08") + TextWithColor(StringExternal("Param/Value/5DC614AE"), Color(50.20, 100.00, 100.00)) + StringExternal("Param/Value/5B3189C9")), PlayerGroupAll());
    gv_ScoreDialogText[1] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 85, 45);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, 310, 32);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/8B49BB19") + TextWithColor(StringExternal("Param/Value/A0E22CAF"), Color(50.20, 100.00, 100.00)) + StringExternal("Param/Value/0D1C55A8")), PlayerGroupAll());
    gv_ScoreDialogTextB[0] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 150, 45);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, 415, 32);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/B6AD383F") + TextWithColor(StringExternal("Param/Value/00F105AA"), Color(50.20, 100.00, 100.00)) + StringExternal("Param/Value/6B839840")), PlayerGroupAll());
    gv_ScoreDialogTextB[1] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 85, 45);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, 565, 32);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/66AF2A19") + TextWithColor(StringExternal("Param/Value/1869B959"), Color(50.20, 100.00, 100.00)) + StringExternal("Param/Value/E71D8A26")), PlayerGroupAll());
    gv_ScoreDialogTextB[2] = DialogControlLastCreated();
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
    for ( ; ( (auto06B3226E_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 <= auto06B3226E_ae) || (auto06B3226E_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 >= auto06B3226E_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 += auto06B3226E_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerStatusActive)) {
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 45, 45, c_anchorTopLeft, 18, lv_eC84A4ECA095EC8389EC9DB4EBAFB8ECA780yECB695EAB092, StringToText(""), gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
            libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], PlayerGroupAll());
            gv_ScoreDialogHeroImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 70, 40, c_anchorTopLeft, 9, (lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 + 1), (StringExternal("Param/Value/DA83442E") + TextWithColor(IntToText(gv_HeroReviveCountNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]][0]), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/1CA5CA1D")), Color(100,100,100), false, 2.0);
            libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
            gv_ScoreDialogReviveTime[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]] = DialogControlLastCreated();
            DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
            DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
            DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 165, 30);
            DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, 65, (lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 + 1));
            libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/0242BE2E") + PlayerName(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) + StringExternal("Param/Value/B2A8CA94")), PlayerGroupAll());
            gv_ScoreDialogName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]] = DialogControlLastCreated();
            DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
            DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 90, 50);
            DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, 187, lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092);
            libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/5C4D70F1") + StringExternal("Param/Value/33DB673C")), PlayerGroupAll());
            libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
            gv_ScoreDialogLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 40, 40, c_anchorTopLeft, 283, (lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 - 9), gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]][0], gv_SelectedSpellImage1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
            gv_ScoreDialogSpell[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]][0] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 40, 40, c_anchorTopLeft, 335, (lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 - 9), gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]][1], gv_SelectedSpellImage2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]], c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
            gv_ScoreDialogSpell[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]][1] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 250, 50, c_anchorTopLeft, 348, lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092, (StringExternal("Param/Value/89DC04EE") + StringExternal("Param/Value/202109D2") + StringExternal("Param/Value/F8B82F92") + StringExternal("Param/Value/2C590C6B") + StringExternal("Param/Value/2C75B07D") + StringExternal("Param/Value/B5F15C9E") + StringExternal("Param/Value/68C7A1D1")), Color(100,100,100), false, 2.0);
            libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
            gv_ScoreDialogTotalScore[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 150, 50, c_anchorTopLeft, 511, lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092, (StringExternal("Param/Value/12BFE644") + StringExternal("Param/Value/A39E6E4E") + StringExternal("Param/Value/E1D3B8E7")), Color(100,100,100), false, 2.0);
            libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
            gv_ScoreDialogFarming[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]] = DialogControlLastCreated();
        }

        lv_eC84A4ECA095EC8389EC9DB4EBAFB8ECA780yECB695EAB092 += 45;
        lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 += 45;
    }
    lv_eC84A4ECA095EC8389EC9DB4EBAFB8ECA780yECB695EAB092 += 28;
    lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 += 28;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;
    for ( ; ( (auto68E48430_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 <= auto68E48430_ae) || (auto68E48430_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 >= auto68E48430_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 += auto68E48430_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerStatusActive)) {
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 45, 45, c_anchorTopLeft, 18, lv_eC84A4ECA095EC8389EC9DB4EBAFB8ECA780yECB695EAB092, StringToText(""), gv_CharSelectedImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
            libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), gv_CharSelectedName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], PlayerGroupAll());
            gv_ScoreDialogHeroImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 70, 40, c_anchorTopLeft, 9, (lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 + 1), (StringExternal("Param/Value/B461337D") + TextWithColor(IntToText(gv_HeroReviveCountNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]][0]), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/AB10F1DB")), Color(100,100,100), false, 2.0);
            libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
            gv_ScoreDialogReviveTime[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]] = DialogControlLastCreated();
            DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
            DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
            DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 165, 30);
            DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, 65, (lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 + 1));
            libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/CB10884F") + PlayerName(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) + StringExternal("Param/Value/8E58A3DB")), PlayerGroupAll());
            gv_ScoreDialogName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]] = DialogControlLastCreated();
            DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
            DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 90, 50);
            DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, 187, lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092);
            libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/55933A8E") + StringExternal("Param/Value/0E8E2B11")), PlayerGroupAll());
            libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
            gv_ScoreDialogLevel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 40, 40, c_anchorTopLeft, 283, (lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 - 9), gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]][0], gv_SelectedSpellImage1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
            gv_ScoreDialogSpell[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]][0] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 40, 40, c_anchorTopLeft, 335, (lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 - 9), gv_SpellToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]][1], gv_SelectedSpellImage2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]], c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
            gv_ScoreDialogSpell[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]][1] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 250, 50, c_anchorTopLeft, 348, lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092, (StringExternal("Param/Value/C4F0A208") + StringExternal("Param/Value/6E817AF4") + StringExternal("Param/Value/35C0AEE2") + StringExternal("Param/Value/18401CFC") + StringExternal("Param/Value/189B2D59") + StringExternal("Param/Value/45634DA7") + StringExternal("Param/Value/576F378C")), Color(100,100,100), false, 2.0);
            libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
            gv_ScoreDialogTotalScore[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]] = DialogControlLastCreated();
            libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 150, 50, c_anchorTopLeft, 511, lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092, (StringExternal("Param/Value/5F369222") + StringExternal("Param/Value/CD2BC030") + StringExternal("Param/Value/986825E8")), Color(100,100,100), false, 2.0);
            libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
            gv_ScoreDialogFarming[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]] = DialogControlLastCreated();
        }

        lv_eC84A4ECA095EC8389EC9DB4EBAFB8ECA780yECB695EAB092 += 45;
        lv_eC84A4ECA095EB8298EBA8B8ECA780EBB380EC8898yECB695EAB092 += 45;
    }
    DialogCreate(490, 550, c_anchorTopRight, -25, 30, true);
    gv_ScoreDialog[1] = DialogLastCreated();
    DialogSetImageVisible(gv_ScoreDialog[1], false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 290, 70, c_anchorCenter, 100, -235, StringToText(""), StringExternal("Param/Value/EA9531F2"), "Assets\\Textures\\ui_help_tabbutton_normaloverpressedover_protoss.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_help_tabbutton_normaloverpressedover_protoss.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    gv_ScoreDialogAddBtn[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 220, 70, c_anchorCenter, -75, -235, StringToText(""), StringExternal("Param/Value/807E2BCD"), "Assets\\Textures\\ui_help_tabbutton_normaloverpressedover_protoss.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_help_tabbutton_normaloverpressedover_protoss.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeEndCap, PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    gv_ScoreDialogAddBtn[1] = DialogControlLastCreated();
    DialogCreate(250, 75, c_anchorTop, 0, 5, true);
    gv_ScoreDialog[2] = DialogLastCreated();
    DialogSetImageVisible(gv_ScoreDialog[2], false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 250, 75, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_armory_text_innerframe.dds", c_triggerImageTypeHorizontalBorder, false, Color(0.00, 50.20, 100.00), c_triggerBlendModeNormal);
    gv_ScoreDialogImageB[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 117, 8, c_anchorBottomLeft, 9, 13, StringToText(""), "Assets\\Textures\\ui_ingame_leaderboard_bar.dds", c_triggerImageTypeBorder, false, Color(50.20, 100.00, 50.20), c_triggerBlendModeLighten);
    gv_ScoreDialogImageB[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 117, 8, c_anchorBottomRight, 8, 13, StringToText(""), "Assets\\Textures\\ui_ingame_leaderboard_bar.dds", c_triggerImageTypeBorder, false, Color(100.00, 67.45, 100.00), c_triggerBlendModeLighten);
    gv_ScoreDialogImageB[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 50, 40, c_anchorCenter, 1, 0, (StringExternal("Param/Value/F208C3A8") + TextWithColor(StringExternal("Param/Value/98520E1E"), Color(50.20, 91.37, 100.00))), Color(100,100,100), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_ScoreDialogTextB[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 40, c_anchorLeft, 16, 0, (StringExternal("Param/Value/1BC460B3") + TextWithColor(IntToText(gv_PlayerProfileTeamKillNum[0]), Color(100.00, 100.00, 100.00))), Color(100,100,100), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_ScoreDialogTextB[4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 100, 40, c_anchorRight, 12, 0, (StringExternal("Param/Value/86562626") + TextWithColor(IntToText(gv_PlayerProfileTeamKillNum[1]), Color(100.00, 100.00, 100.00))), Color(100,100,100), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_ScoreDialogTextB[5] = DialogControlLastCreated();
}

void gf_HrScoreDialogStatToolTip () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;

    // Automatic Variable Declarations
    const int auto0455B201_ae = 8;
    const int auto0455B201_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;

    // Implementation
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (auto0455B201_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto0455B201_ae) || (auto0455B201_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto0455B201_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto0455B201_ai ) {
        if ((((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerStatusActive)) || (PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerTypeComputer))) {
            gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][0] = (StringExternal("Param/Value/81A9C3B5") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][0]) + StringExternal("Param/Value/9FE47CA9") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][1]) + StringExternal("Param/Value/2C177B25") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][2]) + StringExternal("Param/Value/4D3F19E1") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][3]) + StringExternal("Param/Value/B77D00F4") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][4]) + StringExternal("Param/Value/0356181F") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][5]));
            gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][1] = (StringExternal("Param/Value/960331B1") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][6]) + StringExternal("Param/Value/5B4C54DB") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][7]) + StringExternal("Param/Value/467DB79F") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][8]) + StringExternal("Param/Value/5578FBCC") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][9]) + StringExternal("Param/Value/7F061B37") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][10]) + StringExternal("Param/Value/0B992D42") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][11]));
            gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][2] = (StringExternal("Param/Value/90876E5C") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][18]) + StringExternal("Param/Value/26BDC60F") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][19]) + StringExternal("Param/Value/735882AB") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][20]) + StringExternal("Param/Value/807F018B") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][21]) + StringExternal("Param/Value/34C78D1C") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][22]) + StringExternal("Param/Value/50E69310") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][23]));
            gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][3] = (StringExternal("Param/Value/6FA179B7") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][12]) + StringExternal("Param/Value/BCCAD295") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][13]) + StringExternal("Param/Value/F4470E72") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][14]) + StringExternal("Param/Value/AC4756DD") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][15]) + StringExternal("Param/Value/53E2AE88") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][16]) + StringExternal("Param/Value/2C838535") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][17]));
            gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][4] = (StringExternal("Param/Value/42695A32") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][27]) + StringExternal("Param/Value/777EA2D4") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][28]) + StringExternal("Param/Value/7A9FD794") + IntToText(gv_StatusWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][29]));
            libNtve_gf_SetDialogItemTooltip(gv_ScoreDialogName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], (StringExternal("Param/Value/954454BA") + PlayerName(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) + StringExternal("Param/Value/C04E72F0") + StringExternal("Param/Value/A62B9A29") + gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][0] + StringExternal("Param/Value/36B27B0D") + gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][1] + StringExternal("Param/Value/C32C435A") + gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][2] + StringExternal("Param/Value/7623F55B") + gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][3] + StringExternal("Param/Value/871824A9") + gv_PlayerProfileAddToolTip[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]][4] + StringExternal("Param/Value/68E866B6")), PlayerGroupAll());
        }

    }
}

void gf_HrSurrenderDialogMake () {
    // Automatic Variable Declarations
    // Implementation
    DialogCreate(360, 275, c_anchorBottomRight, 20, 340, true);
    gv_SurrenderDialog = DialogLastCreated();
    DialogSetImageVisible(gv_SurrenderDialog, false);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 315, 180, c_anchorCenter, -2, -9, StringToText(""), "Assets\\blackbg.tga", c_triggerImageTypeNormal, false, Color(0.00, 17.25, 25.10), c_triggerBlendModeNormal);
    DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), 0.0, 25.0);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 360, 275, c_anchorCenter, 0, 0, StringToText(""), "Assets\\Textures\\ui_battlenet_challenge_frame_metal_protoss.dds", c_triggerImageTypeHorizontalBorder, false, Color(100,100,100), c_triggerBlendModeNormal);
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 250, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 53);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/0C5060A4") + TextWithColor(StringExternal("Param/Value/64533281"), Color(100.00, 96.86, 67.45)) + StringExternal("Param/Value/24DF0C18")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_SurrenderDialogLabel[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 125, 50, c_anchorBottom, -62, 85, StringToText(""), StringExternal("Param/Value/BB3FED3B"), "Assets\\Textures\\ui_ingame_menubutton_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_ingame_menubutton_normalandpressed.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_SurrenderDialogBtn[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), 125, 50, c_anchorBottom, 62, 85, StringToText(""), StringExternal("Param/Value/91DBDADC"), "Assets\\Textures\\ui_ingame_menubutton_normaloverandpressedover.dds");
    libNtve_gf_SetDialogItemImage(DialogControlLastCreated(), "Assets\\Textures\\ui_ingame_menubutton_normalandpressed.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemImageType(DialogControlLastCreated(), c_triggerImageTypeNormal, PlayerGroupAll());
    gv_SurrenderDialogBtn[1] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/3111C23E") + TextWithColor(IntToText(gv_SurrenderSystemYorN[0]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/877B3ACA"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[1]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/A6DDF75A")), PlayerGroupAll());
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 200, 35);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 110);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_SurrenderDialogLabel[1] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlSetVisible(DialogControlLastCreated(), GameAttributePlayersForTeam(1), true);
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeProgressBar);
    gv_SurrenderDialogBar[0] = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 225, 15);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, 0, 50);
    libNtve_gf_SetDialogItemMaximumValue(DialogControlLastCreated(), 20.0, PlayerGroupAll());
    libNtve_gf_SetDialogItemMinimumValue(DialogControlLastCreated(), 0.0, PlayerGroupAll());
    libNtve_gf_SetDialogItemCurrentValue(DialogControlLastCreated(), 20.0, PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlSetVisible(DialogControlLastCreated(), GameAttributePlayersForTeam(1), true);
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/521E8C9D") + TextWithColor(IntToText(gv_SurrenderSystemYorN[2]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/7CCB3A8E"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[3]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/B48ED5E1")), PlayerGroupAll());
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 200, 35);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTop, 0, 110);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_SurrenderDialogLabel[2] = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlSetVisible(DialogControlLastCreated(), GameAttributePlayersForTeam(2), true);
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeProgressBar);
    gv_SurrenderDialogBar[1] = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 225, 15);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, 0, 50);
    libNtve_gf_SetDialogItemMaximumValue(DialogControlLastCreated(), 20.0, PlayerGroupAll());
    libNtve_gf_SetDialogItemMinimumValue(DialogControlLastCreated(), 0.0, PlayerGroupAll());
    libNtve_gf_SetDialogItemCurrentValue(DialogControlLastCreated(), 20.0, PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlSetVisible(DialogControlLastCreated(), GameAttributePlayersForTeam(2), true);
}

void gf_HrDrawGame () {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int auto5BD62B6F_ae = 8;
    const int auto5BD62B6F_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Implementation
    TriggerEnable(gt_TrNexusDestroyTeam1, false);
    TriggerEnable(gt_TrNexusDestroyTeam2, false);
    Wait(5.0, c_timeReal);
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (auto5BD62B6F_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= auto5BD62B6F_ae) || (auto5BD62B6F_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= auto5BD62B6F_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += auto5BD62B6F_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], c_gameOverTie, true, true);
        }

    }
}

// Utility finctions

int gf_ShopWindowByIndex(int shop_index) {
    if ((shop_index >= 0) && (shop_index < 6)) {
        return 0;
    }
    if ((shop_index >= 6) && (shop_index < 12)) {
        return 1;
    }
    if ((shop_index >= 12) && (shop_index < 18)) {
        return 3;
    }
    if ((shop_index >= 18) && (shop_index < 24)) {
        return 2;
    }
    if ((shop_index >= 24) && (shop_index < 30)) {
        return 4;
    }
    return -1;
}

bool gf_EligibleForBuyingHotkey(int shop_index) {
    if (gv_StatusWindowPageSwitch[EventPlayer()] != gf_ShopWindowByIndex(shop_index)) {
        return false;
    }
    if (gv_StatusWindowNum[EventPlayer()][shop_index] >= gv_ShopItemParameters[shop_index].max_upgrades) {
        return false;
    }
    if ((shop_index >= 12) && (shop_index < 18) && (gv_SealBought[EventPlayer()])) {
        return false;
    }
    if (PlayerGetPropertyInt(EventPlayer(), c_playerPropMinerals) < gv_StatHowMoney[shop_index][EventPlayer()]) {
        return false;
    }
    if (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) < gv_ShopItemParameters[shop_index].gas_cost) {
        return false;
    }
    if (gv_ShopItemParameters[shop_index].alive_only && (gv_HeroDeathBoolean[EventPlayer()] == true)) {
        return false;
    }
    return true;
}

bool gf_HotkeyStatIncreaseTestConditions() {
    if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
        return false;
    }
    if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
        return false;
    }
    if (!((gv_GameEndBoolean == false))) {
        return false;
    }
    if (!((gv_GameStartBoolean == true))) {
        return false;
    }
    if (!((gv_BeforeStartCounterDialogNum == 0))) {
        return false;
    }
    if (!((gv_StatusWindowAddDelay[EventPlayer()] == false))) {
        return false;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????????
//--------------------------------------------------------------------------------------------------
bool gt_TrStartGame_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_Tr1FullscreenSetting, false, true);
    TriggerExecute(gt_Tr2GameSetting, false, false);
    TriggerExecute(gt_Tr3PlayerSetting, false, false);
    TriggerExecute(gt_Tr5AllDialogInit, false, true);
    TriggerExecute(gt_Tr6PlayerDialogAddorView, false, true);
    TriggerExecute(gt_Tr8VoteScreenView, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrStartGame_Init () {
    gt_TrStartGame = TriggerCreate("gt_TrStartGame_Func");
    TriggerAddEventMapInit(gt_TrStartGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: 1 - ???????????? ???????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_Tr1FullscreenSetting_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880, true);
    DialogCreate(500, 400, c_anchorCenter, 0, 0, true);
    gv_CharChooseFullDialog = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogSetFullscreen(DialogLastCreated(), true);
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 2134, 1200, c_anchorCenter, 0, 0, StringToText(""), "SelectBack.tga", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseFullDialogImage[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemImage(DialogLastCreated(), 2134, 1200, c_anchorCenter, 0, 0, StringToText(""), "Loading.tga", c_triggerImageTypeNormal, false, Color(100,100,100), c_triggerBlendModeNormal);
    gv_CharChooseFullDialogImage[0] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeLabel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 500, 50);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorBottom, 0, 50);
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), (StringExternal("Param/Value/7522D0B2") + TextWithColor(StringExternal("Param/Value/EA78E150"), Color(85.10, 92.55, 100.00)) + StringExternal("Param/Value/8E5B31CF")), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "SecurityButton", PlayerGroupAll());
    gv_CharChooseFullDialogLabel = DialogControlLastCreated();
    DialogSetVisible(gv_CharChooseFullDialog, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Tr1FullscreenSetting_Init () {
    gt_Tr1FullscreenSetting = TriggerCreate("gt_Tr1FullscreenSetting_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: 2 - ?????? ???????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_Tr2GameSetting_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, c_transitionDurationImmediate);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeMenuBar, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeTeamResourceButton, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeSupply, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeAllianceButton, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeHelpMenuButton, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeIdleWorkerButton, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeArmyButton, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogQuitButton, false);
    HelpPanelEnableTechTreeButton(PlayerGroupAll(), false);
    HelpPanelEnableTechGlossaryButton(PlayerGroupAll(), false);
    UISetResourceTradingAllowed(c_resourceTypeMinerals, false);
    UISetResourceTradingAllowed(c_resourceTypeVespene, false);
    GameSetSpeedValue(c_gameSpeedFaster);
    GameSetSpeedLocked(true);
    GameCheatAllow(c_gameCheatAny, false);
    UISetGameMenuItemText(PlayerGroupAll(), c_gameMenuDialogGenericButton1, StringExternal("Param/Value/DE6857B4"));
    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogGenericButton1, false);
    UISetDragSelectEnabled(PlayerGroupAll(), false);
    CameraSetBounds(PlayerGroupAll(), RegionRect(PointGetX(PointFromId(220)), PointGetY(PointFromId(220)), PointGetX(PointFromId(221)), PointGetY(PointFromId(221))), true);
    CinematicFade(false, 0.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(121), false);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(120), false);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(122), false);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(119), false);
    libNtve_gf_SetAlliance(12, 11, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(13, 11, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetPlayerGroupAlliance(GameAttributePlayersForTeam(1), libNtve_ge_AllianceSetting_AllyWithSharedVision);
    libNtve_gf_SetPlayerGroupAlliance(GameAttributePlayersForTeam(2), libNtve_ge_AllianceSetting_AllyWithSharedVision);
    PlayerCreateEffectUnit(12, "ApplyIncapBehavior22222222224", UnitFromId(131));
    PlayerCreateEffectUnit(12, "ApplyIncapBehavior22222222224", UnitFromId(712));
    PlayerCreateEffectUnit(12, "ApplyIncapBehavior222222222242", UnitFromId(116));
    PlayerCreateEffectUnit(12, "ApplyIncapBehavior222222222242", UnitFromId(115));
    PlayerCreateEffectUnit(12, "ApplyIncapBehavior2222222222422", UnitFromId(222));
    PlayerCreateEffectUnit(12, "ApplyIncapBehavior2222222222422", UnitFromId(223));
    PlayerCreateEffectUnit(13, "ApplyIncapBehavior22222222224", UnitFromId(128));
    PlayerCreateEffectUnit(13, "ApplyIncapBehavior22222222224", UnitFromId(713));
    PlayerCreateEffectUnit(13, "ApplyIncapBehavior222222222242", UnitFromId(117));
    PlayerCreateEffectUnit(13, "ApplyIncapBehavior222222222242", UnitFromId(118));
    PlayerCreateEffectUnit(13, "ApplyIncapBehavior2222222222422", UnitFromId(224));
    PlayerCreateEffectUnit(13, "ApplyIncapBehavior2222222222422", UnitFromId(225));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Tr2GameSetting_Init () {
    gt_Tr2GameSetting = TriggerCreate("gt_Tr2GameSetting_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: 3 - ???????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_Tr3PlayerSetting_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_GPlayerNum1;
    int lv_GPlayerNum2;
    int lv_GPlayerNum3;
    int lv_GPlayerNum4;
    int lv_GPlayerNum5;
    int lv_GPlayerNum6;
    int lv_GPlayerNum323;

    // Automatic Variable Declarations
    const int auto85437FDC_ae = 4;
    const int auto85437FDC_ai = 1;
    const int auto85AD0959_ae = 4;
    const int auto85AD0959_ai = 1;
    const int auto699FB9BC_ae = 2;
    const int auto699FB9BC_ai = 1;
    const int autoC1BEB88B_ae = 4;
    const int autoC1BEB88B_ai = 1;
    const int auto95DBE328_ae = 8;
    const int auto95DBE328_ai = 1;

    // Variable Initialization
    lv_GPlayerNum1 = 1;
    lv_GPlayerNum2 = 1;
    lv_GPlayerNum3 = 5;
    lv_GPlayerNum4 = 1;
    lv_GPlayerNum5 = 9;
    lv_GPlayerNum6 = 1;
    lv_GPlayerNum323 = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lv_GPlayerNum1 = 1;
    for ( ; ( (auto85437FDC_ai >= 0 && lv_GPlayerNum1 <= auto85437FDC_ae) || (auto85437FDC_ai < 0 && lv_GPlayerNum1 >= auto85437FDC_ae) ) ; lv_GPlayerNum1 += auto85437FDC_ai ) {
        if ((PlayerType(PlayerGroupPlayer(GameAttributePlayersForTeam(1), lv_GPlayerNum1)) == c_playerTypeUser) && (PlayerStatus(PlayerGroupPlayer(GameAttributePlayersForTeam(1), lv_GPlayerNum1)) == c_playerStatusActive)) {
            gv_PlayerBayul[lv_GPlayerNum1] = PlayerGroupPlayer(GameAttributePlayersForTeam(1), lv_GPlayerNum1);
            CameraPan(PlayerGroupPlayer(GameAttributePlayersForTeam(1), lv_GPlayerNum1), PointFromId(1), 0.0, -1, 0, false);
            libNtve_gf_SetAlliance(PlayerGroupPlayer(GameAttributePlayersForTeam(1), lv_GPlayerNum1), 12, libNtve_ge_AllianceSetting_AllyWithSharedVision);
            VisExploreArea(gv_PlayerBayul[lv_GPlayerNum1], RegionEntireMap(), true, true);
            CameraLockInput(PlayerGroupPlayer(GameAttributePlayersForTeam(1), lv_GPlayerNum1), true);
            PlayerModifyPropertyInt(PlayerGroupPlayer(GameAttributePlayersForTeam(1), lv_GPlayerNum1), c_playerPropMinerals, c_playerPropOperSetTo, 600);
            PlayerModifyPropertyInt(PlayerGroupPlayer(GameAttributePlayersForTeam(1), lv_GPlayerNum1), c_playerPropVespene, c_playerPropOperSetTo, 5);
            gv_HeroDeathBoolean[gv_PlayerBayul[lv_GPlayerNum1]] = false;
            gv_PlayerHandlerNumber[gv_PlayerBayul[lv_GPlayerNum1]] = PlayerHandle(gv_PlayerBayul[lv_GPlayerNum1]);
            gv_ReadyBoolean += 1;
            PlayerGroupAdd(gv_AllPlayerGroup, gv_PlayerBayul[lv_GPlayerNum1]);
            PlayerGroupAdd(gv_TeamPlayerGroup[0], gv_PlayerBayul[lv_GPlayerNum1]);
            gv_SurrenderPlayerNum1 += 1;
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum1], "simplecommandcard", "0");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum1], "displayflyerhelper", "None");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum1], "showworkerstatus", "0");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum1], "showcurrentordermodel", "0");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum1], "selectuncontrolable", "1");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum1], "teamcoloredlifestatus", "1");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum1], "displayunitstatus", "All");
            gv_HeroReviveCountNum[gv_PlayerBayul[lv_GPlayerNum1]][0] = 10;
            gv_HeroReviveCountNum[gv_PlayerBayul[lv_GPlayerNum1]][1] = 10;
            gv_PlayerLevel[gv_PlayerBayul[lv_GPlayerNum1]][0] = 1;
            gv_HeroKillMoney[gv_PlayerBayul[lv_GPlayerNum1]][0] = 60;
            gv_HeroKillMoney[gv_PlayerBayul[lv_GPlayerNum1]][1] = 12;
            gv_HeroKillMoney[gv_PlayerBayul[lv_GPlayerNum1]][2] = 20;
            gv_AllyGiveMoney[gv_PlayerBayul[lv_GPlayerNum1]] = 500;
        }

    }
    lv_GPlayerNum2 = 1;
    for ( ; ( (auto85AD0959_ai >= 0 && lv_GPlayerNum2 <= auto85AD0959_ae) || (auto85AD0959_ai < 0 && lv_GPlayerNum2 >= auto85AD0959_ae) ) ; lv_GPlayerNum2 += auto85AD0959_ai ) {
        if ((PlayerType(PlayerGroupPlayer(GameAttributePlayersForTeam(2), lv_GPlayerNum2)) == c_playerTypeUser) && (PlayerStatus(PlayerGroupPlayer(GameAttributePlayersForTeam(2), lv_GPlayerNum2)) == c_playerStatusActive)) {
            gv_PlayerBayul[lv_GPlayerNum3] = PlayerGroupPlayer(GameAttributePlayersForTeam(2), lv_GPlayerNum2);
            CameraPan(PlayerGroupPlayer(GameAttributePlayersForTeam(2), lv_GPlayerNum2), PointFromId(1), 0.0, -1, 0, false);
            libNtve_gf_SetAlliance(PlayerGroupPlayer(GameAttributePlayersForTeam(2), lv_GPlayerNum2), 13, libNtve_ge_AllianceSetting_AllyWithSharedVision);
            VisExploreArea(gv_PlayerBayul[lv_GPlayerNum3], RegionEntireMap(), true, true);
            CameraLockInput(PlayerGroupPlayer(GameAttributePlayersForTeam(2), lv_GPlayerNum2), true);
            PlayerModifyPropertyInt(PlayerGroupPlayer(GameAttributePlayersForTeam(2), lv_GPlayerNum2), c_playerPropMinerals, c_playerPropOperSetTo, 600);
            PlayerModifyPropertyInt(PlayerGroupPlayer(GameAttributePlayersForTeam(2), lv_GPlayerNum2), c_playerPropVespene, c_playerPropOperSetTo, 5);
            gv_HeroDeathBoolean[gv_PlayerBayul[lv_GPlayerNum3]] = false;
            gv_PlayerHandlerNumber[gv_PlayerBayul[lv_GPlayerNum3]] = PlayerHandle(gv_PlayerBayul[lv_GPlayerNum3]);
            gv_ReadyBoolean += 1;
            PlayerGroupAdd(gv_AllPlayerGroup, gv_PlayerBayul[lv_GPlayerNum3]);
            PlayerGroupAdd(gv_TeamPlayerGroup[1], gv_PlayerBayul[lv_GPlayerNum3]);
            gv_SurrenderPlayerNum2 += 1;
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum3], "simplecommandcard", "0");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum3], "displayflyerhelper", "None");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum3], "showworkerstatus", "0");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum3], "showcurrentordermodel", "0");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum3], "selectuncontrolable", "1");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum3], "teamcoloredlifestatus", "1");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum3], "displayunitstatus", "All");
            gv_HeroReviveCountNum[gv_PlayerBayul[lv_GPlayerNum3]][0] = 10;
            gv_HeroReviveCountNum[gv_PlayerBayul[lv_GPlayerNum3]][1] = 10;
            gv_PlayerLevel[gv_PlayerBayul[lv_GPlayerNum3]][0] = 1;
            gv_HeroKillMoney[gv_PlayerBayul[lv_GPlayerNum3]][0] = 60;
            gv_HeroKillMoney[gv_PlayerBayul[lv_GPlayerNum3]][1] = 12;
            gv_HeroKillMoney[gv_PlayerBayul[lv_GPlayerNum3]][2] = 20;
            gv_AllyGiveMoney[gv_PlayerBayul[lv_GPlayerNum3]] = 500;
        }

        lv_GPlayerNum3 += 1;
    }
    lv_GPlayerNum4 = 1;
    for ( ; ( (auto699FB9BC_ai >= 0 && lv_GPlayerNum4 <= auto699FB9BC_ae) || (auto699FB9BC_ai < 0 && lv_GPlayerNum4 >= auto699FB9BC_ae) ) ; lv_GPlayerNum4 += auto699FB9BC_ai ) {
        if (((PlayerType(PlayerGroupPlayer(GameAttributePlayersForTeam(3), lv_GPlayerNum4)) == c_playerTypeComputer) || ((PlayerType(PlayerGroupPlayer(GameAttributePlayersForTeam(3), lv_GPlayerNum4)) == c_playerTypeUser) && (PlayerStatus(PlayerGroupPlayer(GameAttributePlayersForTeam(3), lv_GPlayerNum4)) == c_playerStatusActive)))) {
            gv_PlayerBayul[lv_GPlayerNum5] = PlayerGroupPlayer(GameAttributePlayersForTeam(3), lv_GPlayerNum4);
            CameraPan(PlayerGroupPlayer(GameAttributePlayersForTeam(3), lv_GPlayerNum4), PointFromId(1), 0.0, -1, 0, false);
            libNtve_gf_SetAlliance(PlayerGroupPlayer(GameAttributePlayersForTeam(3), lv_GPlayerNum4), 11, libNtve_ge_AllianceSetting_AllyWithSharedVision);
            libNtve_gf_SetAlliance(PlayerGroupPlayer(GameAttributePlayersForTeam(3), lv_GPlayerNum4), 12, libNtve_ge_AllianceSetting_AllyWithSharedVision);
            libNtve_gf_SetAlliance(PlayerGroupPlayer(GameAttributePlayersForTeam(3), lv_GPlayerNum4), 13, libNtve_ge_AllianceSetting_EnemyWithSharedVision);
            VisExploreArea(gv_PlayerBayul[lv_GPlayerNum5], RegionEntireMap(), true, true);
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum5], "simplecommandcard", "0");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum5], "displayflyerhelper", "None");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum5], "showworkerstatus", "0");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum5], "showcurrentordermodel", "0");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum5], "selectuncontrolable", "1");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum5], "teamcoloredlifestatus", "1");
            PlayerOptionOverride(gv_PlayerBayul[lv_GPlayerNum5], "displayunitstatus", "All");
            lv_GPlayerNum6 = 1;
            for ( ; ( (autoC1BEB88B_ai >= 0 && lv_GPlayerNum6 <= autoC1BEB88B_ae) || (autoC1BEB88B_ai < 0 && lv_GPlayerNum6 >= autoC1BEB88B_ae) ) ; lv_GPlayerNum6 += autoC1BEB88B_ai ) {
                if (((PlayerType(gv_PlayerBayul[lv_GPlayerNum6]) == c_playerTypeComputer) || ((PlayerType(gv_PlayerBayul[lv_GPlayerNum6]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_GPlayerNum6]) == c_playerStatusActive)))) {
                    libNtve_gf_SetAlliance(gv_PlayerBayul[lv_GPlayerNum6], gv_PlayerBayul[lv_GPlayerNum5], libNtve_ge_AllianceSetting_AllyWithSharedVision);
                    PlayerSetAlliance(gv_PlayerBayul[lv_GPlayerNum6], c_allianceIdControl, gv_PlayerBayul[lv_GPlayerNum5], true);
                }

            }
            lv_GPlayerNum6 = 5;
            for ( ; ( (auto95DBE328_ai >= 0 && lv_GPlayerNum6 <= auto95DBE328_ae) || (auto95DBE328_ai < 0 && lv_GPlayerNum6 >= auto95DBE328_ae) ) ; lv_GPlayerNum6 += auto95DBE328_ai ) {
                if (((PlayerType(gv_PlayerBayul[lv_GPlayerNum6]) == c_playerTypeComputer) || ((PlayerType(gv_PlayerBayul[lv_GPlayerNum6]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_GPlayerNum6]) == c_playerStatusActive)))) {
                    libNtve_gf_SetAlliance(gv_PlayerBayul[lv_GPlayerNum6], gv_PlayerBayul[lv_GPlayerNum5], libNtve_ge_AllianceSetting_EnemyWithSharedVision);
                    PlayerSetAlliance(gv_PlayerBayul[lv_GPlayerNum6], c_allianceIdControl, gv_PlayerBayul[lv_GPlayerNum5], true);
                }

            }
        }

        lv_GPlayerNum5 += 1;
        lv_GPlayerNum6 = 1;
    }
    UISetCommandAllowed(GameAttributePlayersForTeam(3), c_uiCommandAllowButtons, false);
    UISetCommandAllowed(GameAttributePlayersForTeam(3), c_uiCommandAllowPings, false);
    UISetCommandAllowed(GameAttributePlayersForTeam(3), c_uiCommandAllowSmartClick, false);
    UISetCommandAllowed(GameAttributePlayersForTeam(3), c_uiCommandAllowHotkeys, false);
    UISetCommandAllowed(GameAttributePlayersForTeam(3), c_uiCommandAllowMinimap, false);
    UISetCommandAllowed(GameAttributePlayersForTeam(3), c_uiCommandAllowModifiers, false);
    UISetCommandAllowed(GameAttributePlayersForTeam(3), c_uiCommandAllowInfoPanel, false);
    UISetFrameVisible(GameAttributePlayersForTeam(3), c_syncFrameTypeInventoryPanel, false);
    if ((PlayerGroupCount(gv_AllPlayerGroup) == 1)) {
        gv_SingleAccess = true;
        TriggerEnable(gt_TrSingleCheetMoney, true);
        TriggerEnable(gt_TrSingleCheetLevel, true);
        TriggerEnable(gt_TrSingleCheetTestUnit, true);
        TriggerEnable(gt_TrSingleCheetDPup, true);
        TriggerEnable(gt_TrSingleCheetDPdown, true);
        TriggerEnable(gt_TrSingleCheetRPup, true);
        TriggerEnable(gt_TrSingleCheetRPdown, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Tr3PlayerSetting_Init () {
    gt_Tr3PlayerSetting = TriggerCreate("gt_Tr3PlayerSetting_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: 5 - ?????? ???????????? ?????????
//--------------------------------------------------------------------------------------------------
bool gt_Tr5AllDialogInit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gf_HrStartBeforeCounterMake();
    gf_HrStartBeforeCounterMake2();
    gf_HrStartBeforeCounterMake3();
    gf_HrHeroReviveWindowMake();
    gf_HrSkillLearnDialogMake();
    gf_HrStatMoneySet();
    gf_HrTeamSelectDialogMake();
    gf_HrStatDialogMake1a();
    gf_HrStatDialogMake1b();
    gf_HrStatDialogMake2a();
    gf_HrStatDialogMake2b();
    gf_HrStatDialogMake3a2();
    gf_HrStatDialogMake3b2();
    gf_HrStatDialogMake3a();
    gf_HrStatDialogMake3b();
    gf_HrStatDialogMake4a();
    gf_HrStatDialogMake4b();
    gf_HrSurrenderDialogMake();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Tr5AllDialogInit_Init () {
    gt_Tr5AllDialogInit = TriggerCreate("gt_Tr5AllDialogInit_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: 6 - ???????????? ???????????? ?????? ??? ??????
//--------------------------------------------------------------------------------------------------
bool gt_Tr6PlayerDialogAddorView_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;
    text[11] lv_eC84A4ECA095EAB384EAB889ED858DEC8AA4ED8AB8;

    // Automatic Variable Declarations
    const int auto1CD1493C_ae = 8;
    const int auto1CD1493C_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (auto1CD1493C_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= auto1CD1493C_ae) || (auto1CD1493C_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= auto1CD1493C_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += auto1CD1493C_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive)) {
            DialogControlSetVisible(gv_SkillLearnWindowNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), true);
            DialogControlSetVisible(gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][0], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), true);
            DialogControlSetVisible(gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][1], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), true);
            DialogControlSetVisible(gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][2], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), true);
            DialogControlSetVisible(gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][3], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), true);
            DialogControlSetVisible(gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][4], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), true);
            DialogControlSetVisible(gv_StatusWindowLabel[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]][5], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), true);
            DialogControlSetVisible(gv_TeamSelectDialogPlayerName[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], PlayerGroupAll(), true);
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == true)) {
                DialogControlSetVisible(gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], GameAttributePlayersForTeam(1), true);
                DialogControlSetVisible(gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], GameAttributePlayersForTeam(1), true);
                DialogControlSetVisible(gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], GameAttributePlayersForTeam(1), true);
            }
            else {
                if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == true)) {
                    DialogControlSetVisible(gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], GameAttributePlayersForTeam(2), true);
                    DialogControlSetVisible(gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], GameAttributePlayersForTeam(2), true);
                    DialogControlSetVisible(gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], GameAttributePlayersForTeam(2), true);
                }

            }
            DialogControlSetVisible(gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], GameAttributePlayersForTeam(3), true);
            DialogControlSetVisible(gv_TeamSelectDialogPlayerBorder[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], PlayerGroupAll(), true);
            DialogControlSetVisible(gv_TeamSelectDialogPlayerSpellImage1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], GameAttributePlayersForTeam(3), true);
            DialogControlSetVisible(gv_TeamSelectDialogPlayerSpellImage2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], GameAttributePlayersForTeam(3), true);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Tr6PlayerDialogAddorView_Init () {
    gt_Tr6PlayerDialogAddorView = TriggerCreate("gt_Tr6PlayerDialogAddorView_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: 8 - ?????? ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_Tr8VoteScreenView_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_GPlayerNum1;

    // Automatic Variable Declarations
    const int autoFA2DE727_ae = 8;
    const int autoFA2DE727_ai = 1;

    // Variable Initialization
    lv_GPlayerNum1 = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.5, c_timeReal);
    DialogControlFadeTransparency(gv_CharChooseFullDialogImage[0], PlayerGroupAll(), 1.5, 100.0);
    DialogControlSetVisible(gv_CharChooseFullDialogLabel, PlayerGroupAll(), false);
    Wait(1.5, c_timeReal);
    DialogControlSetVisible(gv_CharChooseFullDialogImage[0], PlayerGroupAll(), false);
    Wait(0.5, c_timeReal);
    DialogSetVisible(gv_CharChooseDialog[1], PlayerGroupAll(), true);
    DialogSetVisible(gv_BeforeStartCounterDialog[0], PlayerGroupAll(), true);
    while ((gv_BeforeStartCounterDialogNum > 0)) {
        libNtve_gf_SetDialogItemText(gv_BeforeStartCounterDialogLabel[0], (StringExternal("Param/Value/24BC1DB5") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/9138AB48")), PlayerGroupAll());
        gv_BeforeStartCounterDialogNum -= 1;
        if (((gv_ReadyBoolean == 0) || ((gv_GameModeVoteInt[0] > gv_GameModeVoteInt[1]) && ((gv_GameModeVoteInt[0] - gv_GameModeVoteInt[1]) >= 3)) || ((gv_GameModeVoteInt[1] > gv_GameModeVoteInt[0]) && ((gv_GameModeVoteInt[1] - gv_GameModeVoteInt[0]) >= 3)))) {
            gv_BeforeStartCounterDialogNum = 0;
        }

        Wait(1.0, c_timeReal);
    }
    libNtve_gf_SetDialogItemText(gv_BeforeStartCounterDialogLabel[0], (StringExternal("Param/Value/4CA2C74C") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/8B9FA8FC")), PlayerGroupAll());
    Wait(1.0, c_timeReal);
    gv_ReadyBoolean = 0;
    SoundPlay(SoundLink("UI_League_Badge_Impact_6Ch_Bell", -1), PlayerGroupAll(), 100.0, 0.0);
    DialogSetVisible(gv_CharChooseDialog[1], PlayerGroupAll(), false);
    DialogSetVisible(gv_BeforeStartCounterDialog[0], PlayerGroupAll(), false);
    DialogSetPosition(gv_BeforeStartCounterDialog[0], c_anchorCenter, 0, -395);
    if ((gv_GameModeVoteInt[0] > gv_GameModeVoteInt[1])) {
        gv_GameModeVoteValue = true;
    }

    lv_GPlayerNum1 = 1;
    for ( ; ( (autoFA2DE727_ai >= 0 && lv_GPlayerNum1 <= autoFA2DE727_ae) || (autoFA2DE727_ai < 0 && lv_GPlayerNum1 >= autoFA2DE727_ae) ) ; lv_GPlayerNum1 += autoFA2DE727_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_GPlayerNum1]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_GPlayerNum1]) == c_playerStatusActive)) {
            gv_ReadyBoolean += 1;
            if ((gv_GameModeVoteValue == true)) {
                DialogControlSetVisible(gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[lv_GPlayerNum1]], PlayerGroupAll(), false);
                DialogControlSetVisible(gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[lv_GPlayerNum1]], PlayerGroupAll(), true);
                libNtve_gf_SetDialogItemText(gv_TeamSelectDialogPlayerName[gv_PlayerBayul[lv_GPlayerNum1]], (StringExternal("Param/Value/47A1E486") + PlayerName(gv_PlayerBayul[lv_GPlayerNum1]) + StringExternal("Param/Value/A5530891")), PlayerGroupAll());
            }

        }

    }
    Wait(0.25, c_timeReal);
    DialogSetVisible(gv_CharChooseDialog[0], PlayerGroupAll(), true);
    DialogSetVisible(gv_BeforeStartCounterDialog[0], PlayerGroupAll(), true);
    DialogSetVisible(gv_CharChooseDialog[2], PlayerGroupAll(), true);
    DialogSetVisible(gv_CharChooseDialog[4], PlayerGroupAll(), true);
    DialogSetVisible(gv_TeamSelectDialog[0], PlayerGroupAll(), true);
    DialogSetVisible(gv_TeamSelectDialog[1], PlayerGroupAll(), true);
    if ((gv_GameModeVoteValue == true)) {
        TriggerEnable(gt_TrCharSelectDraft, true);
        TriggerExecute(gt_TrCharSelectDraft, true, false);
    }
    else {
        TriggerEnable(gt_TrCharSelectBlind, true);
        TriggerExecute(gt_TrCharSelectBlind, true, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Tr8VoteScreenView_Init () {
    gt_Tr8VoteScreenView = TriggerCreate("gt_Tr8VoteScreenView_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ?????? ?????? - ?????? ??????
//--------------------------------------------------------------------------------------------------
static bool lf_CharacterNotChosen(int player_number) {
    int i;
    for (i = 0; i < 4; i += 1) {
        if (gv_Team1CharNum[i] == gv_SelectedCharNum[gv_PlayerBayul[player_number]]) {
            return false;
        }
        if (gv_Team2CharNum[i] == gv_SelectedCharNum[gv_PlayerBayul[player_number]]) {
            return false;
        }
    }
    return true;
}
static void lf_PlayerHeroChoice(int player_number) {
    int flag;
    int team_number;
    int dialog_x_position;
    int player_index_in_team;
    // Variable Initialization
    flag = 1;
    team_number = 1;
    if (player_number > 4) {
        team_number = 2;
    }
    dialog_x_position = -365;
    player_index_in_team = player_number - 1;
    if (team_number == 2) {
        dialog_x_position = 365;
        player_index_in_team -= 4;
    }
    // Enable the countdown
    gv_BeforeStartCounterDialogNum = 25;
    DialogSetVisible(gv_BeforeStartCounterDialog[1], PlayerGroupAll(), true);
    DialogSetPosition(gv_BeforeStartCounterDialog[1], c_anchorCenter, dialog_x_position, -375);
    // "[Player]'s turn" text
    libNtve_gf_SetDialogItemText(
        gv_BeforeStartCounterDialogLabel[1],
        (
            StringExternal("Param/Value/1F62248E") +
            TextWithColor(PlayerName(gv_PlayerBayul[player_number]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_PlayerBayul[player_number], false))) +
            TextWithColor(StringExternal("Param/Value/3F436E23"), Color(100.00, 100.00, 100.00))
        ),
        PlayerGroupAll()
    );
    // "Selecting" under the portrait
    SoundPlay(SoundLink("UI_Bnet_PopUp_Generic", -1), PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SetDialogItemText(
        gv_TeamSelectDialogPlayerName[gv_PlayerBayul[player_number]],
        (StringExternal("Param/Value/DBADF006") + PlayerName(gv_PlayerBayul[player_number]) + StringExternal("Param/Value/0FA3FB8C")),
        PlayerGroupAll()
    );
    // Countdown ticks
    gv_GameModeMyTurn[gv_PlayerBayul[player_number]] = true;
    while ((gv_BeforeStartCounterDialogNum > 0)) {
        libNtve_gf_SetDialogItemText(
            gv_BeforeStartCounterDialogLabel[0],
            (StringExternal("Param/Value/583553B0") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/0214B204")),
            PlayerGroupAll()
        );
        gv_BeforeStartCounterDialogNum -= 1;
        if (((gv_ReadyClickBoolean[gv_PlayerBayul[player_number]] == true) || (PlayerStatus(gv_PlayerBayul[player_number]) != c_playerStatusActive))) {
            gv_BeforeStartCounterDialogNum = 0;
        }
        Wait(1.0, c_timeReal);
    }
    libNtve_gf_SetDialogItemText(gv_BeforeStartCounterDialogLabel[0], (StringExternal("Param/Value/5C0B98B5") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/CEFBE5DF")), PlayerGroupAll());
    Wait(0.5, c_timeReal);
    // Disable the countdown
    DialogSetVisible(gv_BeforeStartCounterDialog[1], PlayerGroupAll(), false);
    // Give a random character if not chosen
    if ((gv_SelectedCharNum[gv_PlayerBayul[player_number]] == 0)) {
        while ((flag > 0)) {
            gv_SelectedCharNum[gv_PlayerBayul[player_number]] = RandomInt(1, gv_TotalHeroNum);
            if (lf_CharacterNotChosen(player_number)) {
                flag = 0;
                if (team_number == 1) {
                    gv_Team1CharNum[player_index_in_team] = gv_SelectedCharNum[gv_PlayerBayul[player_number]];
                } else {
                    gv_Team2CharNum[player_index_in_team] = gv_SelectedCharNum[gv_PlayerBayul[player_number]];
                }
                PlayerCreateEffectPoint(gv_PlayerBayul[player_number], "HeroOkGi2242", PointFromId(1));
            }
            Wait(0.01, c_timeReal);
        }
    }
    // "Ready" under the portrait
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogPlayerName[gv_PlayerBayul[player_number]], (StringExternal("Param/Value/0C8DBF4C") + PlayerName(gv_PlayerBayul[player_number]) + StringExternal("Param/Value/7ACF4E49")), PlayerGroupAll());
    // Pass the choice
    gv_GameModeMyTurn[gv_PlayerBayul[player_number]] = false;
}

static void lf_PlayerBan(int player_number, int ban_number) {
    int i;
    int flag;
    int team_number;
    int dialog_x_position;
    int player_index_in_team;
    // Variable Initialization
    flag = 1;
    team_number = 1;
    if (player_number > 4) {
        team_number = 2;
    }
    dialog_x_position = -365;
    player_index_in_team = player_number - 1;
    if (team_number == 2) {
        dialog_x_position = 365;
        player_index_in_team -= 4;
    }
    // Enable the countdown
    gv_BeforeStartCounterDialogNum = 25;
    DialogSetVisible(gv_BeforeStartCounterDialog[1], PlayerGroupAll(), true);
    DialogSetPosition(gv_BeforeStartCounterDialog[1], c_anchorCenter, dialog_x_position, -375);
    // "[Player]'s turn" text
    libNtve_gf_SetDialogItemText(
        gv_BeforeStartCounterDialogLabel[1],
        (
            StringExternal("Param/Value/1F62248E") +
            TextWithColor(PlayerName(gv_PlayerBayul[player_number]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_PlayerBayul[player_number], false))) +
            TextWithColor(StringToText("'s ban"), Color(100.00, 100.00, 100.00)) // TODO: move to external string
            // TextWithColor(StringExternal("Param/Value/3F436E23"), Color(100.00, 100.00, 100.00))
        ),
        PlayerGroupAll()
    );
    // "Banning" under the portrait
    libNtve_gf_SetDialogItemText(
        gv_TeamSelectDialogPlayerName[gv_PlayerBayul[player_number]],
        (
            StringExternal("Param/Value/DBADF006") + 
            PlayerName(gv_PlayerBayul[player_number]) + 
            StringToText("(</c><c val=\"ff4444\">Banning</c>)</s>") // TODO: Move to external string
            // StringExternal("Param/Value/0FA3FB8C")
        ),
        PlayerGroupAll()
    );
    // Countdown ticks
    gv_GameModeMyTurn[gv_PlayerBayul[player_number]] = true;
    while ((gv_BeforeStartCounterDialogNum > 0)) {
        libNtve_gf_SetDialogItemText(
            gv_BeforeStartCounterDialogLabel[0],
            (StringExternal("Param/Value/583553B0") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/0214B204")),
            PlayerGroupAll()
        );
        gv_BeforeStartCounterDialogNum -= 1;
        if ((gv_SelectedCharNum[gv_PlayerBayul[player_number]] != 0) || (PlayerStatus(gv_PlayerBayul[player_number]) != c_playerStatusActive)) {
            gv_BeforeStartCounterDialogNum = 0;
            break;
        }
        Wait(1.0, c_timeReal);
    }
    libNtve_gf_SetDialogItemText(gv_BeforeStartCounterDialogLabel[0], (StringExternal("Param/Value/5C0B98B5") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/CEFBE5DF")), PlayerGroupAll());
    Wait(0.05, c_timeReal);
    // Disable the countdown
    DialogSetVisible(gv_BeforeStartCounterDialog[1], PlayerGroupAll(), false);
    // Choose a random unbanned character if time's up
    if ((gv_SelectedCharNum[gv_PlayerBayul[player_number]] == 0)) {
        while ((flag > 0)) {
            gv_SelectedCharNum[gv_PlayerBayul[player_number]] = RandomInt(1, gv_TotalHeroNum);
            flag = 0;
            for (i = 0; i < 6; i += 1) {
                if (gv_SelectedCharNum[gv_PlayerBayul[player_number]] == gv_BannedCharNum[i]) {
                    flag = 1;
                    break;
                }
            }
            if (flag == 1) {
                continue;
            }
            Wait(0.01, c_timeReal);
        }
    }
    // Ban it for everyone
    gv_BannedCharNum[ban_number] = gv_SelectedCharNum[gv_PlayerBayul[player_number]];
    DialogControlSetEnabled(gv_CharChooseWindowBtn[gv_BannedCharNum[ban_number] - 1], PlayerGroupAll(), false);
    DialogControlSetEnabled(gv_CharChooseWindowImage[gv_BannedCharNum[ban_number] - 1], PlayerGroupAll(), false);
    // Play the sound
    SoundPlay(SoundLink("Hero62_Death", -1), PlayerGroupAll(), 100.0, 0.0); // TODO: Choose a fitting sound
    // Display the message for everyone
    UIDisplayMessage(
        PlayerGroupAll(),
        c_messageAreaSubtitle,
        (
            TextWithColor(PlayerName(gv_PlayerBayul[player_number]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_PlayerBayul[player_number], false))) +
            StringToText(" has banned ") + // TODO: Move to external string
            gv_CharSelectedName[gv_PlayerBayul[player_number]]
        )
    );
    // Reset the chosen character portrait, name and number
    gv_CharSelectedImage[gv_PlayerBayul[player_number]] = "Assets\\InviButton.dds";
    gv_CharSelectedName[gv_PlayerBayul[player_number]] = StringToText("");
    gv_SelectedCharNum[gv_PlayerBayul[player_number]] = 0;
    // Reset the actual portrait dialog
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[player_number]], gv_CharSelectedImage[gv_PlayerBayul[player_number]], PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[gv_PlayerBayul[player_number]], gv_CharSelectedName[gv_PlayerBayul[player_number]], PlayerGroupAll());
    // "Waiting" under the portrait
    libNtve_gf_SetDialogItemText(
        gv_TeamSelectDialogPlayerName[gv_PlayerBayul[player_number]],
        (StringExternal("Param/Value/47A1E486") + PlayerName(gv_PlayerBayul[player_number]) + StringExternal("Param/Value/A5530891")),
        PlayerGroupAll()
    );
    // Pass the choice
    gv_GameModeMyTurn[gv_PlayerBayul[player_number]] = false;
}

bool gt_TrCharSelectDraft_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int i = 1;
    int flag = 1;
    int ban_number;
    // Actions
    if (!runActions) {
        return true;
    }
    TriggerEnable(TriggerGetCurrent(), false);
    for (i = 0; i < 4; i += 1) {
        DialogControlSetEnabled(gv_CharChooseWindowRandomBtn[i], PlayerGroupAll(), false);
        DialogControlSetEnabled(gv_CharChooseWindowRandomImage[i], PlayerGroupAll(), false);
    }
    // Bans
    SoundPlay(SoundLink("UI_Bnet_PopUp_Generic", -1), PlayerGroupAll(), 100.0, 0.0);
    ban_number = 0;
    for (i = 0; i < 3; i += 1) {
        if ((PlayerType(gv_PlayerBayul[1]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[1]) == c_playerStatusActive)) {
            lf_PlayerBan(1, ban_number);
            ban_number += 1;
        }
        if ((PlayerType(gv_PlayerBayul[5]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[5]) == c_playerStatusActive)) {
            lf_PlayerBan(5, ban_number);
            ban_number += 1;
        }
    }
    // Hero select
    for (i = 1 ; i <= 8 ; i += 1 ) {
        if ((PlayerType(gv_PlayerBayul[i]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[i]) == c_playerStatusActive)) {
            lf_PlayerHeroChoice(gv_DraftChoiceOrder[i - 1]);
        }
    }
    // Character swapping
    SoundPlay(SoundLink("UI_Bnet_GameModeBig", -1), PlayerGroupAll(), 100.0, 0.0);
    DialogControlSetEnabled(gv_CharChooseDialogReadyBtn, PlayerGroupAll(), false);
    gv_BeforeStartCounterDialogNum = 15;
    for (i = 1 ; i <= 8 ; i += 1 ) {
        if ((PlayerType(gv_PlayerBayul[i]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[i]) == c_playerStatusActive)) {
            if ((gv_PlayerBayul[i] != gv_PlayerBayul[1]) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), gv_PlayerBayul[i]) == true) && (PlayerStatus(gv_PlayerBayul[1]) == c_playerStatusActive)) {
                DialogControlSetVisible(gv_TeamSelectBtn[0], PlayerGroupSingle(gv_PlayerBayul[i]), true);
            }
            if ((gv_PlayerBayul[i] != gv_PlayerBayul[2]) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), gv_PlayerBayul[i]) == true) && (PlayerStatus(gv_PlayerBayul[2]) == c_playerStatusActive)) {
                DialogControlSetVisible(gv_TeamSelectBtn[1], PlayerGroupSingle(gv_PlayerBayul[i]), true);
            }
            if ((gv_PlayerBayul[i] != gv_PlayerBayul[3]) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), gv_PlayerBayul[i]) == true) && (PlayerStatus(gv_PlayerBayul[3]) == c_playerStatusActive)) {
                DialogControlSetVisible(gv_TeamSelectBtn[2], PlayerGroupSingle(gv_PlayerBayul[i]), true);
            }
            if ((gv_PlayerBayul[i] != gv_PlayerBayul[4]) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), gv_PlayerBayul[i]) == true) && (PlayerStatus(gv_PlayerBayul[4]) == c_playerStatusActive)) {
                DialogControlSetVisible(gv_TeamSelectBtn[3], PlayerGroupSingle(gv_PlayerBayul[i]), true);
            }
            if ((gv_PlayerBayul[i] != gv_PlayerBayul[5]) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), gv_PlayerBayul[i]) == true) && (PlayerStatus(gv_PlayerBayul[5]) == c_playerStatusActive)) {
                DialogControlSetVisible(gv_TeamSelectBtn[4], PlayerGroupSingle(gv_PlayerBayul[i]), true);
            }
            if ((gv_PlayerBayul[i] != gv_PlayerBayul[6]) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), gv_PlayerBayul[i]) == true) && (PlayerStatus(gv_PlayerBayul[6]) == c_playerStatusActive)) {
                DialogControlSetVisible(gv_TeamSelectBtn[5], PlayerGroupSingle(gv_PlayerBayul[i]), true);
            }
            if ((gv_PlayerBayul[i] != gv_PlayerBayul[7]) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), gv_PlayerBayul[i]) == true) && (PlayerStatus(gv_PlayerBayul[7]) == c_playerStatusActive)) {
                DialogControlSetVisible(gv_TeamSelectBtn[6], PlayerGroupSingle(gv_PlayerBayul[i]), true);
            }
            if ((gv_PlayerBayul[i] != gv_PlayerBayul[8]) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), gv_PlayerBayul[i]) == true) && (PlayerStatus(gv_PlayerBayul[8]) == c_playerStatusActive)) {
                DialogControlSetVisible(gv_TeamSelectBtn[7], PlayerGroupSingle(gv_PlayerBayul[i]), true);
            }
        }
    }
    while ((gv_BeforeStartCounterDialogNum > 0)) {
        libNtve_gf_SetDialogItemText(gv_BeforeStartCounterDialogLabel[0], (StringExternal("Param/Value/7179CDFE") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/BF891EA0")), PlayerGroupAll());
        gv_BeforeStartCounterDialogNum -= 1;
        Wait(1.0, c_timeReal);
    }
    libNtve_gf_SetDialogItemText(gv_BeforeStartCounterDialogLabel[0], (StringExternal("Param/Value/D720B649") + IntToText(0) + StringExternal("Param/Value/4B1E7C27")), PlayerGroupAll());
    Wait(1.0, c_timeReal);
    // Cleanup
    DialogControlSetEnabled(gv_CharChooseDialogReadyBtn, PlayerGroupAll(), false);
    for (i = 0; i < 8; i += 1) {
        DialogSetVisible(gv_CharChooseDialog[i], PlayerGroupAll(), false);
    }
    DialogSetVisible(gv_TeamSelectDialog[0], PlayerGroupAll(), false);
    DialogSetVisible(gv_TeamSelectDialog[1], PlayerGroupAll(), false);
    DialogSetVisible(gv_BeforeStartCounterDialog[0], PlayerGroupAll(), false);
    DialogControlFadeTransparency(gv_CharChooseFullDialogImage[1], PlayerGroupAll(), 1.0, 100.0);
    SoundPlay(SoundLink("UI_LeaguePromotion_Gold_Impact", -1), PlayerGroupAll(), 100.0, 0.0);
    Wait(1.5, c_timeReal);
    DialogSetVisible(gv_CharChooseFullDialog, PlayerGroupAll(), false);
    TriggerExecute(gt_TrBeforeSpellRandomSelect, false, false);
    return true;
}
//--------------------------------------------------------------------------------------------------
void gt_TrCharSelectDraft_Init () {
    gt_TrCharSelectDraft = TriggerCreate("gt_TrCharSelectDraft_Func");
    TriggerEnable(gt_TrCharSelectDraft, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ?????? ?????? - ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrCharSelectBlind_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;
    int lv_eC84A4ECA095ECBA90EBA6ADEC84A0ED839DEC9984EBA38CEC9DB8EC8B9D;
    int[12] lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898;

    // Automatic Variable Declarations
    const int auto47DE61EC_ae = 8;
    const int auto47DE61EC_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    lv_eC84A4ECA095ECBA90EBA6ADEC84A0ED839DEC9984EBA38CEC9DB8EC8B9D = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_BeforeStartCounterDialogNum = 83;
    while ((gv_BeforeStartCounterDialogNum > 0)) {
        if ((gv_BeforeStartCounterDialogNum <= 10)) {
            libNtve_gf_SetDialogItemText(gv_BeforeStartCounterDialogLabel[0], (StringExternal("Param/Value/704236E9") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/E3AE55D5")), PlayerGroupAll());
            SoundPlay(SoundLink("UI_DoorMenu_ListSelect", -1), PlayerGroupAll(), 100.0, 0.0);
        }
        else {
            libNtve_gf_SetDialogItemText(gv_BeforeStartCounterDialogLabel[0], (StringExternal("Param/Value/279CB5D8") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/C33FE07E")), PlayerGroupAll());
        }
        gv_BeforeStartCounterDialogNum -= 1;
        if ((gv_ReadyBoolean == 0)) {
            gv_BeforeStartCounterDialogNum = 0;
        }

        Wait(1.0, c_timeReal);
    }
    libNtve_gf_SetDialogItemText(gv_BeforeStartCounterDialogLabel[0], (StringExternal("Param/Value/60B3A502") + IntToText(gv_BeforeStartCounterDialogNum) + StringExternal("Param/Value/9DCA98DA")), PlayerGroupAll());
    SoundPlay(SoundLink("UI_DoorMenu_ListSelect", -1), PlayerGroupAll(), 100.0, 0.0);
    Wait(1.0, c_timeReal);
    DialogControlSetEnabled(gv_CharChooseDialogReadyBtn, PlayerGroupAll(), false);
    DialogSetVisible(gv_CharChooseDialog[0], PlayerGroupAll(), false);
    DialogSetVisible(gv_CharChooseDialog[2], PlayerGroupAll(), false);
    DialogSetVisible(gv_CharChooseDialog[3], PlayerGroupAll(), false);
    DialogSetVisible(gv_CharChooseDialog[4], PlayerGroupAll(), false);
    DialogSetVisible(gv_CharChooseDialog[5], PlayerGroupAll(), false);
    DialogSetVisible(gv_CharChooseDialog[6], PlayerGroupAll(), false);
    DialogSetVisible(gv_CharChooseDialog[7], PlayerGroupAll(), false);
    DialogSetVisible(gv_TeamSelectDialog[0], PlayerGroupAll(), false);
    DialogSetVisible(gv_TeamSelectDialog[1], PlayerGroupAll(), false);
    DialogSetVisible(gv_BeforeStartCounterDialog[0], PlayerGroupAll(), false);
    DialogControlFadeTransparency(gv_CharChooseFullDialogImage[1], PlayerGroupAll(), 1.0, 100.0);
    SoundPlay(SoundLink("UI_LeaguePromotion_Gold_Impact", -1), PlayerGroupAll(), 100.0, 0.0);
    Wait(1.5, c_timeReal);
    DialogSetVisible(gv_CharChooseFullDialog, PlayerGroupAll(), false);
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (auto47DE61EC_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto47DE61EC_ae) || (auto47DE61EC_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto47DE61EC_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto47DE61EC_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerStatusActive)) {
            if ((gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 0)) {
                while ((lv_eC84A4ECA095ECBA90EBA6ADEC84A0ED839DEC9984EBA38CEC9DB8EC8B9D > 0)) {
                    lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = RandomInt(1, gv_TotalHeroNum);
                    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == true) && ((gv_Team1CharNum[0] != lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]) && (gv_Team1CharNum[1] != lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]) && (gv_Team1CharNum[2] != lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]) && (gv_Team1CharNum[3] != lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]))) {
                        lv_eC84A4ECA095ECBA90EBA6ADEC84A0ED839DEC9984EBA38CEC9DB8EC8B9D = 0;
                        gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]];
                        gv_Team1CharNum[(lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 - 1)] = gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]];
                    }
                    else {
                        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == true) && ((gv_Team2CharNum[0] != lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]) && (gv_Team2CharNum[1] != lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]) && (gv_Team2CharNum[2] != lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]) && (gv_Team2CharNum[3] != lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]))) {
                            lv_eC84A4ECA095ECBA90EBA6ADEC84A0ED839DEC9984EBA38CEC9DB8EC8B9D = 0;
                            gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = lv_eC84A4ECA095ECBA90EBA6ADEB9E9CEB8DA4EBB288ED98B8ECA084ECB2B4ECBA90EBA6ADED84B0EC8898[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]];
                            gv_Team2CharNum[(lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 - 5)] = gv_SelectedCharNum[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]];
                        }

                    }
                    Wait(0.01, c_timeReal);
                }
            }

        }

        lv_eC84A4ECA095ECBA90EBA6ADEC84A0ED839DEC9984EBA38CEC9DB8EC8B9D = 1;
    }
    TriggerExecute(gt_TrBeforeSpellRandomSelect, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrCharSelectBlind_Init () {
    gt_TrCharSelectBlind = TriggerCreate("gt_TrCharSelectBlind_Func");
    TriggerEnable(gt_TrCharSelectBlind, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ?????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrCharSelectPageNext_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!(((EventDialogControl() == gv_CharChooseDialogNextBtn[0]) || (EventDialogControl() == gv_CharChooseDialogNextBtn[1])))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == gv_CharChooseDialogNextBtn[0])) {
        if ((DialogIsVisible(gv_CharChooseDialog[3], EventPlayer()) == true)) {
            DialogControlSetEnabled(gv_CharChooseDialogNextBtn[0], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseDialogNextBtn[1], PlayerGroupSingle(EventPlayer()), true);
            DialogSetVisible(gv_CharChooseDialog[3], PlayerGroupSingle(EventPlayer()), false);
            DialogSetVisible(gv_CharChooseDialog[0], PlayerGroupSingle(EventPlayer()), true);
            libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[0], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_disabled.dds", PlayerGroupSingle(EventPlayer()));
            libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[1], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
        }
        else {
            if ((DialogIsVisible(gv_CharChooseDialog[5], EventPlayer()) == true)) {
                DialogControlSetEnabled(gv_CharChooseDialogNextBtn[0], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetEnabled(gv_CharChooseDialogNextBtn[1], PlayerGroupSingle(EventPlayer()), true);
                DialogSetVisible(gv_CharChooseDialog[5], PlayerGroupSingle(EventPlayer()), false);
                DialogSetVisible(gv_CharChooseDialog[3], PlayerGroupSingle(EventPlayer()), true);
                libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[0], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[1], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
            }
            else {
                if ((DialogIsVisible(gv_CharChooseDialog[6], EventPlayer()) == true)) {
                    DialogControlSetEnabled(gv_CharChooseDialogNextBtn[0], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetEnabled(gv_CharChooseDialogNextBtn[1], PlayerGroupSingle(EventPlayer()), true);
                    DialogSetVisible(gv_CharChooseDialog[6], PlayerGroupSingle(EventPlayer()), false);
                    DialogSetVisible(gv_CharChooseDialog[5], PlayerGroupSingle(EventPlayer()), true);
                    libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[0], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                    libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[1], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                }
                else {
                    if ((DialogIsVisible(gv_CharChooseDialog[7], EventPlayer()) == true)) {
                        DialogControlSetEnabled(gv_CharChooseDialogNextBtn[0], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_CharChooseDialogNextBtn[1], PlayerGroupSingle(EventPlayer()), true);
                        DialogSetVisible(gv_CharChooseDialog[7], PlayerGroupSingle(EventPlayer()), false);
                        DialogSetVisible(gv_CharChooseDialog[6], PlayerGroupSingle(EventPlayer()), true);
                        libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[0], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                        libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[1], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                    }

                }
            }
        }
    }
    else {
        if ((EventDialogControl() == gv_CharChooseDialogNextBtn[1])) {
            if ((DialogIsVisible(gv_CharChooseDialog[0], EventPlayer()) == true)) {
                DialogControlSetEnabled(gv_CharChooseDialogNextBtn[0], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetEnabled(gv_CharChooseDialogNextBtn[1], PlayerGroupSingle(EventPlayer()), true);
                DialogSetVisible(gv_CharChooseDialog[3], PlayerGroupSingle(EventPlayer()), true);
                DialogSetVisible(gv_CharChooseDialog[0], PlayerGroupSingle(EventPlayer()), false);
                libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[0], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[1], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
            }
            else {
                if ((DialogIsVisible(gv_CharChooseDialog[3], EventPlayer()) == true)) {
                    DialogControlSetEnabled(gv_CharChooseDialogNextBtn[1], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetEnabled(gv_CharChooseDialogNextBtn[0], PlayerGroupSingle(EventPlayer()), true);
                    DialogSetVisible(gv_CharChooseDialog[5], PlayerGroupSingle(EventPlayer()), true);
                    DialogSetVisible(gv_CharChooseDialog[3], PlayerGroupSingle(EventPlayer()), false);
                    libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[0], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                    libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[1], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                }
                else {
                    if ((DialogIsVisible(gv_CharChooseDialog[5], EventPlayer()) == true)) {
                        DialogControlSetEnabled(gv_CharChooseDialogNextBtn[1], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_CharChooseDialogNextBtn[0], PlayerGroupSingle(EventPlayer()), true);
                        DialogSetVisible(gv_CharChooseDialog[6], PlayerGroupSingle(EventPlayer()), true);
                        DialogSetVisible(gv_CharChooseDialog[5], PlayerGroupSingle(EventPlayer()), false);
                        libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[0], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                        libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[1], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                    }
                    else {
                        if ((DialogIsVisible(gv_CharChooseDialog[6], EventPlayer()) == true)) {
                            DialogControlSetEnabled(gv_CharChooseDialogNextBtn[1], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetEnabled(gv_CharChooseDialogNextBtn[0], PlayerGroupSingle(EventPlayer()), true);
                            DialogSetVisible(gv_CharChooseDialog[7], PlayerGroupSingle(EventPlayer()), true);
                            DialogSetVisible(gv_CharChooseDialog[6], PlayerGroupSingle(EventPlayer()), false);
                            libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[0], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_hover.dds", PlayerGroupSingle(EventPlayer()));
                            libNtve_gf_SetDialogItemImage(gv_CharChooseDialogNextImage[1], "Assets\\Textures\\ui_glues_icons_smallpagearrow_left_disabled.dds", PlayerGroupSingle(EventPlayer()));
                        }

                    }
                }
            }
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrCharSelectPageNext_Init () {
    gt_TrCharSelectPageNext = TriggerCreate("gt_TrCharSelectPageNext_Func");
    TriggerAddEventDialogControl(gt_TrCharSelectPageNext, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ??????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrCharSelect_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ECA095EC8898;

    // Automatic Variable Declarations
    const int autoB98F1D8E_ae = 4;
    const int autoB98F1D8E_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_CharSelectedDelay[0] == false)) || ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_CharSelectedDelay[1] == false))))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!(((gv_GameModeVoteValue == false) || ((gv_GameModeVoteValue == true) && (gv_GameModeMyTurn[EventPlayer()] == true))))) {
            return false;
        }

        if (!(((EventDialogControl() == gv_CharChooseWindowBtn[0]) || (EventDialogControl() == gv_CharChooseWindowBtn[1]) || (EventDialogControl() == gv_CharChooseWindowBtn[2]) || (EventDialogControl() == gv_CharChooseWindowBtn[3]) || (EventDialogControl() == gv_CharChooseWindowBtn[4]) || (EventDialogControl() == gv_CharChooseWindowBtn[5]) || (EventDialogControl() == gv_CharChooseWindowBtn[6]) || (EventDialogControl() == gv_CharChooseWindowBtn[7]) || (EventDialogControl() == gv_CharChooseWindowBtn[8]) || (EventDialogControl() == gv_CharChooseWindowBtn[9]) || (EventDialogControl() == gv_CharChooseWindowBtn[10]) || (EventDialogControl() == gv_CharChooseWindowBtn[11]) || (EventDialogControl() == gv_CharChooseWindowBtn[12]) || (EventDialogControl() == gv_CharChooseWindowBtn[13]) || (EventDialogControl() == gv_CharChooseWindowBtn[14]) || (EventDialogControl() == gv_CharChooseWindowBtn[15]) || (EventDialogControl() == gv_CharChooseWindowBtn[16]) || (EventDialogControl() == gv_CharChooseWindowBtn[17]) || (EventDialogControl() == gv_CharChooseWindowBtn[18]) || (EventDialogControl() == gv_CharChooseWindowBtn[19]) || (EventDialogControl() == gv_CharChooseWindowBtn[20]) || (EventDialogControl() == gv_CharChooseWindowBtn[21]) || (EventDialogControl() == gv_CharChooseWindowBtn[22]) || (EventDialogControl() == gv_CharChooseWindowBtn[23]) || (EventDialogControl() == gv_CharChooseWindowBtn[24]) || (EventDialogControl() == gv_CharChooseWindowBtn[25]) || (EventDialogControl() == gv_CharChooseWindowBtn[26]) || (EventDialogControl() == gv_CharChooseWindowBtn[27]) || (EventDialogControl() == gv_CharChooseWindowBtn[28]) || (EventDialogControl() == gv_CharChooseWindowBtn[29]) || (EventDialogControl() == gv_CharChooseWindowBtn[30]) || (EventDialogControl() == gv_CharChooseWindowBtn[31]) || (EventDialogControl() == gv_CharChooseWindowBtn[32]) || (EventDialogControl() == gv_CharChooseWindowBtn[33]) || (EventDialogControl() == gv_CharChooseWindowBtn[34]) || (EventDialogControl() == gv_CharChooseWindowBtn[35]) || (EventDialogControl() == gv_CharChooseWindowBtn[36]) || (EventDialogControl() == gv_CharChooseWindowBtn[37]) || (EventDialogControl() == gv_CharChooseWindowBtn[38]) || (EventDialogControl() == gv_CharChooseWindowBtn[39]) || (EventDialogControl() == gv_CharChooseWindowBtn[40]) || (EventDialogControl() == gv_CharChooseWindowBtn[41]) || (EventDialogControl() == gv_CharChooseWindowBtn[42]) || (EventDialogControl() == gv_CharChooseWindowBtn[43]) || (EventDialogControl() == gv_CharChooseWindowBtn[44]) || (EventDialogControl() == gv_CharChooseWindowBtn[45]) || (EventDialogControl() == gv_CharChooseWindowBtn[46]) || (EventDialogControl() == gv_CharChooseWindowBtn[47]) || (EventDialogControl() == gv_CharChooseWindowBtn[48]) || (EventDialogControl() == gv_CharChooseWindowBtn[49]) || (EventDialogControl() == gv_CharChooseWindowBtn[50]) || (EventDialogControl() == gv_CharChooseWindowBtn[51]) || (EventDialogControl() == gv_CharChooseWindowBtn[52]) || (EventDialogControl() == gv_CharChooseWindowBtn[53]) || (EventDialogControl() == gv_CharChooseWindowBtn[54]) || (EventDialogControl() == gv_CharChooseWindowBtn[55]) || (EventDialogControl() == gv_CharChooseWindowBtn[56]) || (EventDialogControl() == gv_CharChooseWindowBtn[57]) || (EventDialogControl() == gv_CharChooseWindowBtn[58]) || (EventDialogControl() == gv_CharChooseWindowBtn[59]) || (EventDialogControl() == gv_CharChooseWindowBtn[60]) || (EventDialogControl() == gv_CharChooseWindowBtn[61]) || (EventDialogControl() == gv_CharChooseWindowBtn[62]) || (EventDialogControl() == gv_CharChooseWindowBtn[63]) || (EventDialogControl() == gv_CharChooseWindowBtn[64]) || (EventDialogControl() == gv_CharChooseWindowBtn[65]) || (EventDialogControl() == gv_CharChooseWindowBtn[66]) || (EventDialogControl() == gv_CharChooseWindowBtn[67]) || (EventDialogControl() == gv_CharChooseWindowBtn[68]) || (EventDialogControl() == gv_CharChooseWindowBtn[69]) || (EventDialogControl() == gv_CharChooseWindowBtn[70]) || (EventDialogControl() == gv_CharChooseWindowBtn[71]) || (EventDialogControl() == gv_CharChooseWindowBtn[72])))) {
            return false;
        }

        if (!((gv_ReadyClickBoolean[EventPlayer()] == false))) {
            return false;
        }

        if (!((gv_ReadyRandomBoolean[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_CharSelectedDelay[0] == false)) {
        gv_CharSelectedDelay[0] = true;
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_CharSelectedDelay[1] == false)) {
            gv_CharSelectedDelay[1] = true;
        }

    }
    if ((((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_CharSelectedDelay[0] == true)) || ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_CharSelectedDelay[1] == true)))) {
        gf_HrHeroSelect1();
        gf_HrHeroTeamSelectSave();
        gf_HrHeroTeamSelectSave2();
        if ((gv_GameModeVoteValue == true)) {
            libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedImage[EventPlayer()], PlayerGroupAll());
            libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedName[EventPlayer()], PlayerGroupAll());
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
                libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedImage[EventPlayer()], GameAttributePlayersForTeam(1));
                libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedName[EventPlayer()], GameAttributePlayersForTeam(1));
            }
            else {
                if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
                    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedImage[EventPlayer()], GameAttributePlayersForTeam(2));
                    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedName[EventPlayer()], GameAttributePlayersForTeam(2));
                }

            }
        }
        libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedImage[EventPlayer()], GameAttributePlayersForTeam(3));
        libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedName[EventPlayer()], GameAttributePlayersForTeam(3));
    }

    if ((gv_CharRandomBoolean[EventPlayer()] == true)) {
        gv_CharRandomBoolean[EventPlayer()] = false;
        lv_eC84A4ECA095ECA095EC8898 = 0;
        for ( ; ( (autoB98F1D8E_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= autoB98F1D8E_ae) || (autoB98F1D8E_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= autoB98F1D8E_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += autoB98F1D8E_ai ) {
            DialogControlSetEnabled(gv_CharChooseWindowRandomBtn[lv_eC84A4ECA095ECA095EC8898], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetEnabled(gv_CharChooseWindowRandomImage[lv_eC84A4ECA095ECA095EC8898], PlayerGroupSingle(EventPlayer()), true);
        }
    }

    Wait(0.2, c_timeReal);
    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_CharSelectedDelay[0] == true)) {
        gv_CharSelectedDelay[0] = false;
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_CharSelectedDelay[1] == true)) {
            gv_CharSelectedDelay[1] = false;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrCharSelect_Init () {
    gt_TrCharSelect = TriggerCreate("gt_TrCharSelect_Func");
    TriggerAddEventDialogControl(gt_TrCharSelect, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrCharSelectRandom_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ECA095EC8898;

    // Automatic Variable Declarations
    const int auto7563DA08_ae = 4;
    const int auto7563DA08_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_CharSelectedDelay[0] == false)) || ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_CharSelectedDelay[1] == false))))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!(((EventDialogControl() == gv_CharChooseWindowRandomBtn[0]) || (EventDialogControl() == gv_CharChooseWindowRandomBtn[1]) || (EventDialogControl() == gv_CharChooseWindowRandomBtn[2]) || (EventDialogControl() == gv_CharChooseWindowRandomBtn[3]) || (EventDialogControl() == gv_CharChooseWindowRandomBtn[4])))) {
            return false;
        }

        if (!((gv_ReadyClickBoolean[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_CharSelectedDelay[0] == false)) {
        gv_CharSelectedDelay[0] = true;
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_CharSelectedDelay[1] == false)) {
            gv_CharSelectedDelay[1] = true;
        }

    }
    if ((((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_CharSelectedDelay[0] == true)) || ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_CharSelectedDelay[1] == true)))) {
        gv_CharSelectedImage[EventPlayer()] = "Assets\\Textures\\btn-tips-tutorial.dds";
        gv_CharSelectedName[EventPlayer()] = StringExternal("Param/Value/3FAF9C55");
        gv_SelectedCharNum[EventPlayer()] = 0;
        gv_CharRandomBoolean[EventPlayer()] = true;
        if ((gv_GameModeVoteValue == true)) {
            libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedImage[EventPlayer()], PlayerGroupAll());
            libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedName[EventPlayer()], PlayerGroupAll());
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
                libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedImage[EventPlayer()], GameAttributePlayersForTeam(1));
                libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedName[EventPlayer()], GameAttributePlayersForTeam(1));
            }
            else {
                if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
                    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedImage[EventPlayer()], GameAttributePlayersForTeam(2));
                    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedName[EventPlayer()], GameAttributePlayersForTeam(2));
                }

            }
        }
        libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedImage[EventPlayer()], GameAttributePlayersForTeam(3));
        libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedName[EventPlayer()], GameAttributePlayersForTeam(3));
        gf_HrHeroTeamSelectSave2();
        lv_eC84A4ECA095ECA095EC8898 = 0;
        for ( ; ( (auto7563DA08_ai >= 0 && lv_eC84A4ECA095ECA095EC8898 <= auto7563DA08_ae) || (auto7563DA08_ai < 0 && lv_eC84A4ECA095ECA095EC8898 >= auto7563DA08_ae) ) ; lv_eC84A4ECA095ECA095EC8898 += auto7563DA08_ai ) {
            DialogControlSetEnabled(gv_CharChooseWindowRandomBtn[lv_eC84A4ECA095ECA095EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetEnabled(gv_CharChooseWindowRandomImage[lv_eC84A4ECA095ECA095EC8898], PlayerGroupSingle(EventPlayer()), false);
        }
    }

    Wait(0.1, c_timeReal);
    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_CharSelectedDelay[0] == true)) {
        gv_CharSelectedDelay[0] = false;
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_CharSelectedDelay[1] == true)) {
            gv_CharSelectedDelay[1] = false;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrCharSelectRandom_Init () {
    gt_TrCharSelectRandom = TriggerCreate("gt_TrCharSelectRandom_Func");
    TriggerAddEventDialogControl(gt_TrCharSelectRandom, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ????????? ????????????
//--------------------------------------------------------------------------------------------------
bool gt_TrDraftSelectRandomRefreash1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if (((gv_SelectedCharNum[EventPlayer()] >= 1) && (gv_SelectedCharNum[EventPlayer()] <= 20))) {
        gf_HrDraftSelectRandomRefreash1();
    }
    else {
        if (((gv_SelectedCharNum[EventPlayer()] >= 21) && (gv_SelectedCharNum[EventPlayer()] <= 40))) {
            gf_HrDraftSelectRandomRefreash2();
        }
        else {
            if (((gv_SelectedCharNum[EventPlayer()] >= 41) && (gv_SelectedCharNum[EventPlayer()] <= 60))) {
                gf_HrDraftSelectRandomRefreash3();
            }
            else {
                if (((gv_SelectedCharNum[EventPlayer()] >= 61) && (gv_SelectedCharNum[EventPlayer()] <= 80))) {
                    gf_HrDraftSelectRandomRefreash4();
                }

            }
        }
    }
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedImage[EventPlayer()], PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], gv_CharSelectedName[EventPlayer()], PlayerGroupAll());
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogPlayerName[EventPlayer()], (StringExternal("Param/Value/C3A850BB") + PlayerName(EventPlayer()) + StringExternal("Param/Value/08307541")), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrDraftSelectRandomRefreash1_Init () {
    gt_TrDraftSelectRandomRefreash1 = TriggerCreate("gt_TrDraftSelectRandomRefreash1_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrDraftSelectRandomRefreash1, c_playerAny, "HeroOkGi2242");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(1)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwap1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[1];

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerType(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerStatusActive))) {
            return false;
        }

        if (!((EventPlayer() != lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[0]))) {
            return false;
        }

        if (!((gv_TeamSelectHeroNothing[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_TeamSelectHeroNothing[0] = true;
    gv_TeamSelectChangeNum[0] = EventPlayer();
    DialogControlSetEnabled(gv_TeamSelectBtn[0], PlayerGroupAll(), false);
    DialogControlSetVisible(gv_TeamSelectBtn[1], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[2], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[3], PlayerGroupSingle(EventPlayer()), false);
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogImage[10], gv_CharSelectedImage[EventPlayer()], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogImage[10], (StringExternal("Param/Value/8F7AE779") + gv_CharSelectedName[EventPlayer()] + StringExternal("Param/Value/2B3CBFE2")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogLabel[2], (StringExternal("Param/Value/B0F3A731") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/88823CDE")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    DialogControlSetVisible(gv_TeamSelectDialogImage[8], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[9], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[10], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[2], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[8], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[9], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetPositionRelative(gv_TeamSelectDialogImage[8], PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4], c_anchorLeft, -75, 10);
    SoundPlay(SoundLink("UI_Bnet_PopUpPartyLeave", -1), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwap1_Init () {
    gt_TrTeamSelectDialogHeroSwap1 = TriggerCreate("gt_TrTeamSelectDialogHeroSwap1_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwap1, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(2)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwap2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[2];

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerType(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerStatusActive))) {
            return false;
        }

        if (!((EventPlayer() != lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[1]))) {
            return false;
        }

        if (!((gv_TeamSelectHeroNothing[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_TeamSelectHeroNothing[1] = true;
    gv_TeamSelectChangeNum[1] = EventPlayer();
    DialogControlSetEnabled(gv_TeamSelectBtn[1], PlayerGroupAll(), false);
    DialogControlSetVisible(gv_TeamSelectBtn[0], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[2], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[3], PlayerGroupSingle(EventPlayer()), false);
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogImage[10], gv_CharSelectedImage[EventPlayer()], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogImage[10], (StringExternal("Param/Value/997C505C") + gv_CharSelectedName[EventPlayer()] + StringExternal("Param/Value/4AFD709C")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogLabel[2], (StringExternal("Param/Value/E8DF820D") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/8A1CDD16")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    DialogControlSetVisible(gv_TeamSelectDialogImage[8], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[9], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[10], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[2], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[8], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[9], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetPositionRelative(gv_TeamSelectDialogImage[8], PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4], c_anchorLeft, -75, 10);
    SoundPlay(SoundLink("UI_Bnet_PopUpPartyLeave", -1), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwap2_Init () {
    gt_TrTeamSelectDialogHeroSwap2 = TriggerCreate("gt_TrTeamSelectDialogHeroSwap2_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwap2, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(3)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwap3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[3];

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerType(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerStatusActive))) {
            return false;
        }

        if (!((EventPlayer() != lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[2]))) {
            return false;
        }

        if (!((gv_TeamSelectHeroNothing[2] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_TeamSelectHeroNothing[2] = true;
    gv_TeamSelectChangeNum[2] = EventPlayer();
    DialogControlSetEnabled(gv_TeamSelectBtn[2], PlayerGroupAll(), false);
    DialogControlSetVisible(gv_TeamSelectBtn[0], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[1], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[3], PlayerGroupSingle(EventPlayer()), false);
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogImage[10], gv_CharSelectedImage[EventPlayer()], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogImage[10], (StringExternal("Param/Value/41304877") + gv_CharSelectedName[EventPlayer()] + StringExternal("Param/Value/176EC555")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogLabel[2], (StringExternal("Param/Value/76B8C45C") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/C658B722")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    DialogControlSetVisible(gv_TeamSelectDialogImage[8], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[9], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[10], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[2], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[8], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[9], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetPositionRelative(gv_TeamSelectDialogImage[8], PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4], c_anchorLeft, -75, 10);
    SoundPlay(SoundLink("UI_Bnet_PopUpPartyLeave", -1), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwap3_Init () {
    gt_TrTeamSelectDialogHeroSwap3 = TriggerCreate("gt_TrTeamSelectDialogHeroSwap3_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwap3, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(4)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwap4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[4];

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerType(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerStatusActive))) {
            return false;
        }

        if (!((EventPlayer() != lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[3]))) {
            return false;
        }

        if (!((gv_TeamSelectHeroNothing[3] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_TeamSelectHeroNothing[3] = true;
    gv_TeamSelectChangeNum[3] = EventPlayer();
    DialogControlSetEnabled(gv_TeamSelectBtn[3], PlayerGroupAll(), false);
    DialogControlSetVisible(gv_TeamSelectBtn[0], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[1], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[2], PlayerGroupSingle(EventPlayer()), false);
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogImage[10], gv_CharSelectedImage[EventPlayer()], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogImage[10], (StringExternal("Param/Value/F014D60A") + gv_CharSelectedName[EventPlayer()] + StringExternal("Param/Value/2E687D1E")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogLabel[2], (StringExternal("Param/Value/1FC70B59") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/84CD97EF")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    DialogControlSetVisible(gv_TeamSelectDialogImage[8], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[9], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[10], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[2], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[8], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[9], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetPositionRelative(gv_TeamSelectDialogImage[8], PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4], c_anchorLeft, -75, 10);
    SoundPlay(SoundLink("UI_Bnet_PopUpPartyLeave", -1), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwap4_Init () {
    gt_TrTeamSelectDialogHeroSwap4 = TriggerCreate("gt_TrTeamSelectDialogHeroSwap4_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwap4, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(5)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwap5_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[5];

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerType(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerStatusActive))) {
            return false;
        }

        if (!((EventPlayer() != lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[4]))) {
            return false;
        }

        if (!((gv_TeamSelectHeroNothing[4] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_TeamSelectHeroNothing[4] = true;
    gv_TeamSelectChangeNum[4] = EventPlayer();
    DialogControlSetEnabled(gv_TeamSelectBtn[4], PlayerGroupAll(), false);
    DialogControlSetVisible(gv_TeamSelectBtn[5], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[6], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[7], PlayerGroupSingle(EventPlayer()), false);
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogImage[13], gv_CharSelectedImage[EventPlayer()], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogImage[13], (StringExternal("Param/Value/1D14E3A5") + gv_CharSelectedName[EventPlayer()] + StringExternal("Param/Value/A81A6602")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogLabel[3], (StringExternal("Param/Value/C2158CB7") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/5425FB30")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    DialogControlSetVisible(gv_TeamSelectDialogImage[11], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[12], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[13], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[3], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[10], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[11], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetPositionRelative(gv_TeamSelectDialogImage[11], PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4], c_anchorLeft, -75, 10);
    SoundPlay(SoundLink("UI_Bnet_PopUpPartyLeave", -1), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwap5_Init () {
    gt_TrTeamSelectDialogHeroSwap5 = TriggerCreate("gt_TrTeamSelectDialogHeroSwap5_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwap5, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(6)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwap6_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[6];

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerType(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerStatusActive))) {
            return false;
        }

        if (!((EventPlayer() != lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[5]))) {
            return false;
        }

        if (!((gv_TeamSelectHeroNothing[5] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_TeamSelectHeroNothing[5] = true;
    gv_TeamSelectChangeNum[5] = EventPlayer();
    DialogControlSetEnabled(gv_TeamSelectBtn[5], PlayerGroupAll(), false);
    DialogControlSetVisible(gv_TeamSelectBtn[4], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[6], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[7], PlayerGroupSingle(EventPlayer()), false);
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogImage[13], gv_CharSelectedImage[EventPlayer()], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogImage[13], (StringExternal("Param/Value/A86DBDDC") + gv_CharSelectedName[EventPlayer()] + StringExternal("Param/Value/11687509")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogLabel[3], (StringExternal("Param/Value/F9A401B3") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/507FE0BE")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    DialogControlSetVisible(gv_TeamSelectDialogImage[11], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[12], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[13], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[3], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[10], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[11], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetPositionRelative(gv_TeamSelectDialogImage[11], PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4], c_anchorLeft, -75, 10);
    SoundPlay(SoundLink("UI_Bnet_PopUpPartyLeave", -1), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwap6_Init () {
    gt_TrTeamSelectDialogHeroSwap6 = TriggerCreate("gt_TrTeamSelectDialogHeroSwap6_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwap6, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(7)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwap7_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[7];

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerType(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerStatusActive))) {
            return false;
        }

        if (!((EventPlayer() != lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[6]))) {
            return false;
        }

        if (!((gv_TeamSelectHeroNothing[6] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_TeamSelectHeroNothing[6] = true;
    gv_TeamSelectChangeNum[6] = EventPlayer();
    DialogControlSetEnabled(gv_TeamSelectBtn[6], PlayerGroupAll(), false);
    DialogControlSetVisible(gv_TeamSelectBtn[4], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[5], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[7], PlayerGroupSingle(EventPlayer()), false);
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogImage[13], gv_CharSelectedImage[EventPlayer()], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogImage[13], (StringExternal("Param/Value/D3679C4E") + gv_CharSelectedName[EventPlayer()] + StringExternal("Param/Value/860864D1")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogLabel[3], (StringExternal("Param/Value/529AA1B5") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/89BEDC42")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    DialogControlSetVisible(gv_TeamSelectDialogImage[11], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[12], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[13], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[3], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[10], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[11], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetPositionRelative(gv_TeamSelectDialogImage[11], PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4], c_anchorLeft, -75, 10);
    SoundPlay(SoundLink("UI_Bnet_PopUpPartyLeave", -1), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwap7_Init () {
    gt_TrTeamSelectDialogHeroSwap7 = TriggerCreate("gt_TrTeamSelectDialogHeroSwap7_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwap7, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(8)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwap8_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[8];

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerType(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4) == c_playerStatusActive))) {
            return false;
        }

        if (!((EventPlayer() != lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[7]))) {
            return false;
        }

        if (!((gv_TeamSelectHeroNothing[7] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_TeamSelectHeroNothing[7] = true;
    gv_TeamSelectChangeNum[7] = EventPlayer();
    DialogControlSetEnabled(gv_TeamSelectBtn[7], PlayerGroupAll(), false);
    DialogControlSetVisible(gv_TeamSelectBtn[4], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[5], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[6], PlayerGroupSingle(EventPlayer()), false);
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogImage[13], gv_CharSelectedImage[EventPlayer()], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogImage[13], (StringExternal("Param/Value/89BC0937") + gv_CharSelectedName[EventPlayer()] + StringExternal("Param/Value/CC2B1018")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    libNtve_gf_SetDialogItemText(gv_TeamSelectDialogLabel[3], (StringExternal("Param/Value/D1B3B6BA") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/5D1B1372")), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4));
    DialogControlSetVisible(gv_TeamSelectDialogImage[11], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[12], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogImage[13], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[3], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[10], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetVisible(gv_TeamSelectBtn[11], PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), true);
    DialogControlSetPositionRelative(gv_TeamSelectDialogImage[11], PlayerGroupAll(), c_anchorLeft, gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4], c_anchorLeft, -75, 10);
    SoundPlay(SoundLink("UI_Bnet_PopUpPartyLeave", -1), PlayerGroupSingle(lv_eC84A4ECA095EC9B90ECA090ED948CEBA088EC9DB4EC96B4), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwap8_Init () {
    gt_TrTeamSelectDialogHeroSwap8 = TriggerCreate("gt_TrTeamSelectDialogHeroSwap8_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwap8, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(1???)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwapSuggestOkTeam1_Func (bool testConds, bool runActions) {
    int init_i;

    // Variable Declarations
    text[2] lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5;
    string[2] lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5;
    int[2] lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5;
    int lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    for (init_i = 0; init_i <= 1; init_i += 1) {
        lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[init_i] = "Assets\\InviButton.dds";
    }

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[8]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetEnabled(gv_TeamSelectBtn[8], PlayerGroupSingle(EventPlayer()), false);
    if ((EventPlayer() == gv_PlayerBayul[1])) {
        lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[0];
        gv_TeamSelectHeroNothing[0] = false;
        DialogControlSetEnabled(gv_TeamSelectBtn[0], PlayerGroupAll(), true);
    }
    else {
        if ((EventPlayer() == gv_PlayerBayul[2])) {
            lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[1];
            gv_TeamSelectHeroNothing[1] = false;
            DialogControlSetEnabled(gv_TeamSelectBtn[1], PlayerGroupAll(), true);
        }
        else {
            if ((EventPlayer() == gv_PlayerBayul[3])) {
                lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[2];
                gv_TeamSelectHeroNothing[2] = false;
                DialogControlSetEnabled(gv_TeamSelectBtn[2], PlayerGroupAll(), true);
            }
            else {
                if ((EventPlayer() == gv_PlayerBayul[4])) {
                    lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[3];
                    gv_TeamSelectHeroNothing[3] = false;
                    DialogControlSetEnabled(gv_TeamSelectBtn[3], PlayerGroupAll(), true);
                }

            }
        }
    }
    lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5[0] = gv_SelectedCharNum[EventPlayer()];
    lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[0] = gv_CharSelectedName[EventPlayer()];
    lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[0] = gv_CharSelectedImage[EventPlayer()];
    lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5[1] = gv_SelectedCharNum[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4];
    lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[1] = gv_CharSelectedName[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4];
    lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[1] = gv_CharSelectedImage[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4];
    gv_SelectedCharNum[EventPlayer()] = lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5[1];
    gv_CharSelectedName[EventPlayer()] = lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[1];
    gv_CharSelectedImage[EventPlayer()] = lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[1];
    gv_SelectedCharNum[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4] = lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5[0];
    gv_CharSelectedName[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4] = lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[0];
    gv_CharSelectedImage[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4] = lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[0];
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4], lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[0], PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4], lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[0], PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[1], PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[1], PlayerGroupAll());
    DialogControlSetVisible(gv_TeamSelectDialogImage[8], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogImage[9], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogImage[10], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[2], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[8], PlayerGroupSingle(EventPlayerPropertyChangeInt()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[9], PlayerGroupSingle(EventPlayerPropertyChangeInt()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[8], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[9], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetEnabled(gv_TeamSelectBtn[8], PlayerGroupSingle(EventPlayer()), true);
    Wait(1.0, c_timeReal);
    if ((EventPlayer() != gv_PlayerBayul[1]) && (PlayerStatus(gv_PlayerBayul[1]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[0], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[2]) && (PlayerStatus(gv_PlayerBayul[2]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[1], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[3]) && (PlayerStatus(gv_PlayerBayul[3]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[2], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[4]) && (PlayerStatus(gv_PlayerBayul[4]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[3], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[1]) && (PlayerStatus(gv_PlayerBayul[1]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[0], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[2]) && (PlayerStatus(gv_PlayerBayul[2]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[1], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[3]) && (PlayerStatus(gv_PlayerBayul[3]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[2], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[4]) && (PlayerStatus(gv_PlayerBayul[4]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[3], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwapSuggestOkTeam1_Init () {
    gt_TrTeamSelectDialogHeroSwapSuggestOkTeam1 = TriggerCreate("gt_TrTeamSelectDialogHeroSwapSuggestOkTeam1_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwapSuggestOkTeam1, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(1???)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwapSuggestNoTeam1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[9]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetEnabled(gv_TeamSelectBtn[9], PlayerGroupSingle(EventPlayer()), false);
    if ((EventPlayer() == gv_PlayerBayul[1])) {
        lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[0];
        gv_TeamSelectHeroNothing[0] = false;
        DialogControlSetEnabled(gv_TeamSelectBtn[0], PlayerGroupAll(), true);
    }
    else {
        if ((EventPlayer() == gv_PlayerBayul[2])) {
            lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[1];
            gv_TeamSelectHeroNothing[1] = false;
            DialogControlSetEnabled(gv_TeamSelectBtn[1], PlayerGroupAll(), true);
        }
        else {
            if ((EventPlayer() == gv_PlayerBayul[3])) {
                lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[2];
                gv_TeamSelectHeroNothing[2] = false;
                DialogControlSetEnabled(gv_TeamSelectBtn[2], PlayerGroupAll(), true);
            }
            else {
                if ((EventPlayer() == gv_PlayerBayul[4])) {
                    lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[3];
                    gv_TeamSelectHeroNothing[3] = false;
                    DialogControlSetEnabled(gv_TeamSelectBtn[3], PlayerGroupAll(), true);
                }

            }
        }
    }
    DialogControlSetVisible(gv_TeamSelectDialogImage[8], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogImage[9], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogImage[10], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[2], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[8], PlayerGroupSingle(EventPlayerPropertyChangeInt()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[9], PlayerGroupSingle(EventPlayerPropertyChangeInt()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[8], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[9], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetEnabled(gv_TeamSelectBtn[9], PlayerGroupSingle(EventPlayer()), true);
    Wait(1.0, c_timeReal);
    if ((EventPlayer() != gv_PlayerBayul[1]) && (PlayerStatus(gv_PlayerBayul[1]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[0], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[2]) && (PlayerStatus(gv_PlayerBayul[2]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[1], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[3]) && (PlayerStatus(gv_PlayerBayul[3]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[2], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[4]) && (PlayerStatus(gv_PlayerBayul[4]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[3], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[1]) && (PlayerStatus(gv_PlayerBayul[1]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[0], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[2]) && (PlayerStatus(gv_PlayerBayul[2]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[1], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[3]) && (PlayerStatus(gv_PlayerBayul[3]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[2], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[4]) && (PlayerStatus(gv_PlayerBayul[4]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[3], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwapSuggestNoTeam1_Init () {
    gt_TrTeamSelectDialogHeroSwapSuggestNoTeam1 = TriggerCreate("gt_TrTeamSelectDialogHeroSwapSuggestNoTeam1_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwapSuggestNoTeam1, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(2???)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwapSuggestOkTeam2_Func (bool testConds, bool runActions) {
    int init_i;

    // Variable Declarations
    text[2] lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5;
    string[2] lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5;
    int[2] lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5;
    int lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization
    for (init_i = 0; init_i <= 1; init_i += 1) {
        lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[init_i] = "Assets\\InviButton.dds";
    }

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[10]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetEnabled(gv_TeamSelectBtn[10], PlayerGroupSingle(EventPlayer()), false);
    if ((EventPlayer() == gv_PlayerBayul[5])) {
        lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[4];
        gv_TeamSelectHeroNothing[4] = false;
        DialogControlSetEnabled(gv_TeamSelectBtn[4], PlayerGroupAll(), true);
    }
    else {
        if ((EventPlayer() == gv_PlayerBayul[6])) {
            lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[5];
            gv_TeamSelectHeroNothing[5] = false;
            DialogControlSetEnabled(gv_TeamSelectBtn[5], PlayerGroupAll(), true);
        }
        else {
            if ((EventPlayer() == gv_PlayerBayul[7])) {
                lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[6];
                gv_TeamSelectHeroNothing[6] = false;
                DialogControlSetEnabled(gv_TeamSelectBtn[6], PlayerGroupAll(), true);
            }
            else {
                if ((EventPlayer() == gv_PlayerBayul[8])) {
                    lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[7];
                    gv_TeamSelectHeroNothing[7] = false;
                    DialogControlSetEnabled(gv_TeamSelectBtn[7], PlayerGroupAll(), true);
                }

            }
        }
    }
    lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5[0] = gv_SelectedCharNum[EventPlayer()];
    lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[0] = gv_CharSelectedName[EventPlayer()];
    lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[0] = gv_CharSelectedImage[EventPlayer()];
    lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5[1] = gv_SelectedCharNum[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4];
    lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[1] = gv_CharSelectedName[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4];
    lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[1] = gv_CharSelectedImage[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4];
    gv_SelectedCharNum[EventPlayer()] = lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5[1];
    gv_CharSelectedName[EventPlayer()] = lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[1];
    gv_CharSelectedImage[EventPlayer()] = lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[1];
    gv_SelectedCharNum[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4] = lv_eC84A4ECA095EC9881EC9B85EBB288ED98B8EC9E84EC8B9CECA080EC9EA5[0];
    gv_CharSelectedName[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4] = lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[0];
    gv_CharSelectedImage[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4] = lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[0];
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4], lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[0], PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4], lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[0], PlayerGroupAll());
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], lv_eC84A4ECA095EC9881EC9B85EC9DB4EBAFB8ECA780EC9E84EC8B9CECA080EC9EA5[1], PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], lv_eC84A4ECA095EC9881EC9B85EC9DB4EBA684EC9E84EC8B9CECA080EC9EA5[1], PlayerGroupAll());
    DialogControlSetVisible(gv_TeamSelectDialogImage[11], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogImage[12], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogImage[13], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[3], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[10], PlayerGroupSingle(EventPlayerPropertyChangeInt()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[11], PlayerGroupSingle(EventPlayerPropertyChangeInt()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[10], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[11], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetEnabled(gv_TeamSelectBtn[10], PlayerGroupSingle(EventPlayer()), true);
    Wait(1.0, c_timeReal);
    if ((EventPlayer() != gv_PlayerBayul[5]) && (PlayerStatus(gv_PlayerBayul[5]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[4], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[6]) && (PlayerStatus(gv_PlayerBayul[6]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[5], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[7]) && (PlayerStatus(gv_PlayerBayul[7]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[6], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[8]) && (PlayerStatus(gv_PlayerBayul[8]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[7], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[5]) && (PlayerStatus(gv_PlayerBayul[5]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[4], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[6]) && (PlayerStatus(gv_PlayerBayul[6]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[5], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[7]) && (PlayerStatus(gv_PlayerBayul[7]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[6], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[8]) && (PlayerStatus(gv_PlayerBayul[8]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[7], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwapSuggestOkTeam2_Init () {
    gt_TrTeamSelectDialogHeroSwapSuggestOkTeam2 = TriggerCreate("gt_TrTeamSelectDialogHeroSwapSuggestOkTeam2_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwapSuggestOkTeam2, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??? ?????? ????????? ?????? ?????? ??????(2???)
//--------------------------------------------------------------------------------------------------
bool gt_TrTeamSelectDialogHeroSwapSuggestNoTeam2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((EventDialogControl() == gv_TeamSelectBtn[11]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetEnabled(gv_TeamSelectBtn[11], PlayerGroupSingle(EventPlayer()), false);
    if ((EventPlayer() == gv_PlayerBayul[5])) {
        lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[4];
        gv_TeamSelectHeroNothing[4] = false;
        DialogControlSetEnabled(gv_TeamSelectBtn[4], PlayerGroupAll(), true);
    }
    else {
        if ((EventPlayer() == gv_PlayerBayul[6])) {
            lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[5];
            gv_TeamSelectHeroNothing[5] = false;
            DialogControlSetEnabled(gv_TeamSelectBtn[5], PlayerGroupAll(), true);
        }
        else {
            if ((EventPlayer() == gv_PlayerBayul[7])) {
                lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[6];
                gv_TeamSelectHeroNothing[6] = false;
                DialogControlSetEnabled(gv_TeamSelectBtn[6], PlayerGroupAll(), true);
            }
            else {
                if ((EventPlayer() == gv_PlayerBayul[8])) {
                    lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 = gv_TeamSelectChangeNum[7];
                    gv_TeamSelectHeroNothing[7] = false;
                    DialogControlSetEnabled(gv_TeamSelectBtn[7], PlayerGroupAll(), true);
                }

            }
        }
    }
    DialogControlSetVisible(gv_TeamSelectDialogImage[11], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogImage[12], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogImage[13], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectDialogLabel[3], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[10], PlayerGroupSingle(EventPlayerPropertyChangeInt()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[11], PlayerGroupSingle(EventPlayerPropertyChangeInt()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[10], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_TeamSelectBtn[11], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetEnabled(gv_TeamSelectBtn[11], PlayerGroupSingle(EventPlayer()), true);
    Wait(1.0, c_timeReal);
    if ((EventPlayer() != gv_PlayerBayul[5]) && (PlayerStatus(gv_PlayerBayul[5]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[4], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[6]) && (PlayerStatus(gv_PlayerBayul[6]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[5], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[7]) && (PlayerStatus(gv_PlayerBayul[7]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[6], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((EventPlayer() != gv_PlayerBayul[8]) && (PlayerStatus(gv_PlayerBayul[8]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[7], PlayerGroupSingle(EventPlayer()), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[5]) && (PlayerStatus(gv_PlayerBayul[5]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[4], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[6]) && (PlayerStatus(gv_PlayerBayul[6]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[5], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[7]) && (PlayerStatus(gv_PlayerBayul[7]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[6], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    if ((lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4 != gv_PlayerBayul[8]) && (PlayerStatus(gv_PlayerBayul[8]) == c_playerStatusActive)) {
        DialogControlSetVisible(gv_TeamSelectBtn[7], PlayerGroupSingle(lv_eC84A4ECA095EC8381EB8C80ED948CEBA088EC9DB4EC96B4), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTeamSelectDialogHeroSwapSuggestNoTeam2_Init () {
    gt_TrTeamSelectDialogHeroSwapSuggestNoTeam2 = TriggerCreate("gt_TrTeamSelectDialogHeroSwapSuggestNoTeam2_Func");
    TriggerAddEventDialogControl(gt_TrTeamSelectDialogHeroSwapSuggestNoTeam2, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(1)
//--------------------------------------------------------------------------------------------------
bool gt_TrSpellSelect1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((((EventDialogControl() == gv_CharChooseWindowSpellBtn[0]) && (gv_SelectedSpellNum2[EventPlayer()] != 1)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[1]) && (gv_SelectedSpellNum2[EventPlayer()] != 2)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[2]) && (gv_SelectedSpellNum2[EventPlayer()] != 3)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[3]) && (gv_SelectedSpellNum2[EventPlayer()] != 4)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[4]) && (gv_SelectedSpellNum2[EventPlayer()] != 5)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[5]) && (gv_SelectedSpellNum2[EventPlayer()] != 6)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[6]) && (gv_SelectedSpellNum2[EventPlayer()] != 7)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[7]) && (gv_SelectedSpellNum2[EventPlayer()] != 8)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[8]) && (gv_SelectedSpellNum2[EventPlayer()] != 9)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[9]) && (gv_SelectedSpellNum2[EventPlayer()] != 10)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[10]) && (gv_SelectedSpellNum2[EventPlayer()] != 11)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[11]) && (gv_SelectedSpellNum2[EventPlayer()] != 12))))) {
            return false;
        }

        if (!((gv_SpellToggle[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[0])) {
        gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-research-zerg-cellularreactor.dds";
        gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[0], EventPlayer());
        gv_SelectedSpellNum1[EventPlayer()] = 1;
        gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/86AF1DCD");
    }
    else {
        if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[1])) {
            gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-tips-hacking.dds";
            gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[1], EventPlayer());
            gv_SelectedSpellNum1[EventPlayer()] = 2;
            gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/8C41615D");
        }
        else {
            if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[2])) {
                gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-ability-terran-heal-color.dds";
                gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[2], EventPlayer());
                gv_SelectedSpellNum1[EventPlayer()] = 3;
                gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/A22A0F40");
            }
            else {
                if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[3])) {
                    gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-tips-hyperion.dds";
                    gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[3], EventPlayer());
                    gv_SelectedSpellNum1[EventPlayer()] = 4;
                    gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/E3D54A13");
                }
                else {
                    if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[4])) {
                        gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-tips-fallenheroes.dds";
                        gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[4], EventPlayer());
                        gv_SelectedSpellNum1[EventPlayer()] = 5;
                        gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/016587D9");
                    }
                    else {
                        if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[5])) {
                            gv_SelectedSpellImage1[EventPlayer()] = "Assets\\AddIcon\\btn-custom-protoss-rapiddeployment.dds";
                            gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[5], EventPlayer());
                            gv_SelectedSpellNum1[EventPlayer()] = 6;
                            gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/F33C1DD0");
                        }
                        else {
                            if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[6])) {
                                gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-ability-protoss-shieldcapacitor.dds";
                                gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[6], EventPlayer());
                                gv_SelectedSpellNum1[EventPlayer()] = 7;
                                gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/1E210721");
                            }
                            else {
                                if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[7])) {
                                    gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-tips-biosample.dds";
                                    gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[7], EventPlayer());
                                    gv_SelectedSpellNum1[EventPlayer()] = 8;
                                    gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/5AB58A98");
                                }
                                else {
                                    if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[8])) {
                                        gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-tips-challengecounter.dds";
                                        gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[8], EventPlayer());
                                        gv_SelectedSpellNum1[EventPlayer()] = 9;
                                        gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/1C50A531");
                                    }
                                    else {
                                        if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[9])) {
                                            gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-tips-walloffire.dds";
                                            gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[9], EventPlayer());
                                            gv_SelectedSpellNum1[EventPlayer()] = 10;
                                            gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/23379E13");
                                        }
                                        else {
                                            if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[10])) {
                                                gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-tips-defierbones.dds";
                                                gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[10], EventPlayer());
                                                gv_SelectedSpellNum1[EventPlayer()] = 11;
                                                gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/52B81D08");
                                            }
                                            else {
                                                if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[11])) {
                                                    gv_SelectedSpellImage1[EventPlayer()] = "Assets\\Textures\\btn-tips-visitthelab.dds";
                                                    gv_SpellToolTip[EventPlayer()][0] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[11], EventPlayer());
                                                    gv_SelectedSpellNum1[EventPlayer()] = 12;
                                                    gv_SelectedSpellName1[EventPlayer()] = StringExternal("Param/Value/2EA9BFAB");
                                                }

                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    Wait(0.075, c_timeReal);
    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
        libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerSpellImage1[EventPlayer()], gv_SelectedSpellImage1[EventPlayer()], GameAttributePlayersForTeam(1));
        libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerSpellImage1[EventPlayer()], gv_SpellToolTip[EventPlayer()][0], GameAttributePlayersForTeam(1));
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
            libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerSpellImage1[EventPlayer()], gv_SelectedSpellImage1[EventPlayer()], GameAttributePlayersForTeam(2));
            libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerSpellImage1[EventPlayer()], gv_SpellToolTip[EventPlayer()][0], GameAttributePlayersForTeam(2));
        }

    }
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerSpellImage1[EventPlayer()], gv_SelectedSpellImage1[EventPlayer()], GameAttributePlayersForTeam(3));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerSpellImage1[EventPlayer()], gv_SpellToolTip[EventPlayer()][0], GameAttributePlayersForTeam(3));
    gv_SpellToggle[EventPlayer()] = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSpellSelect1_Init () {
    gt_TrSpellSelect1 = TriggerCreate("gt_TrSpellSelect1_Func");
    TriggerAddEventDialogControl(gt_TrSpellSelect1, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(2)
//--------------------------------------------------------------------------------------------------
bool gt_TrSpellSelect2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((((EventDialogControl() == gv_CharChooseWindowSpellBtn[0]) && (gv_SelectedSpellNum1[EventPlayer()] != 1)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[1]) && (gv_SelectedSpellNum1[EventPlayer()] != 2)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[2]) && (gv_SelectedSpellNum1[EventPlayer()] != 3)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[3]) && (gv_SelectedSpellNum1[EventPlayer()] != 4)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[4]) && (gv_SelectedSpellNum1[EventPlayer()] != 5)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[5]) && (gv_SelectedSpellNum1[EventPlayer()] != 6)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[6]) && (gv_SelectedSpellNum1[EventPlayer()] != 7)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[7]) && (gv_SelectedSpellNum1[EventPlayer()] != 8)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[8]) && (gv_SelectedSpellNum1[EventPlayer()] != 9)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[9]) && (gv_SelectedSpellNum1[EventPlayer()] != 10)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[10]) && (gv_SelectedSpellNum1[EventPlayer()] != 11)) || ((EventDialogControl() == gv_CharChooseWindowSpellBtn[11]) && (gv_SelectedSpellNum1[EventPlayer()] != 12))))) {
            return false;
        }

        if (!((gv_SpellToggle[EventPlayer()] == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[0])) {
        gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-research-zerg-cellularreactor.dds";
        gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[0], EventPlayer());
        gv_SelectedSpellNum2[EventPlayer()] = 1;
        gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/A16DEE18");
    }
    else {
        if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[1])) {
            gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-tips-hacking.dds";
            gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[1], EventPlayer());
            gv_SelectedSpellNum2[EventPlayer()] = 2;
            gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/00479CBF");
        }
        else {
            if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[2])) {
                gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-ability-terran-heal-color.dds";
                gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[2], EventPlayer());
                gv_SelectedSpellNum2[EventPlayer()] = 3;
                gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/667A0310");
            }
            else {
                if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[3])) {
                    gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-tips-hyperion.dds";
                    gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[3], EventPlayer());
                    gv_SelectedSpellNum2[EventPlayer()] = 4;
                    gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/991DEE71");
                }
                else {
                    if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[4])) {
                        gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-tips-fallenheroes.dds";
                        gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[4], EventPlayer());
                        gv_SelectedSpellNum2[EventPlayer()] = 5;
                        gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/98053E15");
                    }
                    else {
                        if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[5])) {
                            gv_SelectedSpellImage2[EventPlayer()] = "Assets\\AddIcon\\btn-custom-protoss-rapiddeployment.dds";
                            gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[5], EventPlayer());
                            gv_SelectedSpellNum2[EventPlayer()] = 6;
                            gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/22B04456");
                        }
                        else {
                            if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[6])) {
                                gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-ability-protoss-shieldcapacitor.dds";
                                gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[6], EventPlayer());
                                gv_SelectedSpellNum2[EventPlayer()] = 7;
                                gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/1953A138");
                            }
                            else {
                                if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[7])) {
                                    gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-tips-biosample.dds";
                                    gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[7], EventPlayer());
                                    gv_SelectedSpellNum2[EventPlayer()] = 8;
                                    gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/5494412A");
                                }
                                else {
                                    if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[8])) {
                                        gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-tips-challengecounter.dds";
                                        gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[8], EventPlayer());
                                        gv_SelectedSpellNum2[EventPlayer()] = 9;
                                        gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/E67D0CF7");
                                    }
                                    else {
                                        if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[9])) {
                                            gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-tips-walloffire.dds";
                                            gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[9], EventPlayer());
                                            gv_SelectedSpellNum2[EventPlayer()] = 10;
                                            gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/368F1D30");
                                        }
                                        else {
                                            if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[10])) {
                                                gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-tips-defierbones.dds";
                                                gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[10], EventPlayer());
                                                gv_SelectedSpellNum2[EventPlayer()] = 11;
                                                gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/2DEEBAF2");
                                            }
                                            else {
                                                if ((EventDialogControl() == gv_CharChooseWindowSpellBtn[11])) {
                                                    gv_SelectedSpellImage2[EventPlayer()] = "Assets\\Textures\\btn-tips-visitthelab.dds";
                                                    gv_SpellToolTip[EventPlayer()][1] = libNtve_gf_DialogItemTooltip(gv_CharChooseWindowSpellBtn[11], EventPlayer());
                                                    gv_SelectedSpellNum2[EventPlayer()] = 12;
                                                    gv_SelectedSpellName2[EventPlayer()] = StringExternal("Param/Value/A6003211");
                                                }

                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    Wait(0.075, c_timeReal);
    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
        libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerSpellImage2[EventPlayer()], gv_SelectedSpellImage2[EventPlayer()], GameAttributePlayersForTeam(1));
        libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerSpellImage2[EventPlayer()], gv_SpellToolTip[EventPlayer()][1], GameAttributePlayersForTeam(1));
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
            libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerSpellImage2[EventPlayer()], gv_SelectedSpellImage2[EventPlayer()], GameAttributePlayersForTeam(2));
            libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerSpellImage2[EventPlayer()], gv_SpellToolTip[EventPlayer()][1], GameAttributePlayersForTeam(2));
        }

    }
    libNtve_gf_SetDialogItemImage(gv_TeamSelectDialogPlayerSpellImage2[EventPlayer()], gv_SelectedSpellImage2[EventPlayer()], GameAttributePlayersForTeam(3));
    libNtve_gf_SetDialogItemTooltip(gv_TeamSelectDialogPlayerSpellImage2[EventPlayer()], gv_SpellToolTip[EventPlayer()][1], GameAttributePlayersForTeam(3));
    gv_SpellToggle[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSpellSelect2_Init () {
    gt_TrSpellSelect2 = TriggerCreate("gt_TrSpellSelect2_Func");
    TriggerAddEventDialogControl(gt_TrSpellSelect2, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????(?????? ??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrGameModeSelect_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!(((EventDialogControl() == gv_GameModeBtn[0]) || (EventDialogControl() == gv_GameModeBtn[1])))) {
            return false;
        }

        if (!((gv_StatusWindowAddDelay[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_StatusWindowAddDelay[EventPlayer()] = true;
    DialogControlSetEnabled(gv_GameModeBtn[0], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetEnabled(gv_GameModeBtn[1], PlayerGroupSingle(EventPlayer()), false);
    if ((EventDialogControl() == gv_GameModeBtn[0])) {
        gv_GameModeVoteInt[0] += 1;
        gv_ReadyBoolean -= 1;
        libNtve_gf_SetDialogItemText(gv_GameModeLabel[0], (StringExternal("Param/Value/54434504") + TextWithColor(IntToText(gv_GameModeVoteInt[0]), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/25B9ED84")), PlayerGroupAll());
    }
    else {
        if ((EventDialogControl() == gv_GameModeBtn[1])) {
            gv_GameModeVoteInt[1] += 1;
            gv_ReadyBoolean -= 1;
            libNtve_gf_SetDialogItemText(gv_GameModeLabel[1], (StringExternal("Param/Value/7D9F09B9") + TextWithColor(IntToText(gv_GameModeVoteInt[1]), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/68E29F11")), PlayerGroupAll());
        }

    }
    Wait(0.5, c_timeReal);
    gv_StatusWindowAddDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrGameModeSelect_Init () {
    gt_TrGameModeSelect = TriggerCreate("gt_TrGameModeSelect_Func");
    TriggerAddEventDialogControl(gt_TrGameModeSelect, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????(?????? ??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrReadyOkSelect_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((EventDialogControl() == gv_CharChooseDialogReadyBtn))) {
            return false;
        }

        if (!((gv_ReadyErrorDelay[EventPlayer()] == false))) {
            return false;
        }

        if (!((gv_ReadyClickBoolean[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((((gv_SelectedCharNum[EventPlayer()] > 0) && (gv_SelectedSpellNum1[EventPlayer()] > 0) && (gv_SelectedSpellNum2[EventPlayer()] > 0)) || (gv_CharRandomBoolean[EventPlayer()] == true))) {
        DialogControlSetEnabled(gv_CharChooseDialogReadyBtn, PlayerGroupSingle(EventPlayer()), false);
        libNtve_gf_SetDialogItemText(gv_TeamSelectDialogPlayerName[EventPlayer()], (StringExternal("Param/Value/A276AAB5") + PlayerName(EventPlayer()) + StringExternal("Param/Value/42884527")), PlayerGroupAll());
        gv_ReadyBoolean -= 1;
        if ((gv_CharRandomBoolean[EventPlayer()] == false)) {
            gv_ReadyClickBoolean[EventPlayer()] = true;
        }
        else {
            gv_ReadyRandomBoolean[EventPlayer()] = true;
        }
    }
    else {
        SoundPlay(SoundLink("UI_GenericError", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrReadyOkSelect_Init () {
    gt_TrReadyOkSelect = TriggerCreate("gt_TrReadyOkSelect_Func");
    TriggerAddEventDialogControl(gt_TrReadyOkSelect, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ??? ?????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrBeforeSpellRandomSelect_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;

    // Automatic Variable Declarations
    const int auto04EE0DBA_ae = 8;
    const int auto04EE0DBA_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (auto04EE0DBA_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto04EE0DBA_ae) || (auto04EE0DBA_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto04EE0DBA_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto04EE0DBA_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerStatusActive)) {
            if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 0) && (gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 0)) {
                gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = 10;
                gv_SelectedSpellImage1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = "Assets\\Textures\\btn-tips-walloffire.dds";
                gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = 9;
                gv_SelectedSpellImage2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = "Assets\\Textures\\btn-tips-challengecounter.dds";
            }
            else {
                if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] != 0) && (gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 0)) {
                    if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] != 9)) {
                        gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = 9;
                        gv_SelectedSpellImage2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = "Assets\\Textures\\btn-tips-challengecounter.dds";
                    }
                    else {
                        if ((gv_SelectedSpellNum1[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] == 9)) {
                            gv_SelectedSpellNum2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = 10;
                            gv_SelectedSpellImage2[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]] = "Assets\\Textures\\btn-tips-walloffire.dds";
                        }

                    }
                }

            }
        }

    }
    TriggerExecute(gt_TrPlayersAllCreate, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrBeforeSpellRandomSelect_Init () {
    gt_TrBeforeSpellRandomSelect = TriggerCreate("gt_TrBeforeSpellRandomSelect_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ???????????? ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrPlayersAllCreate_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80;

    // Automatic Variable Declarations
    const int autoEF89B667_ae = 4;
    const int autoEF89B667_ai = 1;
    const int autoC64E302D_ae = 8;
    const int autoC64E302D_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 = 5;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gf_HrCharMake1();
    gf_HrCharMake2();
    gf_HrCharMake3();
    gf_HrCharMake4();
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 = 1;
    for ( ; ( (autoEF89B667_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 <= autoEF89B667_ae) || (autoEF89B667_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 >= autoEF89B667_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 += autoEF89B667_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]) == c_playerStatusActive)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]], 0, gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80], PointFromId(194));
            gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]] = UnitLastCreated();
            CameraPan(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80], PointFromId(194), 0.0, -1, 10, false);
            UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]], "Toherodamage", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]], 1);
            UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]], "SpellDong2423", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]], 2);
            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80], "SpellUp222233322232222", 2);
        }

    }
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 = 5;
    for ( ; ( (autoC64E302D_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 <= autoC64E302D_ae) || (autoC64E302D_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 >= autoC64E302D_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 += autoC64E302D_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]) == c_playerStatusActive)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, gv_PlayerReadyUnit[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]], 0, gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80], PointFromId(195));
            gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]] = UnitLastCreated();
            CameraPan(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80], PointFromId(195), 0.0, -1, 10, false);
            UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]], "Toherodamage", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]], 1);
            UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]], "SpellDong2423", gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]], 2);
            TechTreeUpgradeAddLevel(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80], "SpellUp222233322232222", 2);
        }

    }
    Wait(0.01, c_timeReal);
    gf_HrSpellMake1();
    gf_HrSpellMake2();
    if ((PlayerType(gv_PlayerBayul[1]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[1]) == c_playerStatusActive)) {
        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[1]], "Player1Assist2", gv_PlayerHero[gv_PlayerBayul[1]], 1);
        TechTreeUpgradeAddLevel(gv_PlayerBayul[1], "PortalBuy23", 1);
    }

    if ((PlayerType(gv_PlayerBayul[2]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[2]) == c_playerStatusActive)) {
        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[2]], "Player1Assist22", gv_PlayerHero[gv_PlayerBayul[2]], 1);
        TechTreeUpgradeAddLevel(gv_PlayerBayul[2], "PortalBuy232", 1);
    }

    if ((PlayerType(gv_PlayerBayul[3]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[3]) == c_playerStatusActive)) {
        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[3]], "Player1Assist222", gv_PlayerHero[gv_PlayerBayul[3]], 1);
        TechTreeUpgradeAddLevel(gv_PlayerBayul[3], "PortalBuy2322", 1);
    }

    if ((PlayerType(gv_PlayerBayul[4]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[4]) == c_playerStatusActive)) {
        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[4]], "Player1Assist2222", gv_PlayerHero[gv_PlayerBayul[4]], 1);
        TechTreeUpgradeAddLevel(gv_PlayerBayul[4], "PortalBuy23222", 1);
    }

    if ((PlayerType(gv_PlayerBayul[5]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[5]) == c_playerStatusActive)) {
        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[5]], "Player1Assist22222", gv_PlayerHero[gv_PlayerBayul[5]], 1);
        TechTreeUpgradeAddLevel(gv_PlayerBayul[5], "PortalBuy232222", 1);
    }

    if ((PlayerType(gv_PlayerBayul[6]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[6]) == c_playerStatusActive)) {
        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[6]], "Player1Assist222222", gv_PlayerHero[gv_PlayerBayul[6]], 1);
        TechTreeUpgradeAddLevel(gv_PlayerBayul[6], "PortalBuy2322222", 1);
    }

    if ((PlayerType(gv_PlayerBayul[7]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[7]) == c_playerStatusActive)) {
        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[7]], "Player1Assist2222222", gv_PlayerHero[gv_PlayerBayul[7]], 1);
        TechTreeUpgradeAddLevel(gv_PlayerBayul[7], "PortalBuy23222222", 1);
    }

    if ((PlayerType(gv_PlayerBayul[8]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[8]) == c_playerStatusActive)) {
        UnitBehaviorAdd(gv_PlayerHero[gv_PlayerBayul[8]], "Player1Assist22222222", gv_PlayerHero[gv_PlayerBayul[8]], 1);
        TechTreeUpgradeAddLevel(gv_PlayerBayul[8], "PortalBuy232222222", 1);
    }

    Wait(0.01, c_timeReal);
    TriggerEnable(gt_TrGameModeSelect, false);
    TriggerEnable(gt_TrReadyOkSelect, false);
    TriggerEnable(gt_TrCharSelect, false);
    TriggerEnable(gt_TrCharSelectPageNext, false);
    TriggerEnable(gt_TrCharSelectRandom, false);
    TriggerEnable(gt_TrDraftSelectRandomRefreash1, false);
    TriggerEnable(gt_TrSpellSelect1, false);
    TriggerEnable(gt_TrSpellSelect2, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwapSuggestNoTeam1, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwapSuggestNoTeam2, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwapSuggestOkTeam1, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwapSuggestOkTeam2, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwap1, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwap2, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwap3, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwap4, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwap5, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwap6, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwap7, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwap8, false);
    TriggerEnable(gt_TrTeamSelectDialogHeroSwap8, false);
    TriggerExecute(gt_TrRankDialogView, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrPlayersAllCreate_Init () {
    gt_TrPlayersAllCreate = TriggerCreate("gt_TrPlayersAllCreate_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrRankDialogView_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;

    // Automatic Variable Declarations
    const int auto589485A8_ae = 8;
    const int auto589485A8_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADEC9E91EB8F99, true);
    TriggerEnable(gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880EBB284ED8ABC, true);
    TriggerEnable(gt_EC8AA4ED8E98EC9DB4EC8AA4EBB094EC9881EC9B85EC8B9CECA090, true);
    gf_HrScoreDialogMake();
    gf_HrScoreDialogStatToolTip();
    Wait(1.0, c_timeReal);
    UISetMode(PlayerGroupAll(), c_uiModeConsole, c_transitionDurationImmediate);
    CinematicFade(true, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeMenuBar, true);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, true);
    UISetDragSelectEnabled(PlayerGroupAll(), true);
    DialogSetVisible(gv_BeforeStartCounterWindow, PlayerGroupAll(), true);
    gv_GameStartBoolean = true;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (auto589485A8_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto589485A8_ae) || (auto589485A8_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto589485A8_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto589485A8_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerStatusActive)) {
            CameraLockInput(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], false);
            UnitControlGroupAddUnit(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], 1, gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]]);
            UnitSelect(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898], true);
            DialogSetVisible(gv_SkillLearnWindow, PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]), true);
        }

    }
    DialogSetVisible(gv_ScoreDialog[0], PlayerGroupAll(), false);
    DialogSetVisible(gv_ScoreDialog[1], PlayerGroupAll(), true);
    DialogSetVisible(gv_ScoreDialog[2], PlayerGroupAll(), true);
    DialogSetVisible(gv_StatusWindow, PlayerGroupAll(), true);
    DialogSetVisible(gv_StatusWindow2, PlayerGroupAll(), true);
    DialogSetVisible(gv_HeroFixedBtnWindow, PlayerGroupAll(), true);
    gf_HrAssistSystemAdd3();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/AD868381"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/7B165D99"), StringExternal("Param/Value/4F1F220A"), "Assets\\AddIcon\\btn-achievement-00-beta.dds");
    UISetGameMenuItemText(PlayerGroupAll(), c_gameMenuDialogGenericButton2, StringExternal("Param/Value/46682880"));
    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogGenericButton2, true);
    TriggerExecute(gt_TrGameStartCounter, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrRankDialogView_Init () {
    gt_TrRankDialogView = TriggerCreate("gt_TrRankDialogView_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ?????? ?????????
//--------------------------------------------------------------------------------------------------
bool gt_TrGameStartCounter_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;

    // Automatic Variable Declarations
    const int autoC99EEBBC_ae = 8;
    const int autoC99EEBBC_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    while ((gv_BeforeStartCounterWindowVar > 0)) {
        libNtve_gf_SetDialogItemText(gv_BeforeStartCounterWindowNum, (StringExternal("Param/Value/D44BC962") + IntToText(gv_BeforeStartCounterWindowVar) + StringExternal("Param/Value/6FE0D5C4")), PlayerGroupAll());
        gv_BeforeStartCounterWindowVar -= 1;
        Wait(1.0, c_timeReal);
    }
    libNtve_gf_SetDialogItemText(gv_BeforeStartCounterWindowNum, (StringExternal("Param/Value/C901545A") + IntToText(gv_BeforeStartCounterWindowVar) + StringExternal("Param/Value/AA9DB3E2")), PlayerGroupAll());
    Wait(1.0, c_timeReal);
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
    for ( ; ( (autoC99EEBBC_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= autoC99EEBBC_ae) || (autoC99EEBBC_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= autoC99EEBBC_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += autoC99EEBBC_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerStatusActive)) {
            UnitCreateEffectPoint(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], "gimoneyg", PointFromId(1));
        }

    }
    DialogSetVisible(gv_BeforeStartCounterWindow, PlayerGroupAll(), false);
    DialogDestroy(gv_BeforeStartCounterWindow);
    gv_BeforeStartCounterWindow = c_invalidDialogId;
    gv_BeforeStartCounterWindowNum = c_invalidDialogControlId;
    gv_BeforeStartCounterWindowVar = 0;
    Wait(0.1, c_timeReal);
    SoundPlay(SoundLink("SystemSound34", -1), PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/B12693EF") + TextWithColor(StringExternal("Param/Value/E880ACD8"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/CCA24A39")));
    Wait(0.2, c_timeReal);
    PlayerCreateEffectPoint(11, "MonsterMakeTimerFirstG", PointFromId(1));
    PlayerCreateEffectPoint(11, "MonsterMakeTimerFirstG2", PointFromId(1));
    PlayerCreateEffectPoint(11, "MonsterMakeTimerFirstG22", PointFromId(1));
    PlayerCreateEffectPoint(11, "MonsterMakeTimerFirstG222", PointFromId(1));
    PlayerCreateEffectPoint(11, "MonsterMakeTimerFirstG2222", PointFromId(1));
    PlayerCreateEffectPoint(11, "MonsterMakeTimerD", PointFromId(1));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrGameStartCounter_Init () {
    gt_TrGameStartCounter = TriggerCreate("gt_TrGameStartCounter_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??????????????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_EC8AA4ED8E98EC9DB4EC8AA4EBB094EC9881EC9B85EC8B9CECA090_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraPan(EventPlayer(), UnitGetPosition(gv_PlayerHero[EventPlayer()]), 0.0, -1, 10.0, false);
    if ((gv_HeroDeathBoolean[EventPlayer()] == false)) {
        UnitClearSelection(EventPlayer());
        UnitSelect(gv_PlayerHero[EventPlayer()], EventPlayer(), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EC8AA4ED8E98EC9DB4EC8AA4EBB094EC9881EC9B85EC8B9CECA090_Init () {
    gt_EC8AA4ED8E98EC9DB4EC8AA4EBB094EC9881EC9B85EC8B9CECA090 = TriggerCreate("gt_EC8AA4ED8E98EC9DB4EC8AA4EBB094EC9881EC9B85EC8B9CECA090_Func");
    TriggerEnable(gt_EC8AA4ED8E98EC9DB4EC8AA4EBB094EC9881EC9B85EC8B9CECA090, false);
    TriggerAddEventKeyPressed(gt_EC8AA4ED8E98EC9DB4EC8AA4EBB094EC9881EC9B85EC8B9CECA090, c_playerAny, c_keySpace, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880[EventPlayer()] == 0)) {
        gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880[EventPlayer()] = 1;
        if ((gv_GameStartBoolean == true) && (gv_HeroDeathBoolean[EventPlayer()] == false)) {
            CameraPan(EventPlayer(), UnitGetPosition(gv_PlayerHero[EventPlayer()]), 0.0, -1, 10.0, false);
            UnitClearSelection(EventPlayer());
            UnitSelect(gv_PlayerHero[EventPlayer()], EventPlayer(), true);
        }

        UIClearMessages(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/1D454413"));
    }
    else {
        if ((gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880[EventPlayer()] == 1)) {
            gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880[EventPlayer()] = 0;
            UIClearMessages(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/0CDF17E9"));
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880_Init () {
    gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880 = TriggerCreate("gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880_Func");
    TriggerEnable(gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880, false);
    TriggerAddEventKeyPressed(gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880, c_playerAny, c_keyF5, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ?????? ??????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880EBB284ED8ABC_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((EventDialogControl() == gv_HeroFixedBtnWindowBtn[0]))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880[EventPlayer()] == 0)) {
        gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880[EventPlayer()] = 1;
        if ((gv_GameStartBoolean == true) && (gv_HeroDeathBoolean[EventPlayer()] == false)) {
            CameraPan(EventPlayer(), UnitGetPosition(gv_PlayerHero[EventPlayer()]), 0.0, -1, 10.0, false);
            UnitClearSelection(EventPlayer());
            UnitSelect(gv_PlayerHero[EventPlayer()], EventPlayer(), true);
        }

        UIClearMessages(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle);
        UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/C5D49D43"));
    }
    else {
        if ((gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880[EventPlayer()] == 1)) {
            gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880[EventPlayer()] = 0;
            UIClearMessages(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaSubtitle, StringExternal("Param/Value/97F72AA9"));
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880EBB284ED8ABC_Init () {
    gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880EBB284ED8ABC = TriggerCreate("gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880EBB284ED8ABC_Func");
    TriggerEnable(gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880EBB284ED8ABC, false);
    TriggerAddEventDialogControl(gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880EBB284ED8ABC, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADEC9E91EB8F99_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventUnit() == gv_PlayerHero[EventPlayer()]))) {
            return false;
        }

        if (!((gv_eC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880[EventPlayer()] == 1))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitClearSelection(EventPlayer());
    UnitSelect(gv_PlayerHero[EventPlayer()], EventPlayer(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADEC9E91EB8F99_Init () {
    gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADEC9E91EB8F99 = TriggerCreate("gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADEC9E91EB8F99_Func");
    TriggerEnable(gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADEC9E91EB8F99, false);
    TriggerAddEventUnitSelected(gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADEC9E91EB8F99, null, c_playerAny, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHelpText_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDebug, (StringExternal("Param/Value/89E47C85") + TextWithColor(StringExternal("Param/Value/FB3E00B0"), Color(100.00, 100.00, 50.20)) + StringExternal("Param/Value/CC7276AB")));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHelpText_Init () {
    gt_TrHelpText = TriggerCreate("gt_TrHelpText_Func");
    TriggerAddEventChatMessage(gt_TrHelpText, c_playerAny, "-help", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ??????????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrViewHandler_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int auto22FE6F65_ae = 8;
    const int auto22FE6F65_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (auto22FE6F65_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= auto22FE6F65_ae) || (auto22FE6F65_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= auto22FE6F65_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += auto22FE6F65_ai ) {
        if ((gv_PlayerHandlerNumber[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] != "")) {
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaDebug, (StringExternal("Param/Value/3F77CCA3") + TextWithColor(PlayerName(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], false))) + StringExternal("Param/Value/044239AC") + StringToText(gv_PlayerHandlerNumber[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]]) + StringExternal("Param/Value/76CFE4EE")));
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrViewHandler_Init () {
    gt_TrViewHandler = TriggerCreate("gt_TrViewHandler_Func");
    TriggerAddEventChatMessage(gt_TrViewHandler, c_playerAny, "-player", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ??? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSingleCheetMoney_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerGroupCount(gv_AllPlayerGroup) == 1))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(EventPlayer(), c_playerPropMinerals, c_playerPropOperAdd, 10000);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 100);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSingleCheetMoney_Init () {
    gt_TrSingleCheetMoney = TriggerCreate("gt_TrSingleCheetMoney_Func");
    TriggerEnable(gt_TrSingleCheetMoney, false);
    TriggerAddEventChatMessage(gt_TrSingleCheetMoney, c_playerAny, "-mm", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSingleCheetLevel_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerGroupCount(gv_AllPlayerGroup) == 1))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((UnitLevel(gv_PlayerHero[EventPlayer()]) < 18))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLevel, (UnitGetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLevel, c_unitPropCurrent) + 1.0));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSingleCheetLevel_Init () {
    gt_TrSingleCheetLevel = TriggerCreate("gt_TrSingleCheetLevel_Func");
    TriggerEnable(gt_TrSingleCheetLevel, false);
    TriggerAddEventChatMessage(gt_TrSingleCheetLevel, c_playerAny, "-lv", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ????????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSingleCheetTestUnit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerGroupCount(gv_AllPlayerGroup) == 1))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, 11, UnitGetPosition(gv_PlayerHero[EventPlayer()]));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSingleCheetTestUnit_Init () {
    gt_TrSingleCheetTestUnit = TriggerCreate("gt_TrSingleCheetTestUnit_Func");
    TriggerEnable(gt_TrSingleCheetTestUnit, false);
    TriggerAddEventChatMessage(gt_TrSingleCheetTestUnit, c_playerAny, "-tu", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSingleCheetDPup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898;
    int lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898;

    // Automatic Variable Declarations
    int auto663B6F6C_n;
    int auto663B6F6C_i;

    // Variable Initialization
    lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898 = "";

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerGroupCount(gv_AllPlayerGroup) == 1))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898 = StringWord(EventChatMessage(false), 2);
    lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898 = StringToInt(lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898);
    if ((lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898 <= 20)) {
        auto663B6F6C_n = lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898;
        for (auto663B6F6C_i = 1; auto663B6F6C_i <= auto663B6F6C_n; auto663B6F6C_i += 1) {
            PlayerCreateEffectPoint(EventPlayer(), "dparmorsr", PointFromId(1));
            Wait(0.01, c_timeReal);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSingleCheetDPup_Init () {
    gt_TrSingleCheetDPup = TriggerCreate("gt_TrSingleCheetDPup_Func");
    TriggerEnable(gt_TrSingleCheetDPup, false);
    TriggerAddEventChatMessage(gt_TrSingleCheetDPup, c_playerAny, "-dpi ", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSingleCheetDPdown_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898;
    int lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898;

    // Automatic Variable Declarations
    int auto07C9C4F2_n;
    int auto07C9C4F2_i;

    // Variable Initialization
    lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898 = "";

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerGroupCount(gv_AllPlayerGroup) == 1))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898 = StringWord(EventChatMessage(false), 2);
    lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898 = StringToInt(lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898);
    if ((lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898 <= 20)) {
        auto07C9C4F2_n = lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898;
        for (auto07C9C4F2_i = 1; auto07C9C4F2_i <= auto07C9C4F2_n; auto07C9C4F2_i += 1) {
            PlayerCreateEffectPoint(EventPlayer(), "dparmorsr2", PointFromId(1));
            Wait(0.01, c_timeReal);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSingleCheetDPdown_Init () {
    gt_TrSingleCheetDPdown = TriggerCreate("gt_TrSingleCheetDPdown_Func");
    TriggerEnable(gt_TrSingleCheetDPdown, false);
    TriggerAddEventChatMessage(gt_TrSingleCheetDPdown, c_playerAny, "-dpd ", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSingleCheetRPup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898;
    int lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898;

    // Automatic Variable Declarations
    int auto3BC73287_n;
    int auto3BC73287_i;

    // Variable Initialization
    lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898 = "";

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerGroupCount(gv_AllPlayerGroup) == 1))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898 = StringWord(EventChatMessage(false), 2);
    lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898 = StringToInt(lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898);
    if ((lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898 <= 20)) {
        auto3BC73287_n = lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898;
        for (auto3BC73287_i = 1; auto3BC73287_i <= auto3BC73287_n; auto3BC73287_i += 1) {
            PlayerCreateEffectPoint(EventPlayer(), "rparmorsr", PointFromId(1));
            Wait(0.01, c_timeReal);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSingleCheetRPup_Init () {
    gt_TrSingleCheetRPup = TriggerCreate("gt_TrSingleCheetRPup_Func");
    TriggerEnable(gt_TrSingleCheetRPup, false);
    TriggerAddEventChatMessage(gt_TrSingleCheetRPup, c_playerAny, "-rpi ", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSingleCheetRPdown_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898;
    int lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898;

    // Automatic Variable Declarations
    int auto848786CF_n;
    int auto848786CF_i;

    // Variable Initialization
    lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898 = "";

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerGroupCount(gv_AllPlayerGroup) == 1))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898 = StringWord(EventChatMessage(false), 2);
    lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898 = StringToInt(lv_eC84A4ECA095EC9E85EBA0A5ED858DEC8AA4ED8AB8EBB380EC8898);
    if ((lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898 <= 20)) {
        auto848786CF_n = lv_eC84A4ECA095EC9E85EBA0A5EC88ABEC9E90EBB380EC8898;
        for (auto848786CF_i = 1; auto848786CF_i <= auto848786CF_n; auto848786CF_i += 1) {
            PlayerCreateEffectPoint(EventPlayer(), "rparmorsr2", PointFromId(1));
            Wait(0.01, c_timeReal);
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSingleCheetRPdown_Init () {
    gt_TrSingleCheetRPdown = TriggerCreate("gt_TrSingleCheetRPdown_Func");
    TriggerEnable(gt_TrSingleCheetRPdown, false);
    TriggerAddEventChatMessage(gt_TrSingleCheetRPdown, c_playerAny, "-rpd ", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??? ??????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_Trgametipbtn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 = 21;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelDisplayPage(PlayerGroupSingle(EventPlayer()), c_helpPanelPageTips);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Trgametipbtn_Init () {
    gt_Trgametipbtn = TriggerCreate("gt_Trgametipbtn_Func");
    TriggerAddEventGameMenuItemSelected(gt_Trgametipbtn, c_playerAny, c_gameMenuDialogGenericButton2);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ?????? ??? ?????? (??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrMinionMake_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;

    // Automatic Variable Declarations
    const int autoF427485B_n = 3;
    int autoF427485B_i;
    const int auto5C95C87E_n = 3;
    int auto5C95C87E_i;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_GameEndBoolean == false)) {
        for (autoF427485B_i = 1; autoF427485B_i <= autoF427485B_n; autoF427485B_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "PreserverA", 0, 12, PointFromId(123));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(208)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(46)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(203)), c_orderQueueAddToEnd);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "PreserverB", 0, 13, PointFromId(203));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(209)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(43)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(123)), c_orderQueueAddToEnd);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "PreserverA", 0, 12, PointFromId(108));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(204)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(47)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(124)), c_orderQueueAddToEnd);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "PreserverB", 0, 13, PointFromId(124));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(207)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(48)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(108)), c_orderQueueAddToEnd);
            Wait(0.5, c_timeReal);
        }
        for (auto5C95C87E_i = 1; auto5C95C87E_i <= auto5C95C87E_n; auto5C95C87E_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "HighTemplar", 0, 12, PointFromId(123));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(208)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(46)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(203)), c_orderQueueAddToEnd);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "HighTemplar2team", 0, 13, PointFromId(203));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(209)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(43)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(123)), c_orderQueueAddToEnd);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "HighTemplar", 0, 12, PointFromId(108));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(204)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(47)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(124)), c_orderQueueAddToEnd);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "HighTemplar2team", 0, 13, PointFromId(124));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(207)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(48)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(108)), c_orderQueueAddToEnd);
            Wait(0.5, c_timeReal);
        }
        if ((gv_StrongUnitCount == 2)) {
            Wait(0.1, c_timeReal);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Sentry", 0, 12, PointFromId(123));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(208)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(46)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(203)), c_orderQueueAddToEnd);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Sentry2team", 0, 13, PointFromId(203));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(209)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(43)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(123)), c_orderQueueAddToEnd);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Sentry", 0, 12, PointFromId(108));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(204)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(47)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(124)), c_orderQueueAddToEnd);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Sentry2team", 0, 13, PointFromId(124));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(207)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(48)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(108)), c_orderQueueAddToEnd);
            gv_StrongUnitCount = 0;
            Wait(0.5, c_timeReal);
        }
        else {
            gv_StrongUnitCount += 1;
        }
        if ((UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionCircle(PointFromId(155), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Sentry", 0, 12, PointFromId(123));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(208)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(46)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(203)), c_orderQueueAddToEnd);
        }

        if ((UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionCircle(PointFromId(154), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Sentry2team", 0, 13, PointFromId(203));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(209)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(43)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(123)), c_orderQueueAddToEnd);
        }

        if ((UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionCircle(PointFromId(185), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Sentry", 0, 12, PointFromId(108));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(204)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(47)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(124)), c_orderQueueAddToEnd);
        }

        if ((UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionCircle(PointFromId(179), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Sentry2team", 0, 13, PointFromId(124));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(207)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(48)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(108)), c_orderQueueAddToEnd);
        }

        Wait(0.5, c_timeReal);
        if ((UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionCircle(PointFromId(155), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Immortal", 0, 12, PointFromId(123));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(208)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(46)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(203)), c_orderQueueAddToEnd);
        }

        if ((UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionCircle(PointFromId(154), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Immortal2team", 0, 13, PointFromId(203));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(209)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(210)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(43)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(123)), c_orderQueueAddToEnd);
        }

        if ((UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionCircle(PointFromId(185), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Immortal", 0, 12, PointFromId(108));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(204)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(47)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(124)), c_orderQueueAddToEnd);
        }

        if ((UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionCircle(PointFromId(179), 5.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Immortal2team", 0, 13, PointFromId(124));
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(207)), c_orderQueueReplace);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(206)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(48)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 3), PointFromId(108)), c_orderQueueAddToEnd);
        }

        gv_MinionMonsterStronger[0] += 1;
        gv_MinionMonsterStronger[1] += 1;
        if ((gv_MinionMonsterStronger[0] >= 2) && (gv_MinionMonsterStronger[2] < 100)) {
            gv_MinionMonsterStronger[0] = 0;
            gv_MinionMonsterStronger[2] += 1;
            TechTreeUpgradeAddLevel(12, "PortalBuy22", 1);
            TechTreeUpgradeAddLevel(13, "PortalBuy22", 1);
        }

        if ((gv_MinionMonsterStronger[1] >= 20) && (gv_MinionMonsterStronger[3] < 5)) {
            gv_MinionMonsterStronger[1] = 0;
            gv_MinionMonsterStronger[3] += 1;
            TechTreeUpgradeAddLevel(11, "PortalBuy222", 1);
            TechTreeUpgradeAddLevel(12, "PortalBuy223", 1);
            TechTreeUpgradeAddLevel(13, "PortalBuy223", 1);
        }

        PlayerCreateEffectPoint(11, "MinionMakeTimerG", PointFromId(1));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMinionMake_Init () {
    gt_TrMinionMake = TriggerCreate("gt_TrMinionMake_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMinionMake, 11, "MonsterMakeTimerD");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????????
//--------------------------------------------------------------------------------------------------
bool gt_TrHeroLevelUp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((EventUnitBehavior() == "TestVeterancy2"))) {
            return false;
        }

        if (!((UnitLevel(EventUnit()) > 1))) {
            return false;
        }

        if (!((UnitLevel(EventUnit()) <= 18))) {
            return false;
        }

        if (!((EventUnit() == gv_PlayerHero[EventPlayer()]))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_SkillLearnPossibleStat[EventPlayer()] += 1;
    if (((UnitLevel(EventUnit()) == 6) || (UnitLevel(EventUnit()) == 11) || (UnitLevel(EventUnit()) == 16))) {
        gv_SkillLearnPossibleStatR[EventPlayer()] += 1;
    }

    if (((UnitLevel(EventUnit()) >= 2) && (UnitLevel(EventUnit()) <= 6))) {
        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 1);
        gv_HeroReviveCountNum[EventPlayer()][1] += 1;
    }
    else {
        if (((UnitLevel(EventUnit()) >= 7) && (UnitLevel(EventUnit()) <= 11))) {
            PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 2);
            gv_HeroReviveCountNum[EventPlayer()][1] += 2;
        }
        else {
            if (((UnitLevel(EventUnit()) >= 12) && (UnitLevel(EventUnit()) <= 16))) {
                PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 3);
                gv_HeroReviveCountNum[EventPlayer()][1] += 3;
            }
            else {
                if ((UnitLevel(EventUnit()) == 17)) {
                    PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 4);
                    gv_HeroReviveCountNum[EventPlayer()][1] += 4;
                }
                else {
                    if ((UnitLevel(EventUnit()) == 18)) {
                        PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperAdd, 5);
                        gv_HeroReviveCountNum[EventPlayer()][1] += 8;
                    }

                }
            }
        }
    }
    gv_PlayerLevel[EventPlayer()][0] += 1;
    gv_HeroKillMoney[EventPlayer()][0] += 15;
    gv_HeroKillMoney[EventPlayer()][1] += 4;
    gv_HeroKillMoney[EventPlayer()][2] += 7;
    gv_AllyGiveMoney[EventPlayer()] += 50;
    libNtve_gf_SetDialogItemText(gv_ScoreDialogLevel[EventPlayer()], (StringExternal("Param/Value/6ADB3997") + IntToText(gv_PlayerLevel[EventPlayer()][0]) + StringExternal("Param/Value/DDE5A5FD")), PlayerGroupAll());
    gf_HrSkillLearnWindowOpen();
    gf_HrHeroLevelUpLink1();
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellLvUp", 1);
    if ((UnitFilterMatch(EventUnit(), EventPlayer(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32)))) == true)) {
        PlayerCreateEffectUnit(EventPlayer(), "ApplyIncapBehavior2222", gv_PlayerHero[EventPlayer()]);
        TextTagCreate((StringExternal("Param/Value/C9DC761E") + TextWithColor(StringExternal("Param/Value/884F1E2C"), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/DA92AFA3")), 35, UnitGetPosition(gv_PlayerHero[EventPlayer()]), (UnitGetHeight(gv_PlayerHero[EventPlayer()]) + 1.0), true, false, PlayerGroupSingle(EventPlayer()));
        TextTagAttachToUnit(TextTagLastCreated(), gv_PlayerHero[EventPlayer()], 1.0);
        TextTagSetVelocity(TextTagLastCreated(), 0.5, 90.0);
        TextTagFogofWar(TextTagLastCreated(), true);
        TextTagSetFogVisibility(TextTagLastCreated(), c_visTypeFog);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, 3.0);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHeroLevelUp_Init () {
    gt_TrHeroLevelUp = TriggerCreate("gt_TrHeroLevelUp_Func");
    TriggerAddEventUnitGainLevel(gt_TrHeroLevelUp, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? (?????? ??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrSkillLearnBtnClick_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!(((EventDialogControl() == gv_SkillLearnWindowBtn[0]) || (EventDialogControl() == gv_SkillLearnWindowBtn[1]) || (EventDialogControl() == gv_SkillLearnWindowBtn[2]) || (EventDialogControl() == gv_SkillLearnWindowBtn[3])))) {
            return false;
        }

        if (!((gv_SkillLearnPossibleStat[EventPlayer()] > 0))) {
            return false;
        }

        if (!(((gv_SkillLearnSwitchQ[EventPlayer()] == false) && (gv_SkillLearnSwitchW[EventPlayer()] == false) && (gv_SkillLearnSwitchE[EventPlayer()] == false) && (gv_SkillLearnSwitchR[EventPlayer()] == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == gv_SkillLearnWindowBtn[0])) {
        gv_SkillLearnSwitchQ[EventPlayer()] = true;
    }
    else {
        if ((EventDialogControl() == gv_SkillLearnWindowBtn[1])) {
            gv_SkillLearnSwitchW[EventPlayer()] = true;
        }
        else {
            if ((EventDialogControl() == gv_SkillLearnWindowBtn[2])) {
                gv_SkillLearnSwitchE[EventPlayer()] = true;
            }
            else {
                if ((EventDialogControl() == gv_SkillLearnWindowBtn[3])) {
                    gv_SkillLearnSwitchR[EventPlayer()] = true;
                }

            }
        }
    }
    gf_HrSkillLearnHeroCategoryLink();
    gv_SkillLearnSwitchQ[EventPlayer()] = false;
    gv_SkillLearnSwitchW[EventPlayer()] = false;
    gv_SkillLearnSwitchE[EventPlayer()] = false;
    gv_SkillLearnSwitchR[EventPlayer()] = false;
    if ((gv_SkillQLevel[EventPlayer()] == 1)) {
        libNtve_gf_SetDialogItemTooltip(gv_SkillLearnWindowBtn[0], StringExternal("Param/Value/12A551AB"), PlayerGroupSingle(EventPlayer()));
    }
    else {
        if ((gv_SkillWLevel[EventPlayer()] == 1)) {
            libNtve_gf_SetDialogItemTooltip(gv_SkillLearnWindowBtn[1], StringExternal("Param/Value/7B3AD691"), PlayerGroupSingle(EventPlayer()));
        }
        else {
            if ((gv_SkillELevel[EventPlayer()] == 1)) {
                libNtve_gf_SetDialogItemTooltip(gv_SkillLearnWindowBtn[2], StringExternal("Param/Value/BA3F12C4"), PlayerGroupSingle(EventPlayer()));
            }
            else {
                if ((gv_SkillRLevel[EventPlayer()] == 1)) {
                    libNtve_gf_SetDialogItemTooltip(gv_SkillLearnWindowBtn[3], StringExternal("Param/Value/3323CBC3"), PlayerGroupSingle(EventPlayer()));
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSkillLearnBtnClick_Init () {
    gt_TrSkillLearnBtnClick = TriggerCreate("gt_TrSkillLearnBtnClick_Func");
    TriggerAddEventDialogControl(gt_TrSkillLearnBtnClick, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? (?????????F1)
//--------------------------------------------------------------------------------------------------
bool gt_TrSkillLearnHotKey1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_SkillLearnPossibleStat[EventPlayer()] > 0))) {
            return false;
        }

        if (!((gv_SkillLearnSwitchQ[EventPlayer()] == false))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SkillLearnWindow, EventPlayer()) == true))) {
            return false;
        }

        if (!((gv_SkillLearnSwitchKey[EventPlayer()][0] == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_SkillLearnSwitchQ[EventPlayer()] = true;
    gf_HrSkillLearnHeroCategoryLink();
    gv_SkillLearnSwitchQ[EventPlayer()] = false;
    if ((gv_SkillQLevel[EventPlayer()] == 1)) {
        libNtve_gf_SetDialogItemTooltip(gv_SkillLearnWindowBtn[0], StringExternal("Param/Value/166EDB1E"), PlayerGroupSingle(EventPlayer()));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSkillLearnHotKey1_Init () {
    gt_TrSkillLearnHotKey1 = TriggerCreate("gt_TrSkillLearnHotKey1_Func");
    TriggerAddEventKeyPressed(gt_TrSkillLearnHotKey1, c_playerAny, c_keyF1, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? (?????????F2)
//--------------------------------------------------------------------------------------------------
bool gt_TrSkillLearnHotKey2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_SkillLearnPossibleStat[EventPlayer()] > 0))) {
            return false;
        }

        if (!((gv_SkillLearnSwitchW[EventPlayer()] == false))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SkillLearnWindow, EventPlayer()) == true))) {
            return false;
        }

        if (!((gv_SkillLearnSwitchKey[EventPlayer()][1] == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_SkillLearnSwitchW[EventPlayer()] = true;
    gf_HrSkillLearnHeroCategoryLink();
    gv_SkillLearnSwitchW[EventPlayer()] = false;
    if ((gv_SkillWLevel[EventPlayer()] == 1)) {
        libNtve_gf_SetDialogItemTooltip(gv_SkillLearnWindowBtn[1], StringExternal("Param/Value/4813E63B"), PlayerGroupSingle(EventPlayer()));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSkillLearnHotKey2_Init () {
    gt_TrSkillLearnHotKey2 = TriggerCreate("gt_TrSkillLearnHotKey2_Func");
    TriggerAddEventKeyPressed(gt_TrSkillLearnHotKey2, c_playerAny, c_keyF2, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? (?????????F3)
//--------------------------------------------------------------------------------------------------
bool gt_TrSkillLearnHotKey3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_SkillLearnPossibleStat[EventPlayer()] > 0))) {
            return false;
        }

        if (!((gv_SkillLearnSwitchE[EventPlayer()] == false))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SkillLearnWindow, EventPlayer()) == true))) {
            return false;
        }

        if (!((gv_SkillLearnSwitchKey[EventPlayer()][2] == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_SkillLearnSwitchE[EventPlayer()] = true;
    gf_HrSkillLearnHeroCategoryLink();
    gv_SkillLearnSwitchE[EventPlayer()] = false;
    if ((gv_SkillELevel[EventPlayer()] == 1)) {
        libNtve_gf_SetDialogItemTooltip(gv_SkillLearnWindowBtn[2], StringExternal("Param/Value/4D8E6CEE"), PlayerGroupSingle(EventPlayer()));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSkillLearnHotKey3_Init () {
    gt_TrSkillLearnHotKey3 = TriggerCreate("gt_TrSkillLearnHotKey3_Func");
    TriggerAddEventKeyPressed(gt_TrSkillLearnHotKey3, c_playerAny, c_keyF3, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? (?????????F4)
//--------------------------------------------------------------------------------------------------
bool gt_TrSkillLearnHotKey4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_SkillLearnPossibleStat[EventPlayer()] > 0))) {
            return false;
        }

        if (!((gv_SkillLearnSwitchR[EventPlayer()] == false))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SkillLearnWindow, EventPlayer()) == true))) {
            return false;
        }

        if (!((gv_SkillLearnSwitchKey[EventPlayer()][3] == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_SkillLearnSwitchR[EventPlayer()] = true;
    gf_HrSkillLearnHeroCategoryLink();
    gv_SkillLearnSwitchR[EventPlayer()] = false;
    if ((gv_SkillRLevel[EventPlayer()] == 1)) {
        libNtve_gf_SetDialogItemTooltip(gv_SkillLearnWindowBtn[3], StringExternal("Param/Value/6175D150"), PlayerGroupSingle(EventPlayer()));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSkillLearnHotKey4_Init () {
    gt_TrSkillLearnHotKey4 = TriggerCreate("gt_TrSkillLearnHotKey4_Func");
    TriggerAddEventKeyPressed(gt_TrSkillLearnHotKey4, c_playerAny, c_keyF4, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ????????? ?????????
//--------------------------------------------------------------------------------------------------
bool gt_TrStatDialogPageNext_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA09505EBB380EC8898;
    int lv_eC84A4ECA095611EBB380EC8898;
    int lv_eC84A4ECA0951217EBB380EC8898;
    int lv_eC84A4ECA0951823EBB380EC8898;
    int lv_eC84A4ECA0952429EBB380EC8898;

    // Automatic Variable Declarations
    const int auto556A72A9_ae = 5;
    const int auto556A72A9_ai = 1;
    const int auto0301499D_ae = 11;
    const int auto0301499D_ai = 1;
    const int auto0D214327_ae = 17;
    const int auto0D214327_ai = 1;
    const int auto0D8C0116_ae = 23;
    const int auto0D8C0116_ai = 1;
    const int autoA990F68E_ae = 29;
    const int autoA990F68E_ai = 1;
    const int autoE054FACA_ae = 5;
    const int autoE054FACA_ai = 1;
    const int auto5064B318_ae = 11;
    const int auto5064B318_ai = 1;
    const int auto0F30B828_ae = 17;
    const int auto0F30B828_ai = 1;
    const int autoF002799D_ae = 23;
    const int autoF002799D_ai = 1;
    const int auto9813162D_ae = 29;
    const int auto9813162D_ai = 1;
    const int auto084F0005_ae = 5;
    const int auto084F0005_ai = 1;
    const int auto12AE5413_ae = 11;
    const int auto12AE5413_ai = 1;
    const int auto92C41A86_ae = 17;
    const int auto92C41A86_ai = 1;
    const int autoE9A7E327_ae = 23;
    const int autoE9A7E327_ai = 1;
    const int auto6CB8B3B4_ae = 29;
    const int auto6CB8B3B4_ai = 1;
    const int auto15A4BA07_ae = 5;
    const int auto15A4BA07_ai = 1;
    const int auto45396F89_ae = 11;
    const int auto45396F89_ai = 1;
    const int auto39A97298_ae = 17;
    const int auto39A97298_ai = 1;
    const int autoA5343BD3_ae = 23;
    const int autoA5343BD3_ai = 1;
    const int autoCE3C03BE_ae = 29;
    const int autoCE3C03BE_ai = 1;
    const int auto49D52EA8_ae = 5;
    const int auto49D52EA8_ai = 1;
    const int autoB31A5EA7_ae = 11;
    const int autoB31A5EA7_ai = 1;
    const int autoDCDDC4EC_ae = 17;
    const int autoDCDDC4EC_ai = 1;
    const int autoE0147235_ae = 23;
    const int autoE0147235_ai = 1;
    const int autoCB318EA8_ae = 29;
    const int autoCB318EA8_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095611EBB380EC8898 = 6;
    lv_eC84A4ECA0951217EBB380EC8898 = 12;
    lv_eC84A4ECA0951823EBB380EC8898 = 18;
    lv_eC84A4ECA0952429EBB380EC8898 = 24;

    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == gv_StatusWindowPageBtn[0]) || (EventDialogControl() == gv_StatusWindowPageBtn[1]) || (EventDialogControl() == gv_StatusWindowPageBtn[2]) || (EventDialogControl() == gv_StatusWindowPageBtn[3]) || (EventDialogControl() == gv_StatusWindowPageBtn[4])))) {
            return false;
        }

        if (!((gv_StatusWindowPageDelay[EventPlayer()] == false))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_StatusWindowPageDelay[EventPlayer()] = true;
    if ((EventDialogControl() == gv_StatusWindowPageBtn[0]) && (gv_StatusWindowPageSwitch[EventPlayer()] != 0)) {
        lv_eC84A4ECA09505EBB380EC8898 = 0;
        for ( ; ( (auto49D52EA8_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= auto49D52EA8_ae) || (auto49D52EA8_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= auto49D52EA8_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += auto49D52EA8_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
        }
        lv_eC84A4ECA095611EBB380EC8898 = 6;
        for ( ; ( (autoB31A5EA7_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= autoB31A5EA7_ae) || (autoB31A5EA7_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= autoB31A5EA7_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += autoB31A5EA7_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
        }
        lv_eC84A4ECA0951217EBB380EC8898 = 12;
        for ( ; ( (autoDCDDC4EC_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= autoDCDDC4EC_ae) || (autoDCDDC4EC_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= autoDCDDC4EC_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += autoDCDDC4EC_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
        }
        lv_eC84A4ECA0951823EBB380EC8898 = 18;
        for ( ; ( (autoE0147235_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= autoE0147235_ae) || (autoE0147235_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= autoE0147235_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += autoE0147235_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
        }
        lv_eC84A4ECA0952429EBB380EC8898 = 24;
        for ( ; ( (autoCB318EA8_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= autoCB318EA8_ae) || (autoCB318EA8_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= autoCB318EA8_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += autoCB318EA8_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
        }
        gv_StatusWindowPageSwitch[EventPlayer()] = 0;
        DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), true);
    }
    else {
        if ((EventDialogControl() == gv_StatusWindowPageBtn[1]) && (gv_StatusWindowPageSwitch[EventPlayer()] != 1)) {
            lv_eC84A4ECA09505EBB380EC8898 = 0;
            for ( ; ( (auto15A4BA07_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= auto15A4BA07_ae) || (auto15A4BA07_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= auto15A4BA07_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += auto15A4BA07_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            }
            lv_eC84A4ECA095611EBB380EC8898 = 6;
            for ( ; ( (auto45396F89_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= auto45396F89_ae) || (auto45396F89_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= auto45396F89_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += auto45396F89_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
            }
            lv_eC84A4ECA0951217EBB380EC8898 = 12;
            for ( ; ( (auto39A97298_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= auto39A97298_ae) || (auto39A97298_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= auto39A97298_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += auto39A97298_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            }
            lv_eC84A4ECA0951823EBB380EC8898 = 18;
            for ( ; ( (autoA5343BD3_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= autoA5343BD3_ae) || (autoA5343BD3_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= autoA5343BD3_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += autoA5343BD3_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            }
            lv_eC84A4ECA0952429EBB380EC8898 = 24;
            for ( ; ( (autoCE3C03BE_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= autoCE3C03BE_ae) || (autoCE3C03BE_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= autoCE3C03BE_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += autoCE3C03BE_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            }
            gv_StatusWindowPageSwitch[EventPlayer()] = 1;
            DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), true);
        }
        else {
            if ((EventDialogControl() == gv_StatusWindowPageBtn[2]) && (gv_StatusWindowPageSwitch[EventPlayer()] != 2)) {
                lv_eC84A4ECA09505EBB380EC8898 = 0;
                for ( ; ( (auto084F0005_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= auto084F0005_ae) || (auto084F0005_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= auto084F0005_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += auto084F0005_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                }
                lv_eC84A4ECA095611EBB380EC8898 = 6;
                for ( ; ( (auto12AE5413_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= auto12AE5413_ae) || (auto12AE5413_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= auto12AE5413_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += auto12AE5413_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                }
                lv_eC84A4ECA0951217EBB380EC8898 = 12;
                for ( ; ( (auto92C41A86_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= auto92C41A86_ae) || (auto92C41A86_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= auto92C41A86_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += auto92C41A86_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                }
                lv_eC84A4ECA0951823EBB380EC8898 = 18;
                for ( ; ( (autoE9A7E327_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= autoE9A7E327_ae) || (autoE9A7E327_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= autoE9A7E327_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += autoE9A7E327_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                }
                lv_eC84A4ECA0952429EBB380EC8898 = 24;
                for ( ; ( (auto6CB8B3B4_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= auto6CB8B3B4_ae) || (auto6CB8B3B4_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= auto6CB8B3B4_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += auto6CB8B3B4_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                }
                gv_StatusWindowPageSwitch[EventPlayer()] = 2;
                DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), true);
            }
            else {
                if ((EventDialogControl() == gv_StatusWindowPageBtn[3]) && (gv_StatusWindowPageSwitch[EventPlayer()] != 3)) {
                    lv_eC84A4ECA09505EBB380EC8898 = 0;
                    for ( ; ( (autoE054FACA_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= autoE054FACA_ae) || (autoE054FACA_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= autoE054FACA_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += autoE054FACA_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    }
                    lv_eC84A4ECA095611EBB380EC8898 = 6;
                    for ( ; ( (auto5064B318_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= auto5064B318_ae) || (auto5064B318_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= auto5064B318_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += auto5064B318_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    }
                    lv_eC84A4ECA0951217EBB380EC8898 = 12;
                    for ( ; ( (auto0F30B828_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= auto0F30B828_ae) || (auto0F30B828_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= auto0F30B828_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += auto0F30B828_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                    }
                    lv_eC84A4ECA0951823EBB380EC8898 = 18;
                    for ( ; ( (autoF002799D_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= autoF002799D_ae) || (autoF002799D_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= autoF002799D_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += autoF002799D_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    }
                    lv_eC84A4ECA0952429EBB380EC8898 = 24;
                    for ( ; ( (auto9813162D_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= auto9813162D_ae) || (auto9813162D_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= auto9813162D_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += auto9813162D_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    }
                    gv_StatusWindowPageSwitch[EventPlayer()] = 3;
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), true);
                }
                else {
                    if ((EventDialogControl() == gv_StatusWindowPageBtn[4]) && (gv_StatusWindowPageSwitch[EventPlayer()] != 4)) {
                        lv_eC84A4ECA09505EBB380EC8898 = 0;
                        for ( ; ( (auto556A72A9_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= auto556A72A9_ae) || (auto556A72A9_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= auto556A72A9_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += auto556A72A9_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        }
                        lv_eC84A4ECA095611EBB380EC8898 = 6;
                        for ( ; ( (auto0301499D_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= auto0301499D_ae) || (auto0301499D_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= auto0301499D_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += auto0301499D_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        }
                        lv_eC84A4ECA0951217EBB380EC8898 = 12;
                        for ( ; ( (auto0D214327_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= auto0D214327_ae) || (auto0D214327_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= auto0D214327_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += auto0D214327_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        }
                        lv_eC84A4ECA0951823EBB380EC8898 = 18;
                        for ( ; ( (auto0D8C0116_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= auto0D8C0116_ae) || (auto0D8C0116_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= auto0D8C0116_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += auto0D8C0116_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        }
                        lv_eC84A4ECA0952429EBB380EC8898 = 24;
                        for ( ; ( (autoA990F68E_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= autoA990F68E_ae) || (autoA990F68E_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= autoA990F68E_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += autoA990F68E_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                        }
                        gv_StatusWindowPageSwitch[EventPlayer()] = 4;
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), false);
                    }

                }
            }
        }
    }
    Wait(0.1, c_timeReal);
    gv_StatusWindowPageDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrStatDialogPageNext_Init () {
    gt_TrStatDialogPageNext = TriggerCreate("gt_TrStatDialogPageNext_Func");
    TriggerAddEventDialogControl(gt_TrStatDialogPageNext, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ????????? ?????????(?????????)
//--------------------------------------------------------------------------------------------------
bool gt_TrStatDialogPageNextHotKey_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA09505EBB380EC8898;
    int lv_eC84A4ECA095611EBB380EC8898;
    int lv_eC84A4ECA0951217EBB380EC8898;
    int lv_eC84A4ECA0951823EBB380EC8898;
    int lv_eC84A4ECA0952429EBB380EC8898;

    // Automatic Variable Declarations
    const int auto2206D0AC_ae = 5;
    const int auto2206D0AC_ai = 1;
    const int auto40BCBC35_ae = 11;
    const int auto40BCBC35_ai = 1;
    const int autoA00E66C2_ae = 17;
    const int autoA00E66C2_ai = 1;
    const int auto57F2101E_ae = 23;
    const int auto57F2101E_ai = 1;
    const int autoC30A04A8_ae = 29;
    const int autoC30A04A8_ai = 1;
    const int auto2B4C7728_ae = 5;
    const int auto2B4C7728_ai = 1;
    const int auto8FC3896F_ae = 11;
    const int auto8FC3896F_ai = 1;
    const int auto65D53AC3_ae = 17;
    const int auto65D53AC3_ai = 1;
    const int autoE2C2B794_ae = 23;
    const int autoE2C2B794_ai = 1;
    const int autoED213AAA_ae = 29;
    const int autoED213AAA_ai = 1;
    const int autoEE9D9715_ae = 5;
    const int autoEE9D9715_ai = 1;
    const int auto97007448_ae = 11;
    const int auto97007448_ai = 1;
    const int auto97D3AE23_ae = 17;
    const int auto97D3AE23_ai = 1;
    const int auto8EB0F021_ae = 23;
    const int auto8EB0F021_ai = 1;
    const int autoCA28ACC8_ae = 29;
    const int autoCA28ACC8_ai = 1;
    const int autoF15CCADF_ae = 5;
    const int autoF15CCADF_ai = 1;
    const int auto8909FB7B_ae = 11;
    const int auto8909FB7B_ai = 1;
    const int auto1F5F763F_ae = 17;
    const int auto1F5F763F_ai = 1;
    const int autoF91B0ED0_ae = 23;
    const int autoF91B0ED0_ai = 1;
    const int auto1E0CFD85_ae = 29;
    const int auto1E0CFD85_ai = 1;
    const int auto6BA6A9EA_ae = 5;
    const int auto6BA6A9EA_ai = 1;
    const int auto69FD0425_ae = 11;
    const int auto69FD0425_ai = 1;
    const int auto1D4D4CF1_ae = 17;
    const int auto1D4D4CF1_ai = 1;
    const int autoCB13DA9F_ae = 23;
    const int autoCB13DA9F_ai = 1;
    const int autoC7BD72F0_ae = 29;
    const int autoC7BD72F0_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095611EBB380EC8898 = 6;
    lv_eC84A4ECA0951217EBB380EC8898 = 12;
    lv_eC84A4ECA0951823EBB380EC8898 = 18;
    lv_eC84A4ECA0952429EBB380EC8898 = 24;

    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_BeforeStartCounterDialogNum == 0))) {
            return false;
        }

        if (!((gv_StatusWindowPageDelay[EventPlayer()] == false))) {
            return false;
        }

        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_StatusWindowPageDelay[EventPlayer()] = true;
    if ((gv_StatusWindowPageSwitch[EventPlayer()] == 4)) {
        lv_eC84A4ECA09505EBB380EC8898 = 0;
        for ( ; ( (auto6BA6A9EA_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= auto6BA6A9EA_ae) || (auto6BA6A9EA_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= auto6BA6A9EA_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += auto6BA6A9EA_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
        }
        lv_eC84A4ECA095611EBB380EC8898 = 6;
        for ( ; ( (auto69FD0425_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= auto69FD0425_ae) || (auto69FD0425_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= auto69FD0425_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += auto69FD0425_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
        }
        lv_eC84A4ECA0951217EBB380EC8898 = 12;
        for ( ; ( (auto1D4D4CF1_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= auto1D4D4CF1_ae) || (auto1D4D4CF1_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= auto1D4D4CF1_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += auto1D4D4CF1_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
        }
        lv_eC84A4ECA0951823EBB380EC8898 = 18;
        for ( ; ( (autoCB13DA9F_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= autoCB13DA9F_ae) || (autoCB13DA9F_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= autoCB13DA9F_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += autoCB13DA9F_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
        }
        lv_eC84A4ECA0952429EBB380EC8898 = 24;
        for ( ; ( (autoC7BD72F0_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= autoC7BD72F0_ae) || (autoC7BD72F0_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= autoC7BD72F0_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += autoC7BD72F0_ai ) {
            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
        }
        gv_StatusWindowPageSwitch[EventPlayer()] = 0;
        DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), true);
        DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), true);
    }
    else {
        if ((gv_StatusWindowPageSwitch[EventPlayer()] == 0)) {
            lv_eC84A4ECA09505EBB380EC8898 = 0;
            for ( ; ( (autoF15CCADF_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= autoF15CCADF_ae) || (autoF15CCADF_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= autoF15CCADF_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += autoF15CCADF_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            }
            lv_eC84A4ECA095611EBB380EC8898 = 6;
            for ( ; ( (auto8909FB7B_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= auto8909FB7B_ae) || (auto8909FB7B_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= auto8909FB7B_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += auto8909FB7B_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
            }
            lv_eC84A4ECA0951217EBB380EC8898 = 12;
            for ( ; ( (auto1F5F763F_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= auto1F5F763F_ae) || (auto1F5F763F_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= auto1F5F763F_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += auto1F5F763F_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            }
            lv_eC84A4ECA0951823EBB380EC8898 = 18;
            for ( ; ( (autoF91B0ED0_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= autoF91B0ED0_ae) || (autoF91B0ED0_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= autoF91B0ED0_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += autoF91B0ED0_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            }
            lv_eC84A4ECA0952429EBB380EC8898 = 24;
            for ( ; ( (auto1E0CFD85_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= auto1E0CFD85_ae) || (auto1E0CFD85_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= auto1E0CFD85_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += auto1E0CFD85_ai ) {
                DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
            }
            gv_StatusWindowPageSwitch[EventPlayer()] = 1;
            DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), true);
        }
        else {
            if ((gv_StatusWindowPageSwitch[EventPlayer()] == 1)) {
                lv_eC84A4ECA09505EBB380EC8898 = 0;
                for ( ; ( (autoEE9D9715_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= autoEE9D9715_ae) || (autoEE9D9715_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= autoEE9D9715_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += autoEE9D9715_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                }
                lv_eC84A4ECA095611EBB380EC8898 = 6;
                for ( ; ( (auto97007448_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= auto97007448_ae) || (auto97007448_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= auto97007448_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += auto97007448_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                }
                lv_eC84A4ECA0951217EBB380EC8898 = 12;
                for ( ; ( (auto97D3AE23_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= auto97D3AE23_ae) || (auto97D3AE23_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= auto97D3AE23_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += auto97D3AE23_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                }
                lv_eC84A4ECA0951823EBB380EC8898 = 18;
                for ( ; ( (auto8EB0F021_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= auto8EB0F021_ae) || (auto8EB0F021_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= auto8EB0F021_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += auto8EB0F021_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                }
                lv_eC84A4ECA0952429EBB380EC8898 = 24;
                for ( ; ( (autoCA28ACC8_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= autoCA28ACC8_ae) || (autoCA28ACC8_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= autoCA28ACC8_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += autoCA28ACC8_ai ) {
                    DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                }
                gv_StatusWindowPageSwitch[EventPlayer()] = 2;
                DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), false);
                DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), true);
                DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), true);
            }
            else {
                if ((gv_StatusWindowPageSwitch[EventPlayer()] == 2)) {
                    lv_eC84A4ECA09505EBB380EC8898 = 0;
                    for ( ; ( (auto2B4C7728_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= auto2B4C7728_ae) || (auto2B4C7728_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= auto2B4C7728_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += auto2B4C7728_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    }
                    lv_eC84A4ECA095611EBB380EC8898 = 6;
                    for ( ; ( (auto8FC3896F_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= auto8FC3896F_ae) || (auto8FC3896F_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= auto8FC3896F_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += auto8FC3896F_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    }
                    lv_eC84A4ECA0951217EBB380EC8898 = 12;
                    for ( ; ( (auto65D53AC3_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= auto65D53AC3_ae) || (auto65D53AC3_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= auto65D53AC3_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += auto65D53AC3_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                    }
                    lv_eC84A4ECA0951823EBB380EC8898 = 18;
                    for ( ; ( (autoE2C2B794_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= autoE2C2B794_ae) || (autoE2C2B794_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= autoE2C2B794_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += autoE2C2B794_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    }
                    lv_eC84A4ECA0952429EBB380EC8898 = 24;
                    for ( ; ( (autoED213AAA_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= autoED213AAA_ae) || (autoED213AAA_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= autoED213AAA_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += autoED213AAA_ai ) {
                        DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                    }
                    gv_StatusWindowPageSwitch[EventPlayer()] = 3;
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), true);
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), false);
                    DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), true);
                }
                else {
                    if ((gv_StatusWindowPageSwitch[EventPlayer()] == 3)) {
                        lv_eC84A4ECA09505EBB380EC8898 = 0;
                        for ( ; ( (auto2206D0AC_ai >= 0 && lv_eC84A4ECA09505EBB380EC8898 <= auto2206D0AC_ae) || (auto2206D0AC_ai < 0 && lv_eC84A4ECA09505EBB380EC8898 >= auto2206D0AC_ae) ) ; lv_eC84A4ECA09505EBB380EC8898 += auto2206D0AC_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA09505EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        }
                        lv_eC84A4ECA095611EBB380EC8898 = 6;
                        for ( ; ( (auto40BCBC35_ai >= 0 && lv_eC84A4ECA095611EBB380EC8898 <= auto40BCBC35_ae) || (auto40BCBC35_ai < 0 && lv_eC84A4ECA095611EBB380EC8898 >= auto40BCBC35_ae) ) ; lv_eC84A4ECA095611EBB380EC8898 += auto40BCBC35_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA095611EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        }
                        lv_eC84A4ECA0951217EBB380EC8898 = 12;
                        for ( ; ( (autoA00E66C2_ai >= 0 && lv_eC84A4ECA0951217EBB380EC8898 <= autoA00E66C2_ae) || (autoA00E66C2_ai < 0 && lv_eC84A4ECA0951217EBB380EC8898 >= autoA00E66C2_ae) ) ; lv_eC84A4ECA0951217EBB380EC8898 += autoA00E66C2_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951217EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        }
                        lv_eC84A4ECA0951823EBB380EC8898 = 18;
                        for ( ; ( (auto57F2101E_ai >= 0 && lv_eC84A4ECA0951823EBB380EC8898 <= auto57F2101E_ae) || (auto57F2101E_ai < 0 && lv_eC84A4ECA0951823EBB380EC8898 >= auto57F2101E_ae) ) ; lv_eC84A4ECA0951823EBB380EC8898 += auto57F2101E_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0951823EBB380EC8898], PlayerGroupSingle(EventPlayer()), false);
                        }
                        lv_eC84A4ECA0952429EBB380EC8898 = 24;
                        for ( ; ( (autoC30A04A8_ai >= 0 && lv_eC84A4ECA0952429EBB380EC8898 <= autoC30A04A8_ae) || (autoC30A04A8_ai < 0 && lv_eC84A4ECA0952429EBB380EC8898 >= autoC30A04A8_ae) ) ; lv_eC84A4ECA0952429EBB380EC8898 += autoC30A04A8_ai ) {
                            DialogControlSetVisible(gv_StatusWindowBtnImage[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                            DialogControlSetVisible(gv_StatusWindowBtn[lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                            DialogControlSetVisible(gv_StatusWindowLabel[EventPlayer()][lv_eC84A4ECA0952429EBB380EC8898], PlayerGroupSingle(EventPlayer()), true);
                        }
                        gv_StatusWindowPageSwitch[EventPlayer()] = 4;
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[0], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[1], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[2], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[3], PlayerGroupSingle(EventPlayer()), true);
                        DialogControlSetEnabled(gv_StatusWindowPageBtn[4], PlayerGroupSingle(EventPlayer()), false);
                    }

                }
            }
        }
    }
    Wait(0.1, c_timeReal);
    gv_StatusWindowPageDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrStatDialogPageNextHotKey_Init () {
    gt_TrStatDialogPageNextHotKey = TriggerCreate("gt_TrStatDialogPageNextHotKey_Func");
    TriggerAddEventKeyPressed(gt_TrStatDialogPageNextHotKey, c_playerAny, c_keyGrave, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ????????? ???????????????
//--------------------------------------------------------------------------------------------------
static bool lf_StatEligibleForBuying (int stat_index) {
    if (PlayerGetPropertyInt(EventPlayer(), c_playerPropMinerals) < gv_StatHowMoney[stat_index][EventPlayer()]) {
        return false;
    }
    if (PlayerGetPropertyInt(EventPlayer(), c_playerPropVespene) < gv_ShopItemParameters[stat_index].gas_cost) {
        return false;
    }
    if (gv_ShopItemParameters[stat_index].alive_only && (gv_HeroDeathBoolean[EventPlayer()] == true)) {
        return false;
    }
    return true;
}
bool gt_TrStatDialogStatIncrease_Func (bool testConds, bool runActions) {
    int i;
    bool flag;
    // Conditions
    if (testConds) {
        // Only for human players
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }
        // Not for observers
        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }
        // Only if we're on the stat increase button
        flag = false;
        for (i = 0; i < 30; i += 1) {
            if (EventDialogControl() == gv_StatusWindowBtn[i]) {
                flag = true;
                break;
            }
        }
        if (!flag) {
            return false;
        }
        // Not sure if we need this check but why not
        if (!((gv_StatusWindowAddDelay[EventPlayer()] == false))) {
            return false;
        }
    }
    // Actions
    if (!runActions) {
        return true;
    }
    gv_StatusWindowAddDelay[EventPlayer()] = true;
    // Increase the stat if the criteria are met
    for (i = 0; i < 30; i += 1) {
        if ((EventDialogControl() == gv_StatusWindowBtn[i])) {
            if (!(lf_StatEligibleForBuying(i))) {
                gv_StatusWindowAddDelay[EventPlayer()] = false;
                return false;
            }
            if (i == 26) {
                // Check if there's a ward alive. Should be unnecessary but just in case
                if (!(UnitGroupCount(UnitGroup("Gamsi", EventPlayer(), RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
                    return false;
                }
            }
            gv_ShopItemParameters[i].increase_function();
        }
    }
    Wait(0.1, c_timeReal);
    gf_HrStatTooltip1();
    gv_StatusWindowAddDelay[EventPlayer()] = false;
    return true;
}
//--------------------------------------------------------------------------------------------------
void gt_TrStatDialogStatIncrease_Init () {
    gt_TrStatDialogStatIncrease = TriggerCreate("gt_TrStatDialogStatIncrease_Func");
    TriggerAddEventDialogControl(gt_TrStatDialogStatIncrease, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ??????(????????? Z)
//--------------------------------------------------------------------------------------------------
bool gt_TrStatDialogStatIncreaseHotKeyZ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int i;
    // Conditions
    if (testConds) {
        if (!(gf_HotkeyStatIncreaseTestConditions())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (i = 0; i < 30; i += 6) {
        if (!(gv_StatusWindowPageSwitch[EventPlayer()] == gf_ShopWindowByIndex(i))) {
            continue;
        }
        if (gf_EligibleForBuyingHotkey(i)) {
            gv_StatusWindowAddDelay[EventPlayer()] = true;
            gv_ShopItemParameters[i].increase_function();
            break;
        } else {
            return false;
        }
    }

    gf_HrStatTooltip1();
    Wait(0.1, c_timeReal);
    gv_StatusWindowAddDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrStatDialogStatIncreaseHotKeyZ_Init () {
    gt_TrStatDialogStatIncreaseHotKeyZ = TriggerCreate("gt_TrStatDialogStatIncreaseHotKeyZ_Func");
    TriggerAddEventKeyPressed(gt_TrStatDialogStatIncreaseHotKeyZ, c_playerAny, c_keyZ, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ??????(????????? X)
//--------------------------------------------------------------------------------------------------
bool gt_TrStatDialogStatIncreaseHotKeyX_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int i;
    // Conditions
    if (testConds) {
        if (!(gf_HotkeyStatIncreaseTestConditions())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (i = 1; i < 30; i += 6) {
        if (!(gv_StatusWindowPageSwitch[EventPlayer()] == gf_ShopWindowByIndex(i))) {
            continue;
        }
        if (gf_EligibleForBuyingHotkey(i)) {
            gv_StatusWindowAddDelay[EventPlayer()] = true;
            gv_ShopItemParameters[i].increase_function();
            break;
        } else {
            return false;
        }
    }

    gf_HrStatTooltip1();
    Wait(0.1, c_timeReal);
    gv_StatusWindowAddDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrStatDialogStatIncreaseHotKeyX_Init () {
    gt_TrStatDialogStatIncreaseHotKeyX = TriggerCreate("gt_TrStatDialogStatIncreaseHotKeyX_Func");
    TriggerAddEventKeyPressed(gt_TrStatDialogStatIncreaseHotKeyX, c_playerAny, c_keyX, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ??????(????????? C)
//--------------------------------------------------------------------------------------------------
bool gt_TrStatDialogStatIncreaseHotKeyC_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int i;
    // Conditions
    if (testConds) {
        if (!(gf_HotkeyStatIncreaseTestConditions())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (i = 2; i < 30; i += 6) {
        if (!(gv_StatusWindowPageSwitch[EventPlayer()] == gf_ShopWindowByIndex(i))) {
            continue;
        }
        if (gf_EligibleForBuyingHotkey(i)) {
            gv_StatusWindowAddDelay[EventPlayer()] = true;
            gv_ShopItemParameters[i].increase_function();
            break;
        } else {
            return false;
        }
    }

    gf_HrStatTooltip1();
    Wait(0.1, c_timeReal);
    gv_StatusWindowAddDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrStatDialogStatIncreaseHotKeyC_Init () {
    gt_TrStatDialogStatIncreaseHotKeyC = TriggerCreate("gt_TrStatDialogStatIncreaseHotKeyC_Func");
    TriggerAddEventKeyPressed(gt_TrStatDialogStatIncreaseHotKeyC, c_playerAny, c_keyC, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ??????(????????? V)
//--------------------------------------------------------------------------------------------------
bool gt_TrStatDialogStatIncreaseHotKeyV_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int i;
    // Conditions
    if (testConds) {
        if (!(gf_HotkeyStatIncreaseTestConditions())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (i = 3; i < 30; i += 6) {
        if (!(gv_StatusWindowPageSwitch[EventPlayer()] == gf_ShopWindowByIndex(i))) {
            continue;
        }
        if (gf_EligibleForBuyingHotkey(i)) {
            gv_StatusWindowAddDelay[EventPlayer()] = true;
            gv_ShopItemParameters[i].increase_function();
            break;
        } else {
            return false;
        }
    }

    gf_HrStatTooltip1();
    Wait(0.1, c_timeReal);
    gv_StatusWindowAddDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrStatDialogStatIncreaseHotKeyV_Init () {
    gt_TrStatDialogStatIncreaseHotKeyV = TriggerCreate("gt_TrStatDialogStatIncreaseHotKeyV_Func");
    TriggerAddEventKeyPressed(gt_TrStatDialogStatIncreaseHotKeyV, c_playerAny, c_keyV, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ??????(????????? B)
//--------------------------------------------------------------------------------------------------
bool gt_TrStatDialogStatIncreaseHotKeyB_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int i;
    // Conditions
    if (testConds) {
        if (!(gf_HotkeyStatIncreaseTestConditions())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (i = 4; i < 30; i += 6) {
        if (!(gv_StatusWindowPageSwitch[EventPlayer()] == gf_ShopWindowByIndex(i))) {
            continue;
        }
        if (gf_EligibleForBuyingHotkey(i)) {
            gv_StatusWindowAddDelay[EventPlayer()] = true;
            gv_ShopItemParameters[i].increase_function();
            break;
        } else {
            return false;
        }
    }

    gf_HrStatTooltip1();
    Wait(0.1, c_timeReal);
    gv_StatusWindowAddDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrStatDialogStatIncreaseHotKeyB_Init () {
    gt_TrStatDialogStatIncreaseHotKeyB = TriggerCreate("gt_TrStatDialogStatIncreaseHotKeyB_Func");
    TriggerAddEventKeyPressed(gt_TrStatDialogStatIncreaseHotKeyB, c_playerAny, c_keyB, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ??????(????????? N)
//--------------------------------------------------------------------------------------------------
bool gt_TrStatDialogStatIncreaseHotKeyN_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int i;
    // Conditions
    if (testConds) {
        if (!(gf_HotkeyStatIncreaseTestConditions())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (i = 5; i < 30; i += 6) {
        if (!(gv_StatusWindowPageSwitch[EventPlayer()] == gf_ShopWindowByIndex(i))) {
            continue;
        }
        if (gf_EligibleForBuyingHotkey(i)) {
            gv_StatusWindowAddDelay[EventPlayer()] = true;
            gv_ShopItemParameters[i].increase_function();
            break;
        } else {
            return false;
        }
    }

    gf_HrStatTooltip1();
    Wait(0.1, c_timeReal);
    gv_StatusWindowAddDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrStatDialogStatIncreaseHotKeyN_Init () {
    gt_TrStatDialogStatIncreaseHotKeyN = TriggerCreate("gt_TrStatDialogStatIncreaseHotKeyN_Func");
    TriggerAddEventKeyPressed(gt_TrStatDialogStatIncreaseHotKeyN, c_playerAny, c_keyN, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrHealingPosionUseComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_StatusWindowNum[EventPlayer()][24] = 0;
    DialogControlSetEnabled(gv_StatusWindowBtn[24], PlayerGroupSingle(EventPlayer()), true);
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][24], (StringExternal("Param/Value/96D19A96") + IntToText(gv_StatusWindowNum[EventPlayer()][24]) + StringExternal("Param/Value/458E87A8")), PlayerGroupSingle(EventPlayer()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHealingPosionUseComplete_Init () {
    gt_TrHealingPosionUseComplete = TriggerCreate("gt_TrHealingPosionUseComplete_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrHealingPosionUseComplete, c_playerAny, "HeroOkGi2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrManaPosionUseComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_StatusWindowNum[EventPlayer()][25] = 0;
    DialogControlSetEnabled(gv_StatusWindowBtn[25], PlayerGroupSingle(EventPlayer()), true);
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][25], (StringExternal("Param/Value/696A9ED7") + IntToText(gv_StatusWindowNum[EventPlayer()][25]) + StringExternal("Param/Value/104CC61A")), PlayerGroupSingle(EventPlayer()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrManaPosionUseComplete_Init () {
    gt_TrManaPosionUseComplete = TriggerCreate("gt_TrManaPosionUseComplete_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrManaPosionUseComplete, c_playerAny, "HeroOkGi22");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????????
//--------------------------------------------------------------------------------------------------
bool gt_TrWardUseComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_StatusWindowNum[EventPlayer()][26] = 0;
    DialogControlSetEnabled(gv_StatusWindowBtn[26], PlayerGroupSingle(EventPlayer()), true);
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][26], (StringExternal("Param/Value/D68A9FC5") + IntToText(gv_StatusWindowNum[EventPlayer()][26]) + StringExternal("Param/Value/C65A8CFA")), PlayerGroupSingle(EventPlayer()));
    gf_HrStatTooltip1();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrWardUseComplete_Init () {
    gt_TrWardUseComplete = TriggerCreate("gt_TrWardUseComplete_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrWardUseComplete, c_playerAny, "HeroOkGi224");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????????
//--------------------------------------------------------------------------------------------------
bool gt_TrWardUseComplete2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_StatusWindowNum[EventPlayer()][27] = 0;
    DialogControlSetEnabled(gv_StatusWindowBtn[27], PlayerGroupSingle(EventPlayer()), true);
    libNtve_gf_SetDialogItemText(gv_StatusWindowLabel[EventPlayer()][27], (StringExternal("Param/Value/7D0E738D") + IntToText(gv_StatusWindowNum[EventPlayer()][27]) + StringExternal("Param/Value/417CE63D")), PlayerGroupSingle(EventPlayer()));
    gf_HrStatTooltip1();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrWardUseComplete2_Init () {
    gt_TrWardUseComplete2 = TriggerCreate("gt_TrWardUseComplete2_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrWardUseComplete2, c_playerAny, "HeroOkGi223");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ????????????
//--------------------------------------------------------------------------------------------------
bool gt_TrUnitBoodeSet_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_HeroDeathBoolean[EventPlayer()] == false))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitTarget)) == "Hero15Skill2Unit")) {
        gf_HrHeroBSpawnH1();
    }
    else {
        if ((UnitGetType(EventPlayerEffectUsedUnit(c_effectUnitTarget)) == "Hero61Skill4Unit")) {
            gf_HrHeroBSpawnH2();
        }

    }
    gf_HrAssistSystemAdd2();
    UnitControlGroupAddUnit(EventPlayer(), 2, EventPlayerEffectUsedUnit(c_effectUnitTarget));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrUnitBoodeSet_Init () {
    gt_TrUnitBoodeSet = TriggerCreate("gt_TrUnitBoodeSet_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrUnitBoodeSet, c_playerAny, "NexusExplo22");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrTextTailUseCritical_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TextTagCreate((StringExternal("Param/Value/AF6676A5") + TextWithColor(StringExternal("Param/Value/9D3771A1"), Color(100.00, 0.00, 0.00)) + StringExternal("Param/Value/0B0E0FAE")), 35, UnitGetPosition(EventPlayerEffectUsedUnit(c_effectUnitTarget)), (UnitGetHeight(EventPlayerEffectUsedUnit(c_effectUnitTarget)) + 1.0), true, false, PlayerGroupAll());
    TextTagAttachToUnit(TextTagLastCreated(), EventPlayerEffectUsedUnit(c_effectUnitTarget), 2.25);
    TextTagSetVelocity(TextTagLastCreated(), 0.8, 90.0);
    TextTagFogofWar(TextTagLastCreated(), true);
    TextTagSetFogVisibility(TextTagLastCreated(), c_visTypeFog);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTextTailUseCritical_Init () {
    gt_TrTextTailUseCritical = TriggerCreate("gt_TrTextTailUseCritical_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrTextTailUseCritical, c_playerAny, "CritcalM");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrTextTailUseHyepi_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_HeroDeathBoolean[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TextTagCreate((StringExternal("Param/Value/7901A076") + TextWithColor(StringExternal("Param/Value/F9C1B0B8"), Color(50.20, 91.37, 100.00)) + StringExternal("Param/Value/7F984D5D")), 35, UnitGetPosition(gv_PlayerHero[EventPlayer()]), (UnitGetHeight(gv_PlayerHero[EventPlayer()]) + 1.0), true, false, PlayerGroupAll());
    TextTagAttachToUnit(TextTagLastCreated(), gv_PlayerHero[EventPlayer()], 1.5);
    TextTagSetVelocity(TextTagLastCreated(), 0.8, 90.0);
    TextTagFogofWar(TextTagLastCreated(), true);
    TextTagSetFogVisibility(TextTagLastCreated(), c_visTypeFog);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTextTailUseHyepi_Init () {
    gt_TrTextTailUseHyepi = TriggerCreate("gt_TrTextTailUseHyepi_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrTextTailUseHyepi, c_playerAny, "ApplyIncapBehavior24");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ???????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSpellTeleportUse_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraPan(EventPlayer(), UnitGetPosition(gv_PlayerHero[EventPlayer()]), 0.0, -1, 10, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSpellTeleportUse_Init () {
    gt_TrSpellTeleportUse = TriggerCreate("gt_TrSpellTeleportUse_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrSpellTeleportUse, c_playerAny, "TeleportGi22");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? - ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrPortalUse_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
        UnitSetPosition(gv_PlayerHero[EventPlayer()], PointFromId(194), false);
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
            UnitSetPosition(gv_PlayerHero[EventPlayer()], PointFromId(195), false);
        }

    }
    Wait(0.5, c_timeReal);
    CameraPan(EventPlayer(), UnitGetPosition(gv_PlayerHero[EventPlayer()]), 0.0, -1, 10, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrPortalUse_Init () {
    gt_TrPortalUse = TriggerCreate("gt_TrPortalUse_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrPortalUse, c_playerAny, "HeroOkGi32");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ??????????????? ????????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMissileOutDestroy_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMissileOutDestroy_Init () {
    gt_TrMissileOutDestroy = TriggerCreate("gt_TrMissileOutDestroy_Func");
    TriggerAddEventUnitRegion(gt_TrMissileOutDestroy, null, RegionFromId(1), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ???????????? R?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrTextTailUseHero5Skill4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto6337BFF8_n = 5;
    int auto6337BFF8_i;

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_HeroDeathBoolean[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto6337BFF8_i = 1; auto6337BFF8_i <= auto6337BFF8_n; auto6337BFF8_i += 1) {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
            TextTagCreate((StringExternal("Param/Value/19DBA674") + TextWithColor(StringExternal("Param/Value/1F313057"), Color(100.00, 45.88, 25.10)) + StringExternal("Param/Value/5230DC5C")), 35, UnitGetPosition(gv_PlayerHero[EventPlayer()]), (UnitGetHeight(gv_PlayerHero[EventPlayer()]) + 1.0), true, false, GameAttributePlayersForTeam(1));
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
                TextTagCreate((StringExternal("Param/Value/2471788A") + TextWithColor(StringExternal("Param/Value/80DE3240"), Color(100.00, 45.88, 25.10)) + StringExternal("Param/Value/D3375B17")), 35, UnitGetPosition(gv_PlayerHero[EventPlayer()]), (UnitGetHeight(gv_PlayerHero[EventPlayer()]) + 1.0), true, false, GameAttributePlayersForTeam(2));
            }

        }
        TextTagAttachToUnit(TextTagLastCreated(), gv_PlayerHero[EventPlayer()], 2.5);
        TextTagSetVelocity(TextTagLastCreated(), 0.6, 90.0);
        TextTagFogofWar(TextTagLastCreated(), true);
        TextTagSetFogVisibility(TextTagLastCreated(), c_visTypeFog);
        TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, 3.0);
        Wait(0.75, c_timeReal);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTextTailUseHero5Skill4_Init () {
    gt_TrTextTailUseHero5Skill4 = TriggerCreate("gt_TrTextTailUseHero5Skill4_Func");
    TriggerEnable(gt_TrTextTailUseHero5Skill4, false);
    TriggerAddEventPlayerEffectUsed(gt_TrTextTailUseHero5Skill4, c_playerAny, "HeroOkGi343");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ???????????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrTextTailUseHero9AttackImpact_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TextTagCreate((StringExternal("Param/Value/F05FCD70") + TextWithColor(StringExternal("Param/Value/DE54CFF6"), Color(100.00, 0.00, 50.20)) + StringExternal("Param/Value/1BC1340C")), 35, UnitGetPosition(EventPlayerEffectUsedUnit(c_effectUnitTarget)), (UnitGetHeight(EventPlayerEffectUsedUnit(c_effectUnitTarget)) + 1.0), true, false, PlayerGroupAll());
    TextTagAttachToUnit(TextTagLastCreated(), EventPlayerEffectUsedUnit(c_effectUnitTarget), 3.0);
    TextTagSetVelocity(TextTagLastCreated(), 0.8, 90.0);
    TextTagFogofWar(TextTagLastCreated(), true);
    TextTagSetFogVisibility(TextTagLastCreated(), c_visTypeFog);
    TextTagSetTime(TextTagLastCreated(), c_textTagTimeDuration, 1.5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrTextTailUseHero9AttackImpact_Init () {
    gt_TrTextTailUseHero9AttackImpact = TriggerCreate("gt_TrTextTailUseHero9AttackImpact_Func");
    TriggerEnable(gt_TrTextTailUseHero9AttackImpact, false);
    TriggerAddEventPlayerEffectUsed(gt_TrTextTailUseHero9AttackImpact, c_playerAny, "Hero9PassiveG2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? R?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero10Skill4On_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_SkillRLevel[EventPlayer()] == 1)) {
        gv_SkillDPSave[EventPlayer()] = 5;
        gv_SkillRPSave[EventPlayer()] = 5;
    }
    else {
        if ((gv_SkillRLevel[EventPlayer()] == 2)) {
            gv_SkillDPSave[EventPlayer()] = 8;
            gv_SkillRPSave[EventPlayer()] = 8;
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 3)) {
                gv_SkillDPSave[EventPlayer()] = 11;
                gv_SkillRPSave[EventPlayer()] = 11;
            }

        }
    }
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", gv_SkillDPSave[EventPlayer()]);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222342", gv_SkillRPSave[EventPlayer()]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero10Skill4On_Init () {
    gt_TrHero10Skill4On = TriggerCreate("gt_TrHero10Skill4On_Func");
    TriggerEnable(gt_TrHero10Skill4On, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero10Skill4On, c_playerAny, "ApplyIncapBehavior2222222225432");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? R?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero10Skill4Off_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp222233322234", (TechTreeUpgradeCount(EventPlayer(), "SpellUp222233322234", c_techCountCompleteOnly) - gv_SkillDPSave[EventPlayer()]));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp2222333222342", (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333222342", c_techCountCompleteOnly) - gv_SkillRPSave[EventPlayer()]));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero10Skill4Off_Init () {
    gt_TrHero10Skill4Off = TriggerCreate("gt_TrHero10Skill4Off_Func");
    TriggerEnable(gt_TrHero10Skill4Off, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero10Skill4Off, c_playerAny, "HeroOkGi2352223");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? Q?????? ????????????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero15Skill4Use_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333662", c_techCountCompleteOnly) < 100))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333662", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero15Skill4Use_Init () {
    gt_TrHero15Skill4Use = TriggerCreate("gt_TrHero15Skill4Use_Func");
    TriggerEnable(gt_TrHero15Skill4Use, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero15Skill4Use, c_playerAny, "Hero15Skill1G2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ???????????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero19Death_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerCreateEffectUnit(EventPlayer(), "Hero19PassiveDeath", gv_PlayerHero[EventPlayer()]);
    TriggerExecute(gt_TrHeroReviveStand, true, true);
    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (PlayerStatus(EventPlayer()) == c_playerStatusActive)) {
        UnitSetPosition(gv_PlayerHero[EventPlayer()], PointFromId(194), false);
        UnitRevive(gv_PlayerHero[EventPlayer()]);
        libNtve_gf_MakeUnitInvulnerable(gv_PlayerHero[EventPlayer()], false);
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (PlayerStatus(EventPlayer()) == c_playerStatusActive)) {
            UnitSetPosition(gv_PlayerHero[EventPlayer()], PointFromId(195), false);
            UnitRevive(gv_PlayerHero[EventPlayer()]);
            libNtve_gf_MakeUnitInvulnerable(gv_PlayerHero[EventPlayer()], false);
        }

    }
    UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLifePercent, 100.0);
    UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergyPercent, 100.0);
    Wait(0.1, c_timeReal);
    if ((PlayerStatus(EventPlayer()) == c_playerStatusActive) && (gv_GameEndBoolean == false)) {
        DialogSetVisible(gv_HeroReviveWindow, PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetVisible(gv_HeroReviveWindowTime[EventPlayer()], PlayerGroupSingle(EventPlayer()), false);
        PlayerCreateEffectUnit(EventPlayer(), "ApplyIncapBehavior23", gv_PlayerHero[EventPlayer()]);
        CameraPan(EventPlayer(), UnitGetPosition(gv_PlayerHero[EventPlayer()]), 0.0, -1, 10, false);
        Wait(0.1, c_timeReal);
        UnitClearSelection(EventPlayer());
        UnitSelect(gv_PlayerHero[EventPlayer()], EventPlayer(), true);
        libNtve_gf_SetDialogItemText(gv_ScoreDialogName[EventPlayer()], (StringExternal("Param/Value/6810EC64") + PlayerName(EventPlayer()) + StringExternal("Param/Value/B1C60838")), PlayerGroupAll());
        libNtve_gf_SetDialogItemColor(gv_ScoreDialogHeroImage[EventPlayer()], Color(100,100,100), PlayerGroupAll());
        DialogControlFadeTransparency(gv_ScoreDialogHeroImage[EventPlayer()], PlayerGroupAll(), 0.0, 0.0);
        DialogControlSetVisible(gv_ScoreDialogReviveTime[EventPlayer()], PlayerGroupAll(), false);
        gv_HeroDeathBoolean[EventPlayer()] = false;
        gv_HeroKillPlayer[EventPlayer()] = 0;
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_HeroAllKill[0] == true)) {
            gv_HeroAllKill[0] = false;
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_HeroAllKill[1] == true)) {
                gv_HeroAllKill[1] = false;
            }

        }
        gf_HrHeroPassiveRepair();
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero19Death_Init () {
    gt_TrHero19Death = TriggerCreate("gt_TrHero19Death_Func");
    TriggerEnable(gt_TrHero19Death, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero19Death, c_playerAny, "Hero19PassiveG");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ???????????? R?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSingleCheetRPdown2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_HeroDeathBoolean[EventPlayer()] == false))) {
            return false;
        }

        if (!((gv_SelectedCharNum[EventPlayer()] == 36))) {
            return false;
        }

        if (!((gv_SkillRLevel[EventPlayer()] >= 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero36Skill42", gv_PlayerHero[EventPlayer()], 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSingleCheetRPdown2_Init () {
    gt_TrSingleCheetRPdown2 = TriggerCreate("gt_TrSingleCheetRPdown2_Func");
    TriggerEnable(gt_TrSingleCheetRPdown2, false);
    TriggerAddEventPlayerEffectUsed(gt_TrSingleCheetRPdown2, c_playerAny, "Hero36Skill4G3");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? W?????? ?????? ?????? ????????????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero32Skill2Up_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((TechTreeUpgradeCount(EventPlayer(), "SpellUp22223339224222", c_techCountCompleteOnly) < 60))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333922422", c_techCountCompleteOnly) < 100)) {
        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333922422", 4);
    }
    else {
        if ((TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333922422", c_techCountCompleteOnly) == 100) && (TechTreeUpgradeCount(EventPlayer(), "SpellUp22223339224222", c_techCountCompleteOnly) < 60)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223339224222", 4);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero32Skill2Up_Init () {
    gt_TrHero32Skill2Up = TriggerCreate("gt_TrHero32Skill2Up_Func");
    TriggerEnable(gt_TrHero32Skill2Up, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero32Skill2Up, c_playerAny, "Hero32Skill2G22");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? R?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero32Skill4On_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_SkillRLevel[EventPlayer()] == 1)) {
        gv_SkillDPSave[EventPlayer()] = 10;
        gv_SkillRPSave[EventPlayer()] = 10;
    }
    else {
        if ((gv_SkillRLevel[EventPlayer()] == 2)) {
            gv_SkillDPSave[EventPlayer()] = 17;
            gv_SkillRPSave[EventPlayer()] = 17;
        }
        else {
            if ((gv_SkillRLevel[EventPlayer()] == 3)) {
                gv_SkillDPSave[EventPlayer()] = 24;
                gv_SkillRPSave[EventPlayer()] = 24;
            }

        }
    }
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", gv_SkillDPSave[EventPlayer()]);
    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333222342", gv_SkillRPSave[EventPlayer()]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero32Skill4On_Init () {
    gt_TrHero32Skill4On = TriggerCreate("gt_TrHero32Skill4On_Func");
    TriggerEnable(gt_TrHero32Skill4On, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero32Skill4On, c_playerAny, "Hero32Skill4Dong2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? R?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero32Skill4Off_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp222233322234", (TechTreeUpgradeCount(EventPlayer(), "SpellUp222233322234", c_techCountCompleteOnly) - gv_SkillDPSave[EventPlayer()]));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp2222333222342", (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333222342", c_techCountCompleteOnly) - gv_SkillRPSave[EventPlayer()]));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero32Skill4Off_Init () {
    gt_TrHero32Skill4Off = TriggerCreate("gt_TrHero32Skill4Off_Func");
    TriggerEnable(gt_TrHero32Skill4Off, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero32Skill4Off, c_playerAny, "Hero32Skill4exit");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? R?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero39Skill4On_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_Hero39Skill4Save == 0)) {
        CinematicFade(false, 0.25, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    }

    gv_Hero39Skill4Save += 1;
    Wait(0.25, c_timeReal);
    if ((gv_Hero39Skill4Save == 1)) {
        CinematicFade(true, 0.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 100.0, false);
    }

    gv_Hero39Skill4Save -= 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero39Skill4On_Init () {
    gt_TrHero39Skill4On = TriggerCreate("gt_TrHero39Skill4On_Func");
    TriggerEnable(gt_TrHero39Skill4On, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero39Skill4On, c_playerAny, "Hero39Skill4G");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ???????????? Q?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero59Skill1Use_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_eC84A4ECA095ECB69CECB298EBB0A9ED96A5;
    point lv_eC84A4ECA095ECB69CECB298ECA780ECA090;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095ECB69CECB298EBB0A9ED96A5 = UnitGetFacing(EventUnitDamageSourceUnit());

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventUnitDamageSourcePlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((UnitGetType(EventUnitDamageSourceUnit()) == "Hero59"))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_eC84A4ECA095ECB69CECB298ECA780ECA090 = UnitGetPosition(EventUnitDamageSourceUnit());
    if ((lv_eC84A4ECA095ECB69CECB298EBB0A9ED96A5 > 180.0)) {
        lv_eC84A4ECA095ECB69CECB298EBB0A9ED96A5 -= 180.0;
    }
    else {
        lv_eC84A4ECA095ECB69CECB298EBB0A9ED96A5 += 180.0;
    }
    if ((UnitIsAlive(EventUnitDamageSourceUnit()) == true)) {
        UnitSetPosition(EventUnitDamageSourceUnit(), libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnitDamageSourceUnit()), 1.0, UnitGetPosition(EventUnit())), false);
    }

    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(lv_eC84A4ECA095ECB69CECB298ECA780ECA090, 2.0, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(lv_eC84A4ECA095ECB69CECB298ECA780ECA090, 1.5, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(lv_eC84A4ECA095ECB69CECB298ECA780ECA090, 1.0, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(lv_eC84A4ECA095ECB69CECB298ECA780ECA090, 0.5, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), lv_eC84A4ECA095ECB69CECB298ECA780ECA090, false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnitDamageSourceUnit()), 1.5, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnitDamageSourceUnit()), 2.0, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnitDamageSourceUnit()), 2.5, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnitDamageSourceUnit()), 3.0, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnitDamageSourceUnit()), 3.5, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitSetPosition(EventUnit(), libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnitDamageSourceUnit()), 4.0, UnitGetPosition(EventUnit())), false);
    }

    Wait(0.04, c_timeGame);
    if ((UnitIsAlive(EventUnit()) == true)) {
        UnitCreateEffectPoint(EventUnit(), "Hero59Skill1Tele", libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnitDamageSourceUnit()), 4.5, UnitGetPosition(EventUnit())));
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero59Skill1Use_Init () {
    gt_TrHero59Skill1Use = TriggerCreate("gt_TrHero59Skill1Use_Func");
    TriggerEnable(gt_TrHero59Skill1Use, false);
    TriggerAddEventUnitDamaged(gt_TrHero59Skill1Use, null, c_unitDamageTypeSplash, c_unitDamageEither, "Hero59Skill1Mo");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? E?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero62Skill3Start_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_TrHero62Skill3On, true);
    gv_Hero62Skill3Save += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero62Skill3Start_Init () {
    gt_TrHero62Skill3Start = TriggerCreate("gt_TrHero62Skill3Start_Func");
    TriggerEnable(gt_TrHero62Skill3Start, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero62Skill3Start, c_playerAny, "Hero62Skill3G");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? E?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero62Skill3On_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Hero62Skill3") == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Hero62"))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnit(), c_unitPropEnergy, (UnitGetPropertyFixed(EventUnit(), c_unitPropEnergy, c_unitPropCurrent) - (EventUnitDamageAmount() / 2.0)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero62Skill3On_Init () {
    gt_TrHero62Skill3On = TriggerCreate("gt_TrHero62Skill3On_Func");
    TriggerEnable(gt_TrHero62Skill3On, false);
    TriggerAddEventUnitDamaged(gt_TrHero62Skill3On, null, c_unitDamageTypeAny, c_unitDamageEither, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? E?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero62Skill3End_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_Hero62Skill3Save < 2))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_TrHero62Skill3On, false);
    gv_Hero62Skill3Save -= 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero62Skill3End_Init () {
    gt_TrHero62Skill3End = TriggerCreate("gt_TrHero62Skill3End_Func");
    TriggerEnable(gt_TrHero62Skill3End, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero62Skill3End, c_playerAny, "Hero62Skill3G2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero66PassiveOn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TechTreeUpgradeCount(EventPlayer(), "SpellUp222233322722322", c_techCountCompleteOnly) == 4)) {
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "DefensePower", gv_PlayerHero[EventPlayer()], 3);
        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322234", 3);
    }
    else {
        if ((TechTreeUpgradeCount(EventPlayer(), "SpellUp222233322722322", c_techCountCompleteOnly) == 8)) {
            TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333227223222", 1);
        }
        else {
            if ((TechTreeUpgradeCount(EventPlayer(), "SpellUp222233322722322", c_techCountCompleteOnly) == 12)) {
                TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp22223332272232222", 1);
            }
            else {
                if ((TechTreeUpgradeCount(EventPlayer(), "SpellUp222233322722322", c_techCountCompleteOnly) == 16)) {
                    TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp222233322722322222", 1);
                }
                else {
                    if ((TechTreeUpgradeCount(EventPlayer(), "SpellUp222233322722322", c_techCountCompleteOnly) == 24) && (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333227223222222", c_techCountCompleteOnly) == 0)) {
                        TechTreeUpgradeAddLevel(EventPlayer(), "SpellUp2222333227223222222", 1);
                    }

                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero66PassiveOn_Init () {
    gt_TrHero66PassiveOn = TriggerCreate("gt_TrHero66PassiveOn_Func");
    TriggerEnable(gt_TrHero66PassiveOn, false);
    TriggerAddEventPlayerEffectUsed(gt_TrHero66PassiveOn, c_playerAny, "Hero66Passive");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHero66PassiveOn2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPosition(EventUnit(), UnitGetPosition(EventUnitDamageSourceUnit()), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHero66PassiveOn2_Init () {
    gt_TrHero66PassiveOn2 = TriggerCreate("gt_TrHero66PassiveOn2_Func");
    TriggerEnable(gt_TrHero66PassiveOn2, false);
    TriggerAddEventUnitDamaged(gt_TrHero66PassiveOn2, null, c_unitDamageTypeSplash, c_unitDamageEither, "Hero72Skill4MD");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ??????/??????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrScoreDialogBtnOpen_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;

    // Automatic Variable Declarations
    const int auto25DFB6EB_ae = 8;
    const int auto25DFB6EB_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((EventDialogControl() == gv_ScoreDialogAddBtn[0]))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((DialogIsVisible(gv_ScoreDialog[0], EventPlayer()) == true)) {
        DialogSetVisible(gv_ScoreDialog[0], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetPosition(gv_ScoreDialogAddBtn[0], PlayerGroupSingle(EventPlayer()), c_anchorCenter, 100, -235);
        libNtve_gf_SetDialogItemText(gv_ScoreDialogAddBtn[0], StringExternal("Param/Value/1C2A4CD4"), PlayerGroupSingle(EventPlayer()));
        DialogControlSetPosition(gv_ScoreDialogAddBtn[1], PlayerGroupSingle(EventPlayer()), c_anchorCenter, -75, -235);
    }
    else {
        if ((DialogIsVisible(gv_ScoreDialog[0], EventPlayer()) == false)) {
            DialogSetVisible(gv_ScoreDialog[0], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetPosition(gv_ScoreDialogAddBtn[0], PlayerGroupSingle(EventPlayer()), c_anchorCenter, 100, 235);
            libNtve_gf_SetDialogItemText(gv_ScoreDialogAddBtn[0], StringExternal("Param/Value/FC01C398"), PlayerGroupSingle(EventPlayer()));
            DialogControlSetPosition(gv_ScoreDialogAddBtn[1], PlayerGroupSingle(EventPlayer()), c_anchorCenter, -75, 235);
            lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
            for ( ; ( (auto25DFB6EB_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto25DFB6EB_ae) || (auto25DFB6EB_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto25DFB6EB_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto25DFB6EB_ai ) {
                if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerStatusActive)) {
                    libNtve_gf_SetDialogItemText(gv_ScoreDialogFarming[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], (StringExternal("Param/Value/2083DE81") + IntToText(libNtve_gf_UnitGetPropertyKills(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], c_unitPropCurrent)) + StringExternal("Param/Value/6003B0CC")), PlayerGroupAll());
                }

            }
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrScoreDialogBtnOpen_Init () {
    gt_TrScoreDialogBtnOpen = TriggerCreate("gt_TrScoreDialogBtnOpen_Func");
    TriggerAddEventDialogControl(gt_TrScoreDialogBtnOpen, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ??????/??????(?????????)
//--------------------------------------------------------------------------------------------------
bool gt_TrScoreDialogHotKeyOpen_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898;

    // Automatic Variable Declarations
    const int auto52CE2790_ae = 8;
    const int auto52CE2790_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((DialogIsVisible(gv_ScoreDialog[0], EventPlayer()) == true)) {
        DialogSetVisible(gv_ScoreDialog[0], PlayerGroupSingle(EventPlayer()), false);
        DialogControlSetPosition(gv_ScoreDialogAddBtn[0], PlayerGroupSingle(EventPlayer()), c_anchorCenter, 100, -235);
        libNtve_gf_SetDialogItemText(gv_ScoreDialogAddBtn[0], StringExternal("Param/Value/33E8ED99"), PlayerGroupSingle(EventPlayer()));
        DialogControlSetPosition(gv_ScoreDialogAddBtn[1], PlayerGroupSingle(EventPlayer()), c_anchorCenter, -75, -235);
    }
    else {
        if ((DialogIsVisible(gv_ScoreDialog[0], EventPlayer()) == false)) {
            DialogSetVisible(gv_ScoreDialog[0], PlayerGroupSingle(EventPlayer()), true);
            DialogControlSetPosition(gv_ScoreDialogAddBtn[0], PlayerGroupSingle(EventPlayer()), c_anchorCenter, 100, 235);
            libNtve_gf_SetDialogItemText(gv_ScoreDialogAddBtn[0], StringExternal("Param/Value/2755242E"), PlayerGroupSingle(EventPlayer()));
            DialogControlSetPosition(gv_ScoreDialogAddBtn[1], PlayerGroupSingle(EventPlayer()), c_anchorCenter, -75, 235);
            lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 = 1;
            for ( ; ( (auto52CE2790_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 <= auto52CE2790_ae) || (auto52CE2790_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 >= auto52CE2790_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898 += auto52CE2790_ai ) {
                if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]) == c_playerStatusActive)) {
                    libNtve_gf_SetDialogItemText(gv_ScoreDialogFarming[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], (StringExternal("Param/Value/85719550") + IntToText(libNtve_gf_UnitGetPropertyKills(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC8898]], c_unitPropCurrent)) + StringExternal("Param/Value/6B8CCC58")), PlayerGroupAll());
                }

            }
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrScoreDialogHotKeyOpen_Init () {
    gt_TrScoreDialogHotKeyOpen = TriggerCreate("gt_TrScoreDialogHotKeyOpen_Func");
    TriggerAddEventKeyPressed(gt_TrScoreDialogHotKeyOpen, c_playerAny, c_keyTab, true, c_keyModifierStateExclude, c_keyModifierStateExclude, c_keyModifierStateExclude);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ???????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMinionNotStop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventPlayer() == 12) || (EventPlayer() == 13)))) {
            return false;
        }

        if (!(((UnitGetType(EventUnit()) == "PreserverA") || (UnitGetType(EventUnit()) == "PreserverB") || (UnitGetType(EventUnit()) == "HighTemplar") || (UnitGetType(EventUnit()) == "HighTemplar2team") || (UnitGetType(EventUnit()) == "Sentry") || (UnitGetType(EventUnit()) == "Sentry2team") || (UnitGetType(EventUnit()) == "Immortal") || (UnitGetType(EventUnit()) == "Immortal2team")))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayer() == 12)) {
        UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(266)), c_orderQueueReplace);
    }
    else {
        if ((EventPlayer() == 13)) {
            UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(293)), c_orderQueueReplace);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMinionNotStop_Init () {
    gt_TrMinionNotStop = TriggerCreate("gt_TrMinionNotStop_Func");
    TriggerAddEventUnitDamaged(gt_TrMinionNotStop, null, c_unitDamageTypeAny, c_unitDamageEither, "NoMung");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????1
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterMake1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitGroupCount(gv_MonsterBirdGroup[0], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit6", c_unitCreateIgnorePlacement, 11, PointFromId(554), 270.0);
        UnitGroupAdd(gv_MonsterBirdGroup[0], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(554), 270.0);
        gv_MonsterBirdPing1[0] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterBirdGroup[1], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit6", c_unitCreateIgnorePlacement, 11, PointFromId(555), 90.0);
        UnitGroupAdd(gv_MonsterBirdGroup[1], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(555), 270.0);
        gv_MonsterBirdPing1[1] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterDogGroup[0], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(560), 250.0);
        UnitGroupAdd(gv_MonsterDogGroup[0], UnitLastCreated());
        UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(561), 260.0);
        UnitGroupAdd(gv_MonsterDogGroup[0], UnitLastCreated());
        UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(562), 280.0);
        UnitGroupAdd(gv_MonsterDogGroup[0], UnitLastCreated());
        UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(563), 290.0);
        UnitGroupAdd(gv_MonsterDogGroup[0], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(561), 270.0);
        gv_MonsterDogPing1[0] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterDogGroup[1], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(556), 110.0);
        UnitGroupAdd(gv_MonsterDogGroup[1], UnitLastCreated());
        UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(557), 100.0);
        UnitGroupAdd(gv_MonsterDogGroup[1], UnitLastCreated());
        UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(558), 80.0);
        UnitGroupAdd(gv_MonsterDogGroup[1], UnitLastCreated());
        UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(559), 70.0);
        UnitGroupAdd(gv_MonsterDogGroup[1], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(558), 270.0);
        gv_MonsterDogPing1[1] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterCowGroup[0], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit8", c_unitCreateIgnorePlacement, 11, PointFromId(214), 360.0);
        UnitGroupAdd(gv_MonsterCowGroup[0], UnitLastCreated());
        UnitCreate(1, "Inunit8", c_unitCreateIgnorePlacement, 11, PointFromId(234), 360.0);
        UnitGroupAdd(gv_MonsterCowGroup[0], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(234), 270.0);
        gv_MonsterCowPing1[0] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterCowGroup[1], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit8", c_unitCreateIgnorePlacement, 11, PointFromId(157), 180.0);
        UnitGroupAdd(gv_MonsterCowGroup[1], UnitLastCreated());
        UnitCreate(1, "Inunit8", c_unitCreateIgnorePlacement, 11, PointFromId(158), 180.0);
        UnitGroupAdd(gv_MonsterCowGroup[1], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(157), 270.0);
        gv_MonsterCowPing1[1] = UnitLastCreated();
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterMake1_Init () {
    gt_TrMonsterMake1 = TriggerCreate("gt_TrMonsterMake1_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterMake1, 11, "MonsterMakeTimerFirstMake");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????2
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterMake2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitGroupCount(gv_MonsterIceBugGroup[0], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(570), 315.0);
        UnitGroupAdd(gv_MonsterIceBugGroup[0], UnitLastCreated());
        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(571), 315.0);
        UnitGroupAdd(gv_MonsterIceBugGroup[0], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(570), 270.0);
        gv_MonsterIceBugPing1[0] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterIceBugGroup[1], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(572), 225.0);
        UnitGroupAdd(gv_MonsterIceBugGroup[1], UnitLastCreated());
        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(573), 225.0);
        UnitGroupAdd(gv_MonsterIceBugGroup[1], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(573), 270.0);
        gv_MonsterIceBugPing1[1] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterIceBugGroup[2], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(574), 45.0);
        UnitGroupAdd(gv_MonsterIceBugGroup[2], UnitLastCreated());
        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(575), 45.0);
        UnitGroupAdd(gv_MonsterIceBugGroup[2], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(574), 270.0);
        gv_MonsterIceBugPing1[2] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterIceBugGroup[3], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(576), 135.0);
        UnitGroupAdd(gv_MonsterIceBugGroup[3], UnitLastCreated());
        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(577), 135.0);
        UnitGroupAdd(gv_MonsterIceBugGroup[3], UnitLastCreated());
        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(577), 270.0);
        gv_MonsterIceBugPing1[3] = UnitLastCreated();
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterMake2_Init () {
    gt_TrMonsterMake2 = TriggerCreate("gt_TrMonsterMake2_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterMake2, 11, "MonsterMakeTimerFirstMake2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????3
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterMake3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitGroupCount(gv_MonsterGalicGroup[0], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit", c_unitCreateIgnorePlacement, 11, PointFromId(548), 45.0);
        UnitGroupAdd(gv_MonsterGalicGroup[0], UnitLastCreated());
        UnitCreate(1, "Inunit2", c_unitCreateIgnorePlacement, 11, PointFromId(549), 45.0);
        UnitGroupAdd(gv_MonsterGalicGroup[0], UnitLastCreated());
        UnitCreate(1, "Inunit2", c_unitCreateIgnorePlacement, 11, PointFromId(550), 45.0);
        UnitGroupAdd(gv_MonsterGalicGroup[0], UnitLastCreated());
        UnitCreate(1, "MonsterDumit2", c_unitCreateIgnorePlacement, 11, PointFromId(548), 270.0);
        gv_MonsterGalicPing1[0] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterGalicGroup[1], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit", c_unitCreateIgnorePlacement, 11, PointFromId(551), 225.0);
        UnitGroupAdd(gv_MonsterGalicGroup[1], UnitLastCreated());
        UnitCreate(1, "Inunit2", c_unitCreateIgnorePlacement, 11, PointFromId(552), 225.0);
        UnitGroupAdd(gv_MonsterGalicGroup[1], UnitLastCreated());
        UnitCreate(1, "Inunit2", c_unitCreateIgnorePlacement, 11, PointFromId(553), 225.0);
        UnitGroupAdd(gv_MonsterGalicGroup[1], UnitLastCreated());
        UnitCreate(1, "MonsterDumit2", c_unitCreateIgnorePlacement, 11, PointFromId(551), 270.0);
        gv_MonsterGalicPing1[1] = UnitLastCreated();
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterMake3_Init () {
    gt_TrMonsterMake3 = TriggerCreate("gt_TrMonsterMake3_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterMake3, 11, "MonsterMakeTimerFirstMake22");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????4
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterMake4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitGroupCount(gv_MonsterScolpionGroup[0], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit5", c_unitCreateIgnorePlacement, 11, PointFromId(564), 325.0);
        UnitGroupAdd(gv_MonsterScolpionGroup[0], UnitLastCreated());
        UnitCreate(1, "Inunit4", c_unitCreateIgnorePlacement, 11, PointFromId(565), 325.0);
        UnitGroupAdd(gv_MonsterScolpionGroup[0], UnitLastCreated());
        UnitCreate(1, "Inunit4", c_unitCreateIgnorePlacement, 11, PointFromId(566), 325.0);
        UnitGroupAdd(gv_MonsterScolpionGroup[0], UnitLastCreated());
        UnitCreate(1, "MonsterDumit2", c_unitCreateIgnorePlacement, 11, PointFromId(564), 270.0);
        gv_MonsterScolpionPing1[0] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterScolpionGroup[1], c_unitCountAlive) == 0)) {
        UnitCreate(1, "Inunit5", c_unitCreateIgnorePlacement, 11, PointFromId(567), 145.0);
        UnitGroupAdd(gv_MonsterScolpionGroup[1], UnitLastCreated());
        UnitCreate(1, "Inunit4", c_unitCreateIgnorePlacement, 11, PointFromId(568), 145.0);
        UnitGroupAdd(gv_MonsterScolpionGroup[1], UnitLastCreated());
        UnitCreate(1, "Inunit4", c_unitCreateIgnorePlacement, 11, PointFromId(569), 145.0);
        UnitGroupAdd(gv_MonsterScolpionGroup[1], UnitLastCreated());
        UnitCreate(1, "MonsterDumit2", c_unitCreateIgnorePlacement, 11, PointFromId(567), 270.0);
        gv_MonsterScolpionPing1[1] = UnitLastCreated();
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterMake4_Init () {
    gt_TrMonsterMake4 = TriggerCreate("gt_TrMonsterMake4_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterMake4, 11, "MonsterMakeTimerFirstMake222");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterMake5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((UnitGroupCount(gv_MonsterBossGroup[0], c_unitCountAlive) == 0)) {
        UnitCreate(1, "SporeCrawler", c_unitCreateIgnorePlacement, 11, PointFromId(578), 270.0);
        UnitGroupAdd(gv_MonsterBossGroup[0], UnitLastCreated());
        UnitCreate(1, "MonsterDumit3", c_unitCreateIgnorePlacement, 11, PointFromId(578), 270.0);
        gv_MonsterIceBossPing1[0] = UnitLastCreated();
    }

    if ((UnitGroupCount(gv_MonsterBossGroup[1], c_unitCountAlive) == 0)) {
        UnitCreate(1, "SpineCrawler", c_unitCreateIgnorePlacement, 11, PointFromId(579), 270.0);
        UnitGroupAdd(gv_MonsterBossGroup[1], UnitLastCreated());
        UnitCreate(1, "MonsterDumit3", c_unitCreateIgnorePlacement, 11, PointFromId(579), 270.0);
        gv_MonsterIceBossPing1[1] = UnitLastCreated();
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterMake5_Init () {
    gt_TrMonsterMake5 = TriggerCreate("gt_TrMonsterMake5_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterMake5, 11, "MonsterMakeTimerFirstMake2222");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBuffPickUp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "Inunit") || (UnitGetType(EventUnit()) == "Inunit5") || (UnitGetType(EventUnit()) == "SpineCrawler") || (UnitGetType(EventUnit()) == "SporeCrawler")))) {
            return false;
        }

        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((PlayerType(libNtve_gf_KillingPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnit()) == "Inunit")) {
        gf_HrMonsterBuffPickUp1();
    }
    else {
        if ((UnitGetType(EventUnit()) == "Inunit5")) {
            gf_HrMonsterBuffPickUp2();
        }
        else {
            if ((UnitGetType(EventUnit()) == "SpineCrawler")) {
                gf_HrMonsterBuffPickUp3();
            }
            else {
                if ((UnitGetType(EventUnit()) == "SporeCrawler")) {
                    gf_HrMonsterBuffPickUp4();
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBuffPickUp_Init () {
    gt_TrMonsterBuffPickUp = TriggerCreate("gt_TrMonsterBuffPickUp_Func");
    TriggerAddEventUnitDied(gt_TrMonsterBuffPickUp, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ?????? ???
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBuffEnd1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_HeroBuffIng[EventPlayer()][0] = 0;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBuffEnd1_Init () {
    gt_TrMonsterBuffEnd1 = TriggerCreate("gt_TrMonsterBuffEnd1_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterBuffEnd1, c_playerAny, "HeroOkGi22232222");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ?????? ???
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBuffEnd2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_HeroBuffIng[EventPlayer()][1] = 0;
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp2222333222332", (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333222332", c_techCountCompleteOnly) - 2));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp2222333222332222", (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333222332222", c_techCountCompleteOnly) - 2));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp2222333222332222222", (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333222332222222", c_techCountCompleteOnly) - 2));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp2222333222332222222222", (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333222332222222222", c_techCountCompleteOnly) - 2));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBuffEnd2_Init () {
    gt_TrMonsterBuffEnd2 = TriggerCreate("gt_TrMonsterBuffEnd2_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterBuffEnd2, c_playerAny, "HeroOkGi2223222");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ?????? ???
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBuffEnd3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerStatus(EventPlayer()) == c_playerStatusActive))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp2222333222322", (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333222322", c_techCountCompleteOnly) - 3));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp222233322232", (TechTreeUpgradeCount(EventPlayer(), "SpellUp222233322232", c_techCountCompleteOnly) - 3));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp2222333222323", (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333222323", c_techCountCompleteOnly) - 3));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp22223332223", (TechTreeUpgradeCount(EventPlayer(), "SpellUp22223332223", c_techCountCompleteOnly) - 3));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp222233322233", (TechTreeUpgradeCount(EventPlayer(), "SpellUp222233322233", c_techCountCompleteOnly) - 3));
    libNtve_gf_SetUpgradeLevelForPlayer(EventPlayer(), "SpellUp2222333222333", (TechTreeUpgradeCount(EventPlayer(), "SpellUp2222333222333", c_techCountCompleteOnly) - 3));
    UnitBehaviorRemove(gv_PlayerHero[EventPlayer()], "SpellDong24", 3);
    UnitBehaviorRemove(gv_PlayerHero[EventPlayer()], "SpellDong24233", 3);
    if ((gv_SelectedCharNum[EventPlayer()] == 71)) {
        UnitBehaviorRemove(gv_PlayerHero[EventPlayer()], "Hero71Passive", 3);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBuffEnd3_Init () {
    gt_TrMonsterBuffEnd3 = TriggerCreate("gt_TrMonsterBuffEnd3_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterBuffEnd3, c_playerAny, "HeroOkGi222322");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackBird1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int auto5392BCE5_ae = 1;
    const int auto5392BCE5_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterBirdGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(107), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterBirdSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterBirdSwitch[0] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (auto5392BCE5_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= auto5392BCE5_ae) || (auto5392BCE5_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= auto5392BCE5_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += auto5392BCE5_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterBirdGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterBirdGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterBirdGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterBirdGroup[0], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterBirdGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(554)), c_orderQueueAddToEnd);
    gv_MonsterBirdSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackBird1_Init () {
    gt_TrMonsterAttackBird1 = TriggerCreate("gt_TrMonsterAttackBird1_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackBird1, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackBird2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int auto6A86B69C_ae = 1;
    const int auto6A86B69C_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterBirdGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(127), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterBirdSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterBirdSwitch[1] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (auto6A86B69C_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= auto6A86B69C_ae) || (auto6A86B69C_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= auto6A86B69C_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += auto6A86B69C_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterBirdGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterBirdGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterBirdGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterBirdGroup[1], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterBirdGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(555)), c_orderQueueAddToEnd);
    gv_MonsterBirdSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackBird2_Init () {
    gt_TrMonsterAttackBird2 = TriggerCreate("gt_TrMonsterAttackBird2_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackBird2, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackBird1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterBirdGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterBirdSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterBirdSwitch[0] = true;
    if ((UnitGroupCount(gv_MonsterBirdGroup[0], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterBirdGroup[0], 1));
        UnitGroupIssueOrder(gv_MonsterBirdGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(554)), c_orderQueueReplace);
    }

    Wait(2.0, c_timeReal);
    gv_MonsterBirdSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackBird1_Init () {
    gt_TrMonsterBackBird1 = TriggerCreate("gt_TrMonsterBackBird1_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackBird1, null, PointFromId(107), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackBird2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterBirdGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterBirdSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterBirdSwitch[1] = true;
    if ((UnitGroupCount(gv_MonsterBirdGroup[1], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterBirdGroup[1], 1));
        UnitGroupIssueOrder(gv_MonsterBirdGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(555)), c_orderQueueReplace);
    }

    Wait(2.0, c_timeReal);
    gv_MonsterBirdSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackBird2_Init () {
    gt_TrMonsterBackBird2 = TriggerCreate("gt_TrMonsterBackBird2_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackBird2, null, PointFromId(127), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackDog1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int auto7BC9AC54_ae = 4;
    const int auto7BC9AC54_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterDogGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(132), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterDogSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterDogSwitch[0] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (auto7BC9AC54_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= auto7BC9AC54_ae) || (auto7BC9AC54_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= auto7BC9AC54_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += auto7BC9AC54_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterDogGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterDogGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterDogGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterDogGroup[0], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterDogGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(561)), c_orderQueueAddToEnd);
    gv_MonsterDogSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackDog1_Init () {
    gt_TrMonsterAttackDog1 = TriggerCreate("gt_TrMonsterAttackDog1_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackDog1, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackDog2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int auto548EEC79_ae = 4;
    const int auto548EEC79_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterDogGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(133), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterDogSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterDogSwitch[1] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (auto548EEC79_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= auto548EEC79_ae) || (auto548EEC79_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= auto548EEC79_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += auto548EEC79_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterDogGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterDogGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterDogGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterDogGroup[1], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterDogGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(558)), c_orderQueueAddToEnd);
    gv_MonsterDogSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackDog2_Init () {
    gt_TrMonsterAttackDog2 = TriggerCreate("gt_TrMonsterAttackDog2_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackDog2, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackDog1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterDogGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterDogSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterDogSwitch[0] = true;
    if ((UnitGroupCount(gv_MonsterDogGroup[0], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 1));
        UnitGroupIssueOrder(gv_MonsterDogGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(560)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterDogGroup[0], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(560)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[0], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(561)), c_orderQueueReplace);
        }
        else {
            if ((UnitGroupCount(gv_MonsterDogGroup[0], c_unitCountAlive) == 3)) {
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 1));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 2));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 3));
                UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(560)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[0], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(561)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[0], 3), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(562)), c_orderQueueReplace);
            }
            else {
                if ((UnitGroupCount(gv_MonsterDogGroup[0], c_unitCountAlive) == 4)) {
                    PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 1));
                    PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 2));
                    PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 3));
                    PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[0], 4));
                    UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(560)), c_orderQueueReplace);
                    UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[0], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(561)), c_orderQueueReplace);
                    UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[0], 3), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(562)), c_orderQueueReplace);
                    UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[0], 4), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(563)), c_orderQueueReplace);
                }

            }
        }
    }
    Wait(2.0, c_timeReal);
    gv_MonsterDogSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackDog1_Init () {
    gt_TrMonsterBackDog1 = TriggerCreate("gt_TrMonsterBackDog1_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackDog1, null, PointFromId(132), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackDog2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterDogGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterDogSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterDogSwitch[1] = true;
    if ((UnitGroupCount(gv_MonsterDogGroup[1], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 1));
        UnitGroupIssueOrder(gv_MonsterDogGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(556)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterDogGroup[1], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(556)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[1], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(557)), c_orderQueueReplace);
        }
        else {
            if ((UnitGroupCount(gv_MonsterDogGroup[1], c_unitCountAlive) == 3)) {
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 1));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 2));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 3));
                UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(556)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[1], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(557)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[1], 3), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(558)), c_orderQueueReplace);
            }
            else {
                if ((UnitGroupCount(gv_MonsterDogGroup[1], c_unitCountAlive) == 4)) {
                    PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 1));
                    PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 2));
                    PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 3));
                    PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterDogGroup[1], 4));
                    UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(556)), c_orderQueueReplace);
                    UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[1], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(557)), c_orderQueueReplace);
                    UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[1], 3), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(558)), c_orderQueueReplace);
                    UnitIssueOrder(UnitGroupUnit(gv_MonsterDogGroup[1], 4), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(559)), c_orderQueueReplace);
                }

            }
        }
    }
    Wait(2.0, c_timeReal);
    gv_MonsterDogSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackDog2_Init () {
    gt_TrMonsterBackDog2 = TriggerCreate("gt_TrMonsterBackDog2_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackDog2, null, PointFromId(133), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackCow1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int autoD02C6489_ae = 2;
    const int autoD02C6489_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterCowGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(98), 7.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterCowSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterCowSwitch[0] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (autoD02C6489_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= autoD02C6489_ae) || (autoD02C6489_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= autoD02C6489_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += autoD02C6489_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterCowGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterCowGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterCowGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterCowGroup[0], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterCowGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(234)), c_orderQueueAddToEnd);
    gv_MonsterCowSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackCow1_Init () {
    gt_TrMonsterAttackCow1 = TriggerCreate("gt_TrMonsterAttackCow1_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackCow1, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackCow2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int autoF4F9856B_ae = 2;
    const int autoF4F9856B_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterCowGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(102), 7.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterCowSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterCowSwitch[1] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (autoF4F9856B_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= autoF4F9856B_ae) || (autoF4F9856B_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= autoF4F9856B_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += autoF4F9856B_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterCowGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterCowGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterCowGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterCowGroup[1], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterCowGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(157)), c_orderQueueAddToEnd);
    gv_MonsterCowSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackCow2_Init () {
    gt_TrMonsterAttackCow2 = TriggerCreate("gt_TrMonsterAttackCow2_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackCow2, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackCow1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterCowGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterCowSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterCowSwitch[0] = true;
    if ((UnitGroupCount(gv_MonsterCowGroup[0], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterCowGroup[0], 1));
        UnitGroupIssueOrder(gv_MonsterCowGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(234)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterCowGroup[0], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterCowGroup[0], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterCowGroup[0], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterCowGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(214)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterCowGroup[0], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(234)), c_orderQueueReplace);
        }

    }
    Wait(2.0, c_timeReal);
    gv_MonsterCowSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackCow1_Init () {
    gt_TrMonsterBackCow1 = TriggerCreate("gt_TrMonsterBackCow1_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackCow1, null, PointFromId(98), 7.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackCow2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterCowGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterCowSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterCowSwitch[1] = true;
    if ((UnitGroupCount(gv_MonsterCowGroup[1], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterCowGroup[1], 1));
        UnitGroupIssueOrder(gv_MonsterCowGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(157)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterCowGroup[1], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterCowGroup[1], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterCowGroup[1], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterCowGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(157)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterCowGroup[1], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(158)), c_orderQueueReplace);
        }

    }
    Wait(2.0, c_timeReal);
    gv_MonsterCowSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackCow2_Init () {
    gt_TrMonsterBackCow2 = TriggerCreate("gt_TrMonsterBackCow2_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackCow2, null, PointFromId(102), 7.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackGalic1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int auto8360D47A_ae = 3;
    const int auto8360D47A_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterGalicGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(134), 7.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterGalicSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterGalicSwitch[0] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (auto8360D47A_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= auto8360D47A_ae) || (auto8360D47A_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= auto8360D47A_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += auto8360D47A_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterGalicGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterGalicGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterGalicGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterGalicGroup[0], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterGalicGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(548)), c_orderQueueAddToEnd);
    gv_MonsterGalicSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackGalic1_Init () {
    gt_TrMonsterAttackGalic1 = TriggerCreate("gt_TrMonsterAttackGalic1_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackGalic1, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackGalic2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int auto60FAD14F_ae = 3;
    const int auto60FAD14F_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterGalicGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(135), 7.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterGalicSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterGalicSwitch[1] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (auto60FAD14F_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= auto60FAD14F_ae) || (auto60FAD14F_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= auto60FAD14F_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += auto60FAD14F_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterGalicGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterGalicGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterGalicGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterGalicGroup[1], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterGalicGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(551)), c_orderQueueAddToEnd);
    gv_MonsterGalicSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackGalic2_Init () {
    gt_TrMonsterAttackGalic2 = TriggerCreate("gt_TrMonsterAttackGalic2_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackGalic2, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackGalic1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterGalicGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterGalicSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterGalicSwitch[0] = true;
    if ((UnitGroupCount(gv_MonsterGalicGroup[0], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[0], 1));
        UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(548)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterGalicGroup[0], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[0], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[0], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(548)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[0], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(549)), c_orderQueueReplace);
        }
        else {
            if ((UnitGroupCount(gv_MonsterGalicGroup[0], c_unitCountAlive) == 3)) {
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[0], 1));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[0], 2));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[0], 3));
                UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(548)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[0], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(549)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[0], 3), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(550)), c_orderQueueReplace);
            }

        }
    }
    Wait(2.0, c_timeReal);
    gv_MonsterGalicSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackGalic1_Init () {
    gt_TrMonsterBackGalic1 = TriggerCreate("gt_TrMonsterBackGalic1_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackGalic1, null, PointFromId(134), 7.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackGalic2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterGalicGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterGalicSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterGalicSwitch[1] = true;
    if ((UnitGroupCount(gv_MonsterGalicGroup[1], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[1], 1));
        UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(551)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterGalicGroup[1], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[1], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[1], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(551)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[1], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(552)), c_orderQueueReplace);
        }
        else {
            if ((UnitGroupCount(gv_MonsterGalicGroup[1], c_unitCountAlive) == 3)) {
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[1], 1));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[1], 2));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterGalicGroup[1], 3));
                UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(551)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[1], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(552)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterGalicGroup[1], 3), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(553)), c_orderQueueReplace);
            }

        }
    }
    Wait(2.0, c_timeReal);
    gv_MonsterGalicSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackGalic2_Init () {
    gt_TrMonsterBackGalic2 = TriggerCreate("gt_TrMonsterBackGalic2_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackGalic2, null, PointFromId(135), 7.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackScolpion1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int autoEC18A498_ae = 3;
    const int autoEC18A498_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterScolpionGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(137), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterScolpionSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterScolpionSwitch[0] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (autoEC18A498_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= autoEC18A498_ae) || (autoEC18A498_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= autoEC18A498_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += autoEC18A498_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterScolpionGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterScolpionGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterScolpionGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterScolpionGroup[0], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterScolpionGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(564)), c_orderQueueAddToEnd);
    gv_MonsterScolpionSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackScolpion1_Init () {
    gt_TrMonsterAttackScolpion1 = TriggerCreate("gt_TrMonsterAttackScolpion1_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackScolpion1, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackScolpion2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int auto44DBE076_ae = 3;
    const int auto44DBE076_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterScolpionGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(138), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterScolpionSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterScolpionSwitch[1] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (auto44DBE076_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= auto44DBE076_ae) || (auto44DBE076_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= auto44DBE076_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += auto44DBE076_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterScolpionGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterScolpionGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterScolpionGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterScolpionGroup[1], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterScolpionGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(567)), c_orderQueueAddToEnd);
    gv_MonsterScolpionSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackScolpion2_Init () {
    gt_TrMonsterAttackScolpion2 = TriggerCreate("gt_TrMonsterAttackScolpion2_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackScolpion2, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackScolpion1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterScolpionGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterScolpionSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterScolpionSwitch[0] = true;
    if ((UnitGroupCount(gv_MonsterScolpionGroup[0], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[0], 1));
        UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(564)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterScolpionGroup[0], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[0], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[0], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(564)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[0], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(565)), c_orderQueueReplace);
        }
        else {
            if ((UnitGroupCount(gv_MonsterScolpionGroup[0], c_unitCountAlive) == 3)) {
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[0], 1));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[0], 2));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[0], 3));
                UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(564)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[0], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(565)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[0], 3), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(566)), c_orderQueueReplace);
            }

        }
    }
    Wait(2.0, c_timeReal);
    gv_MonsterScolpionSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackScolpion1_Init () {
    gt_TrMonsterBackScolpion1 = TriggerCreate("gt_TrMonsterBackScolpion1_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackScolpion1, null, PointFromId(137), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackScolpion2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterScolpionGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterScolpionSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterScolpionSwitch[1] = true;
    if ((UnitGroupCount(gv_MonsterScolpionGroup[1], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[1], 1));
        UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(567)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterScolpionGroup[1], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[1], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[1], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(567)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[1], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(568)), c_orderQueueReplace);
        }
        else {
            if ((UnitGroupCount(gv_MonsterScolpionGroup[1], c_unitCountAlive) == 3)) {
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[1], 1));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[1], 2));
                PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterScolpionGroup[1], 3));
                UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(567)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[1], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(568)), c_orderQueueReplace);
                UnitIssueOrder(UnitGroupUnit(gv_MonsterScolpionGroup[1], 3), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(569)), c_orderQueueReplace);
            }

        }
    }
    Wait(2.0, c_timeReal);
    gv_MonsterScolpionSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackScolpion2_Init () {
    gt_TrMonsterBackScolpion2 = TriggerCreate("gt_TrMonsterBackScolpion2_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackScolpion2, null, PointFromId(138), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(???-???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackIceBug1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int auto5F6E5706_ae = 2;
    const int auto5F6E5706_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterIceBugGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(141), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterIceBugSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBugSwitch[0] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (auto5F6E5706_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= auto5F6E5706_ae) || (auto5F6E5706_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= auto5F6E5706_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += auto5F6E5706_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterIceBugGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterIceBugGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterIceBugGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterIceBugGroup[0], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterIceBugGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(570)), c_orderQueueAddToEnd);
    gv_MonsterIceBugSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackIceBug1_Init () {
    gt_TrMonsterAttackIceBug1 = TriggerCreate("gt_TrMonsterAttackIceBug1_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackIceBug1, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(???-???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackIceBug2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int autoD5DBEE6E_ae = 2;
    const int autoD5DBEE6E_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterIceBugGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(145), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterIceBugSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBugSwitch[1] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (autoD5DBEE6E_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= autoD5DBEE6E_ae) || (autoD5DBEE6E_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= autoD5DBEE6E_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += autoD5DBEE6E_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterIceBugGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterIceBugGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterIceBugGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterIceBugGroup[1], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterIceBugGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(570)), c_orderQueueAddToEnd);
    gv_MonsterIceBugSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackIceBug2_Init () {
    gt_TrMonsterAttackIceBug2 = TriggerCreate("gt_TrMonsterAttackIceBug2_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackIceBug2, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(??????-???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackIceBug3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int auto09B391FF_ae = 2;
    const int auto09B391FF_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterIceBugGroup[2], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(146), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterIceBugSwitch[2] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBugSwitch[2] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (auto09B391FF_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= auto09B391FF_ae) || (auto09B391FF_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= auto09B391FF_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += auto09B391FF_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterIceBugGroup[2], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterIceBugGroup[2], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterIceBugGroup[2], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterIceBugGroup[2], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterIceBugGroup[2], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(570)), c_orderQueueAddToEnd);
    gv_MonsterIceBugSwitch[2] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackIceBug3_Init () {
    gt_TrMonsterAttackIceBug3 = TriggerCreate("gt_TrMonsterAttackIceBug3_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackIceBug3, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(??????-???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackIceBug4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    const int autoBF82A815_ae = 2;
    const int autoBF82A815_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterIceBugGroup[3], EventUnit()) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionCircle(PointFromId(147), 8.0)) == true))) {
            return false;
        }

        if (!((gv_MonsterIceBugSwitch[3] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBugSwitch[3] = true;
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;
    for ( ; ( (autoBF82A815_ai >= 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 <= autoBF82A815_ae) || (autoBF82A815_ai < 0 && lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 >= autoBF82A815_ae) ) ; lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 += autoBF82A815_ai ) {
        if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterIceBugGroup[3], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterIceBugGroup[3], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
            UnitBehaviorRemove(UnitGroupUnit(gv_MonsterIceBugGroup[3], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898), "Notauto", 1);
        }

    }
    UnitGroupIssueOrder(gv_MonsterIceBugGroup[3], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterIceBugGroup[3], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(570)), c_orderQueueAddToEnd);
    gv_MonsterIceBugSwitch[3] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackIceBug4_Init () {
    gt_TrMonsterAttackIceBug4 = TriggerCreate("gt_TrMonsterAttackIceBug4_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackIceBug4, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ???????????????(???-???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackIceBug1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterIceBugGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterIceBugSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBugSwitch[0] = true;
    if ((UnitGroupCount(gv_MonsterIceBugGroup[0], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[0], 1));
        UnitGroupIssueOrder(gv_MonsterIceBugGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(570)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterIceBugGroup[0], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[0], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[0], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterIceBugGroup[0], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(570)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterIceBugGroup[0], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(571)), c_orderQueueReplace);
        }

    }
    Wait(2.0, c_timeReal);
    gv_MonsterIceBugSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackIceBug1_Init () {
    gt_TrMonsterBackIceBug1 = TriggerCreate("gt_TrMonsterBackIceBug1_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackIceBug1, null, PointFromId(141), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ???????????????(???-???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackIceBug2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterIceBugGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterIceBugSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBugSwitch[1] = true;
    if ((UnitGroupCount(gv_MonsterIceBugGroup[1], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[1], 1));
        UnitGroupIssueOrder(gv_MonsterIceBugGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(572)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterIceBugGroup[1], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[1], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[1], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterIceBugGroup[1], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(572)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterIceBugGroup[1], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(573)), c_orderQueueReplace);
        }

    }
    Wait(2.0, c_timeReal);
    gv_MonsterIceBugSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackIceBug2_Init () {
    gt_TrMonsterBackIceBug2 = TriggerCreate("gt_TrMonsterBackIceBug2_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackIceBug2, null, PointFromId(145), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ???????????????(??????-???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackIceBug3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterIceBugGroup[2], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterIceBugSwitch[2] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBugSwitch[2] = true;
    if ((UnitGroupCount(gv_MonsterIceBugGroup[2], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[2], 1));
        UnitGroupIssueOrder(gv_MonsterIceBugGroup[2], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(574)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterIceBugGroup[2], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[2], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[2], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterIceBugGroup[2], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(574)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterIceBugGroup[2], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(575)), c_orderQueueReplace);
        }

    }
    Wait(2.0, c_timeReal);
    gv_MonsterIceBugSwitch[2] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackIceBug3_Init () {
    gt_TrMonsterBackIceBug3 = TriggerCreate("gt_TrMonsterBackIceBug3_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackIceBug3, null, PointFromId(146), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ???????????????(??????-???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackIceBug4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterIceBugGroup[3], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterIceBugSwitch[3] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBugSwitch[3] = true;
    if ((UnitGroupCount(gv_MonsterIceBugGroup[3], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[3], 1));
        UnitGroupIssueOrder(gv_MonsterIceBugGroup[3], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(576)), c_orderQueueReplace);
    }
    else {
        if ((UnitGroupCount(gv_MonsterIceBugGroup[3], c_unitCountAlive) == 2)) {
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[3], 1));
            PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterIceBugGroup[3], 2));
            UnitIssueOrder(UnitGroupUnit(gv_MonsterIceBugGroup[3], 1), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(576)), c_orderQueueReplace);
            UnitIssueOrder(UnitGroupUnit(gv_MonsterIceBugGroup[3], 2), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(577)), c_orderQueueReplace);
        }

    }
    Wait(2.0, c_timeReal);
    gv_MonsterIceBugSwitch[3] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackIceBug4_Init () {
    gt_TrMonsterBackIceBug4 = TriggerCreate("gt_TrMonsterBackIceBug4_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackIceBug4, null, PointFromId(147), 8.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackBoss1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterBossGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((gv_MonsterIceBossSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBossSwitch[0] = true;
    if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterBossGroup[0], 1), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterBossGroup[0], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
        UnitBehaviorRemove(UnitGroupUnit(gv_MonsterBossGroup[0], 1), "Notauto", 1);
    }

    UnitGroupIssueOrder(gv_MonsterBossGroup[0], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterBossGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(578)), c_orderQueueAddToEnd);
    gv_MonsterIceBossSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackBoss1_Init () {
    gt_TrMonsterAttackBoss1 = TriggerCreate("gt_TrMonsterAttackBoss1_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackBoss1, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterAttackBoss2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898 = 1;

    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterBossGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((gv_MonsterIceBossSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBossSwitch[1] = true;
    if ((UnitHasBehavior(UnitGroupUnit(gv_MonsterBossGroup[1], 1), "Notauto") == true) && (UnitIsAlive(UnitGroupUnit(gv_MonsterBossGroup[1], lv_eC84A4ECA095EC9CA0EB8B9BEC8898EBB380EC8898)) == true)) {
        UnitBehaviorRemove(UnitGroupUnit(gv_MonsterBossGroup[1], 1), "Notauto", 1);
    }

    UnitGroupIssueOrder(gv_MonsterBossGroup[1], OrderTargetingPoint(AbilityCommand("attack", 0), EventUnitDamageSourcePoint()), c_orderQueueReplace);
    UnitGroupIssueOrder(gv_MonsterBossGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(579)), c_orderQueueAddToEnd);
    gv_MonsterIceBossSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterAttackBoss2_Init () {
    gt_TrMonsterAttackBoss2 = TriggerCreate("gt_TrMonsterAttackBoss2_Func");
    TriggerAddEventUnitDamaged(gt_TrMonsterAttackBoss2, null, c_unitDamageTypeAny, c_unitDamageEither, "ToHeroDamage2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ???????????????(???)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackBoss1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterBossGroup[0], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterIceBossSwitch[0] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBossSwitch[0] = true;
    if ((UnitGroupCount(gv_MonsterBossGroup[0], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterBossGroup[0], 1));
        UnitGroupIssueOrder(gv_MonsterBossGroup[0], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(578)), c_orderQueueReplace);
    }

    Wait(2.0, c_timeReal);
    gv_MonsterIceBossSwitch[0] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackBoss1_Init () {
    gt_TrMonsterBackBoss1 = TriggerCreate("gt_TrMonsterBackBoss1_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackBoss1, null, PointFromId(148), 9.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ???????????????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBackBoss2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_MonsterBossGroup[1], EventUnit()) == true))) {
            return false;
        }

        if (!((UnitHasBehavior(EventUnit(), "Notauto") == false))) {
            return false;
        }

        if (!((gv_MonsterIceBossSwitch[1] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_MonsterIceBossSwitch[1] = true;
    if ((UnitGroupCount(gv_MonsterBossGroup[1], c_unitCountAlive) == 1)) {
        PlayerCreateEffectUnit(11, "ApplyIncapBehavior22222223", UnitGroupUnit(gv_MonsterBossGroup[1], 1));
        UnitGroupIssueOrder(gv_MonsterBossGroup[1], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(579)), c_orderQueueReplace);
    }

    Wait(2.0, c_timeReal);
    gv_MonsterIceBossSwitch[1] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBackBoss2_Init () {
    gt_TrMonsterBackBoss2 = TriggerCreate("gt_TrMonsterBackBoss2_Func");
    TriggerAddEventUnitRangePoint(gt_TrMonsterBackBoss2, null, PointFromId(149), 9.0, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ?????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterRegenTimerStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((EventPlayer() == 11))) {
            return false;
        }

        if (!((((UnitGetType(EventUnit()) == "Inunit6") && (((UnitGroupCount(gv_MonsterBirdGroup[0], c_unitCountAlive) == 0) && (gv_RegenNewTimerBirdBoolean[0] == false)) || ((UnitGroupCount(gv_MonsterBirdGroup[1], c_unitCountAlive) == 0) && (gv_RegenNewTimerBirdBoolean[1] == false)))) || ((UnitGetType(EventUnit()) == "Inunit3") && (((UnitGroupCount(gv_MonsterDogGroup[0], c_unitCountAlive) == 0) && (gv_RegenNewTimerDogBoolean[0] == false)) || ((UnitGroupCount(gv_MonsterDogGroup[1], c_unitCountAlive) == 0) && (gv_RegenNewTimerDogBoolean[1] == false)))) || ((UnitGetType(EventUnit()) == "Inunit8") && (((UnitGroupCount(gv_MonsterCowGroup[0], c_unitCountAlive) == 0) && (gv_RegenNewTimerCowBoolean[0] == false)) || ((UnitGroupCount(gv_MonsterCowGroup[1], c_unitCountAlive) == 0) && (gv_RegenNewTimerCowBoolean[1] == false)))) || ((UnitGetType(EventUnit()) == "Inunit7") && (((UnitGroupCount(gv_MonsterIceBugGroup[0], c_unitCountAlive) == 0) && (gv_RegenNewTimerIceBugBoolean[0] == false)) || ((UnitGroupCount(gv_MonsterIceBugGroup[1], c_unitCountAlive) == 0) && (gv_RegenNewTimerIceBugBoolean[1] == false)) || ((UnitGroupCount(gv_MonsterIceBugGroup[2], c_unitCountAlive) == 0) && (gv_RegenNewTimerIceBugBoolean[2] == false)) || ((UnitGroupCount(gv_MonsterIceBugGroup[3], c_unitCountAlive) == 0) && (gv_RegenNewTimerIceBugBoolean[3] == false)))) || (((UnitGetType(EventUnit()) == "Inunit") || (UnitGetType(EventUnit()) == "Inunit2")) && (((UnitGroupCount(gv_MonsterGalicGroup[0], c_unitCountAlive) == 0) && (gv_RegenNewTimerGalicBoolean[0] == false)) || ((UnitGroupCount(gv_MonsterGalicGroup[1], c_unitCountAlive) == 0) && (gv_RegenNewTimerGalicBoolean[1] == false)))) || (((UnitGetType(EventUnit()) == "Inunit5") || (UnitGetType(EventUnit()) == "Inunit4")) && (((UnitGroupCount(gv_MonsterScolpionGroup[0], c_unitCountAlive) == 0) && (gv_RegenNewTimerScolpionBoolean[0] == false)) || ((UnitGroupCount(gv_MonsterScolpionGroup[1], c_unitCountAlive) == 0) && (gv_RegenNewTimerScolpionBoolean[1] == false)))) || (((UnitGetType(EventUnit()) == "SpineCrawler") || (UnitGetType(EventUnit()) == "SporeCrawler")) && (((UnitGroupCount(gv_MonsterBossGroup[0], c_unitCountAlive) == 0) && (gv_RegenNewTimerIceBossBoolean[0] == false)) || ((UnitGroupCount(gv_MonsterBossGroup[1], c_unitCountAlive) == 0) && (gv_RegenNewTimerIceBossBoolean[1] == false))))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnit()) == "Inunit6")) {
        gf_HrMonsterBirdRegenTimerStart();
    }
    else {
        if ((UnitGetType(EventUnit()) == "Inunit3")) {
            gf_HrMonsterDogRegenTimerStart();
        }
        else {
            if ((UnitGetType(EventUnit()) == "Inunit8")) {
                gf_HrMonsterCowRegenTimerStart();
            }
            else {
                if ((UnitGetType(EventUnit()) == "Inunit7")) {
                    gf_HrMonsterIceBugRegenTimerStart();
                }
                else {
                    if (((UnitGetType(EventUnit()) == "Inunit") || (UnitGetType(EventUnit()) == "Inunit2"))) {
                        gf_HrMonsterGarlicRegenTimerStart();
                    }
                    else {
                        if (((UnitGetType(EventUnit()) == "Inunit5") || (UnitGetType(EventUnit()) == "Inunit4"))) {
                            gf_HrMonsterScorpionRegenTimerStart();
                        }
                        else {
                            if (((UnitGetType(EventUnit()) == "SpineCrawler") || (UnitGetType(EventUnit()) == "SporeCrawler"))) {
                                gf_HrMonsterBossRegenTimerStart();
                            }

                        }
                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterRegenTimerStart_Init () {
    gt_TrMonsterRegenTimerStart = TriggerCreate("gt_TrMonsterRegenTimerStart_Func");
    TriggerAddEventUnitDied(gt_TrMonsterRegenTimerStart, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterBirdRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(554))) {
        gv_RegenNewTimerBirdBoolean[0] = false;
        if ((UnitGroupCount(gv_MonsterBirdGroup[0], c_unitCountAlive) == 0)) {
            UnitCreate(1, "Inunit6", c_unitCreateIgnorePlacement, 11, PointFromId(554), 270.0);
            UnitGroupAdd(gv_MonsterBirdGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223", 11, gv_RegenNewTimerBirdStrong[0]);
            UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(554), 270.0);
            gv_MonsterBirdPing1[0] = UnitLastCreated();
        }

    }
    else {
        if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(555))) {
            gv_RegenNewTimerBirdBoolean[1] = false;
            if ((UnitGroupCount(gv_MonsterBirdGroup[1], c_unitCountAlive) == 0)) {
                UnitCreate(1, "Inunit6", c_unitCreateIgnorePlacement, 11, PointFromId(555), 90.0);
                UnitGroupAdd(gv_MonsterBirdGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223", 11, gv_RegenNewTimerBirdStrong[1]);
                UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(555), 270.0);
                gv_MonsterBirdPing1[1] = UnitLastCreated();
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterBirdRegen_Init () {
    gt_TrMonsterBirdRegen = TriggerCreate("gt_TrMonsterBirdRegen_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterBirdRegen, 11, "MonsterMakeTimerG2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterDogRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(560))) {
        gv_RegenNewTimerDogBoolean[0] = false;
        if ((UnitGroupCount(gv_MonsterDogGroup[0], c_unitCountAlive) == 0)) {
            UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(560), 250.0);
            UnitGroupAdd(gv_MonsterDogGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232", 11, gv_RegenNewTimerDogStrong[0]);
            UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(561), 260.0);
            UnitGroupAdd(gv_MonsterDogGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232", 11, gv_RegenNewTimerDogStrong[0]);
            UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(562), 280.0);
            UnitGroupAdd(gv_MonsterDogGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232", 11, gv_RegenNewTimerDogStrong[0]);
            UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(563), 290.0);
            UnitGroupAdd(gv_MonsterDogGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232", 11, gv_RegenNewTimerDogStrong[0]);
            UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(561), 270.0);
            gv_MonsterDogPing1[0] = UnitLastCreated();
        }

    }
    else {
        if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(556))) {
            gv_RegenNewTimerDogBoolean[1] = false;
            if ((UnitGroupCount(gv_MonsterDogGroup[1], c_unitCountAlive) == 0)) {
                UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(556), 110.0);
                UnitGroupAdd(gv_MonsterDogGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232", 11, gv_RegenNewTimerDogStrong[1]);
                UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(557), 100.0);
                UnitGroupAdd(gv_MonsterDogGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232", 11, gv_RegenNewTimerDogStrong[1]);
                UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(558), 80.0);
                UnitGroupAdd(gv_MonsterDogGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232", 11, gv_RegenNewTimerDogStrong[1]);
                UnitCreate(1, "Inunit3", c_unitCreateIgnorePlacement, 11, PointFromId(559), 70.0);
                UnitGroupAdd(gv_MonsterDogGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232", 11, gv_RegenNewTimerDogStrong[1]);
                UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(558), 270.0);
                gv_MonsterDogPing1[1] = UnitLastCreated();
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterDogRegen_Init () {
    gt_TrMonsterDogRegen = TriggerCreate("gt_TrMonsterDogRegen_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterDogRegen, 11, "MonsterMakeTimerG22");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterCowRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(214))) {
        gv_RegenNewTimerCowBoolean[0] = false;
        if ((UnitGroupCount(gv_MonsterCowGroup[0], c_unitCountAlive) == 0)) {
            UnitCreate(1, "Inunit8", c_unitCreateIgnorePlacement, 11, PointFromId(214), 360.0);
            UnitGroupAdd(gv_MonsterCowGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking2322322", 11, gv_RegenNewTimerCowStrong[0]);
            UnitCreate(1, "Inunit8", c_unitCreateIgnorePlacement, 11, PointFromId(234), 360.0);
            UnitGroupAdd(gv_MonsterCowGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking2322322", 11, gv_RegenNewTimerCowStrong[0]);
            UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(234), 270.0);
            gv_MonsterCowPing1[0] = UnitLastCreated();
        }

    }
    else {
        if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(157))) {
            gv_RegenNewTimerCowBoolean[1] = false;
            if ((UnitGroupCount(gv_MonsterCowGroup[1], c_unitCountAlive) == 0)) {
                UnitCreate(1, "Inunit8", c_unitCreateIgnorePlacement, 11, PointFromId(157), 180.0);
                UnitGroupAdd(gv_MonsterCowGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking2322322", 11, gv_RegenNewTimerCowStrong[1]);
                UnitCreate(1, "Inunit8", c_unitCreateIgnorePlacement, 11, PointFromId(158), 180.0);
                UnitGroupAdd(gv_MonsterCowGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking2322322", 11, gv_RegenNewTimerCowStrong[1]);
                UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(157), 270.0);
                gv_MonsterCowPing1[1] = UnitLastCreated();
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterCowRegen_Init () {
    gt_TrMonsterCowRegen = TriggerCreate("gt_TrMonsterCowRegen_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterCowRegen, 11, "MonsterMakeTimerG23");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterGalicRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(548))) {
        gv_RegenNewTimerGalicBoolean[0] = false;
        if ((UnitGroupCount(gv_MonsterGalicGroup[0], c_unitCountAlive) == 0)) {
            UnitCreate(1, "Inunit", c_unitCreateIgnorePlacement, 11, PointFromId(548), 45.0);
            UnitGroupAdd(gv_MonsterGalicGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232222", 11, gv_RegenNewTimerGalicStrong[0]);
            UnitCreate(1, "Inunit2", c_unitCreateIgnorePlacement, 11, PointFromId(549), 45.0);
            UnitGroupAdd(gv_MonsterGalicGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking2322322222", 11, gv_RegenNewTimerGalicStrong[0]);
            UnitCreate(1, "Inunit2", c_unitCreateIgnorePlacement, 11, PointFromId(550), 45.0);
            UnitGroupAdd(gv_MonsterGalicGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking2322322222", 11, gv_RegenNewTimerGalicStrong[0]);
            UnitCreate(1, "MonsterDumit2", c_unitCreateIgnorePlacement, 11, PointFromId(548), 270.0);
            gv_MonsterGalicPing1[0] = UnitLastCreated();
        }

    }
    else {
        if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(551))) {
            gv_RegenNewTimerGalicBoolean[1] = false;
            if ((UnitGroupCount(gv_MonsterGalicGroup[1], c_unitCountAlive) == 0)) {
                UnitCreate(1, "Inunit", c_unitCreateIgnorePlacement, 11, PointFromId(551), 225.0);
                UnitGroupAdd(gv_MonsterGalicGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232222", 11, gv_RegenNewTimerGalicStrong[1]);
                UnitCreate(1, "Inunit2", c_unitCreateIgnorePlacement, 11, PointFromId(552), 225.0);
                UnitGroupAdd(gv_MonsterGalicGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking2322322222", 11, gv_RegenNewTimerGalicStrong[1]);
                UnitCreate(1, "Inunit2", c_unitCreateIgnorePlacement, 11, PointFromId(553), 225.0);
                UnitGroupAdd(gv_MonsterGalicGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking2322322222", 11, gv_RegenNewTimerGalicStrong[1]);
                UnitCreate(1, "MonsterDumit2", c_unitCreateIgnorePlacement, 11, PointFromId(551), 270.0);
                gv_MonsterGalicPing1[1] = UnitLastCreated();
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterGalicRegen_Init () {
    gt_TrMonsterGalicRegen = TriggerCreate("gt_TrMonsterGalicRegen_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterGalicRegen, 11, "MonsterMakeTimerG2322");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterScolpionRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(564))) {
        gv_RegenNewTimerScolpionBoolean[0] = false;
        if ((UnitGroupCount(gv_MonsterScolpionGroup[0], c_unitCountAlive) == 0)) {
            UnitCreate(1, "Inunit5", c_unitCreateIgnorePlacement, 11, PointFromId(564), 325.0);
            UnitGroupAdd(gv_MonsterScolpionGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222222", 11, gv_RegenNewTimerScolpionStrong[0]);
            UnitCreate(1, "Inunit4", c_unitCreateIgnorePlacement, 11, PointFromId(565), 325.0);
            UnitGroupAdd(gv_MonsterScolpionGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232222222", 11, gv_RegenNewTimerScolpionStrong[0]);
            UnitCreate(1, "Inunit4", c_unitCreateIgnorePlacement, 11, PointFromId(566), 325.0);
            UnitGroupAdd(gv_MonsterScolpionGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232222222", 11, gv_RegenNewTimerScolpionStrong[0]);
            UnitCreate(1, "MonsterDumit2", c_unitCreateIgnorePlacement, 11, PointFromId(564), 270.0);
            gv_MonsterScolpionPing1[0] = UnitLastCreated();
        }

    }
    else {
        if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(567))) {
            gv_RegenNewTimerScolpionBoolean[1] = false;
            if ((UnitGroupCount(gv_MonsterScolpionGroup[1], c_unitCountAlive) == 0)) {
                UnitCreate(1, "Inunit5", c_unitCreateIgnorePlacement, 11, PointFromId(567), 315.0);
                UnitGroupAdd(gv_MonsterScolpionGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222222", 11, gv_RegenNewTimerScolpionStrong[1]);
                UnitCreate(1, "Inunit4", c_unitCreateIgnorePlacement, 11, PointFromId(568), 315.0);
                UnitGroupAdd(gv_MonsterScolpionGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232222222", 11, gv_RegenNewTimerScolpionStrong[1]);
                UnitCreate(1, "Inunit4", c_unitCreateIgnorePlacement, 11, PointFromId(569), 315.0);
                UnitGroupAdd(gv_MonsterScolpionGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232232222222", 11, gv_RegenNewTimerScolpionStrong[1]);
                UnitCreate(1, "MonsterDumit2", c_unitCreateIgnorePlacement, 11, PointFromId(567), 270.0);
                gv_MonsterScolpionPing1[1] = UnitLastCreated();
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterScolpionRegen_Init () {
    gt_TrMonsterScolpionRegen = TriggerCreate("gt_TrMonsterScolpionRegen_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterScolpionRegen, 11, "MonsterMakeTimerG23222");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterIceBugRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(570))) {
        gv_RegenNewTimerIceBugBoolean[0] = false;
        if ((UnitGroupCount(gv_MonsterIceBugGroup[0], c_unitCountAlive) == 0)) {
            UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(570), 315.0);
            UnitGroupAdd(gv_MonsterIceBugGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222", 11, gv_RegenNewTimerIceBugStrong[0]);
            UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(571), 315.0);
            UnitGroupAdd(gv_MonsterIceBugGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222", 11, gv_RegenNewTimerIceBugStrong[0]);
            UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(570), 270.0);
            gv_MonsterIceBugPing1[0] = UnitLastCreated();
        }

    }
    else {
        if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(573))) {
            gv_RegenNewTimerIceBugBoolean[1] = false;
            if ((UnitGroupCount(gv_MonsterIceBugGroup[1], c_unitCountAlive) == 0)) {
                UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(572), 225.0);
                UnitGroupAdd(gv_MonsterIceBugGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222", 11, gv_RegenNewTimerIceBugStrong[1]);
                UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(573), 225.0);
                UnitGroupAdd(gv_MonsterIceBugGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222", 11, gv_RegenNewTimerIceBugStrong[1]);
                UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(573), 270.0);
                gv_MonsterIceBugPing1[1] = UnitLastCreated();
            }

        }
        else {
            if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(574))) {
                gv_RegenNewTimerIceBugBoolean[2] = false;
                if ((UnitGroupCount(gv_MonsterIceBugGroup[2], c_unitCountAlive) == 0)) {
                    UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(574), 45.0);
                    UnitGroupAdd(gv_MonsterIceBugGroup[2], UnitLastCreated());
                    UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222", 11, gv_RegenNewTimerIceBugStrong[2]);
                    UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(575), 45.0);
                    UnitGroupAdd(gv_MonsterIceBugGroup[2], UnitLastCreated());
                    UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222", 11, gv_RegenNewTimerIceBugStrong[2]);
                    UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(574), 270.0);
                    gv_MonsterIceBugPing1[2] = UnitLastCreated();
                }

            }
            else {
                if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(577))) {
                    gv_RegenNewTimerIceBugBoolean[3] = false;
                    if ((UnitGroupCount(gv_MonsterIceBugGroup[3], c_unitCountAlive) == 0)) {
                        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(576), 135.0);
                        UnitGroupAdd(gv_MonsterIceBugGroup[3], UnitLastCreated());
                        UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222", 11, gv_RegenNewTimerIceBugStrong[3]);
                        UnitCreate(1, "Inunit7", c_unitCreateIgnorePlacement, 11, PointFromId(577), 135.0);
                        UnitGroupAdd(gv_MonsterIceBugGroup[3], UnitLastCreated());
                        UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking23223222", 11, gv_RegenNewTimerIceBugStrong[3]);
                        UnitCreate(1, "MonsterDumit", c_unitCreateIgnorePlacement, 11, PointFromId(577), 270.0);
                        gv_MonsterIceBugPing1[3] = UnitLastCreated();
                    }

                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterIceBugRegen_Init () {
    gt_TrMonsterIceBugRegen = TriggerCreate("gt_TrMonsterIceBugRegen_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterIceBugRegen, 11, "MonsterMakeTimerG232");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrMonsterIceBossRegen_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(578))) {
        gv_RegenNewTimerIceBossBoolean[0] = false;
        if ((UnitGroupCount(gv_MonsterBossGroup[0], c_unitCountAlive) == 0)) {
            UnitCreate(1, "SporeCrawler", c_unitCreateIgnorePlacement, 11, PointFromId(578), 270.0);
            UnitGroupAdd(gv_MonsterBossGroup[0], UnitLastCreated());
            UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking2322332", 11, gv_RegenNewTimerIceBossStrong[0]);
            gv_MonsterKillOnlyOne[0] = false;
            UnitCreate(1, "MonsterDumit3", c_unitCreateIgnorePlacement, 11, PointFromId(578), 270.0);
            gv_MonsterIceBossPing1[0] = UnitLastCreated();
        }

    }
    else {
        if ((EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(579))) {
            gv_RegenNewTimerIceBossBoolean[1] = false;
            if ((UnitGroupCount(gv_MonsterBossGroup[1], c_unitCountAlive) == 0)) {
                UnitCreate(1, "SpineCrawler", c_unitCreateIgnorePlacement, 11, PointFromId(579), 270.0);
                UnitGroupAdd(gv_MonsterBossGroup[1], UnitLastCreated());
                UnitBehaviorAddPlayer(UnitLastCreated(), "PhotonAttacking232233", 11, gv_RegenNewTimerIceBossStrong[0]);
                gv_MonsterKillOnlyOne[1] = false;
                UnitCreate(1, "MonsterDumit3", c_unitCreateIgnorePlacement, 11, PointFromId(579), 270.0);
                gv_MonsterIceBossPing1[1] = UnitLastCreated();
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrMonsterIceBossRegen_Init () {
    gt_TrMonsterIceBossRegen = TriggerCreate("gt_TrMonsterIceBossRegen_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrMonsterIceBossRegen, 11, "MonsterMakeTimerG232222");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????????(?????? ??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrBuildingDestroyMoojuck_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80;

    // Automatic Variable Declarations
    const int autoE3D34D39_ae = 4;
    const int autoE3D34D39_ai = 1;
    const int auto54FB806B_ae = 8;
    const int auto54FB806B_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 = 5;

    // Conditions
    if (testConds) {
        if (!(((EventPlayer() == 12) || (EventPlayer() == 13)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(66.5, 105.5))) {
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(116), false);
    }
    else {
        if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(66.5, 53.5))) {
            libNtve_gf_MakeUnitInvulnerable(UnitFromId(115), false);
        }
        else {
            if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(141.5, 105.5))) {
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(117), false);
            }
            else {
                if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(141.5, 53.5))) {
                    libNtve_gf_MakeUnitInvulnerable(UnitFromId(118), false);
                }
                else {
                    if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(50.5, 97.5))) {
                        libNtve_gf_MakeUnitInvulnerable(UnitFromId(111), false);
                    }
                    else {
                        if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(50.5, 61.5))) {
                            libNtve_gf_MakeUnitInvulnerable(UnitFromId(110), false);
                        }
                        else {
                            if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(157.5, 97.5))) {
                                libNtve_gf_MakeUnitInvulnerable(UnitFromId(114), false);
                            }
                            else {
                                if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(157.5, 61.5))) {
                                    libNtve_gf_MakeUnitInvulnerable(UnitFromId(113), false);
                                }
                                else {
                                    if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(82.5, 113.5))) {
                                        libNtve_gf_MakeUnitInvulnerable(UnitFromId(131), false);
                                    }
                                    else {
                                        if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(82.5, 45.5))) {
                                            libNtve_gf_MakeUnitInvulnerable(UnitFromId(712), false);
                                        }
                                        else {
                                            if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(125.5, 113.5))) {
                                                libNtve_gf_MakeUnitInvulnerable(UnitFromId(128), false);
                                            }
                                            else {
                                                if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(125.5, 45.5))) {
                                                    libNtve_gf_MakeUnitInvulnerable(UnitFromId(713), false);
                                                }

                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if ((EventPlayer() == 12)) {
        UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/554903D0") + TextWithColor(StringExternal("Param/Value/D7C5D449"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/4389ADE9") + StringExternal("Param/Value/4B35A0A9")));
        UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/33F64C5F") + StringExternal("Param/Value/5C0DE2AD") + TextWithColor(StringExternal("Param/Value/7BD6DAF3"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/758A5E38") + StringExternal("Param/Value/88EAA7E1")));
        UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaSubtitle, (StringExternal("Param/Value/4E4FC1AD") + TextWithColor(StringExternal("Param/Value/D1BDDFA4"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/D37FBC4E")));
        lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 = 5;
        for ( ; ( (auto54FB806B_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 <= auto54FB806B_ae) || (auto54FB806B_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 >= auto54FB806B_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80 += auto54FB806B_ai ) {
            if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80]) == c_playerStatusActive)) {
                PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88982ED8C80], c_playerPropMinerals, c_playerPropOperAdd, 125);
            }

        }
    }
    else {
        if ((EventPlayer() == 13)) {
            UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/9FC8ECA9") + StringExternal("Param/Value/B6D5F31F") + TextWithColor(StringExternal("Param/Value/AFC7623E"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/EE0053EA") + StringExternal("Param/Value/4C324B50")));
            UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/57A7370D") + TextWithColor(StringExternal("Param/Value/4B04EABB"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/19160477") + StringExternal("Param/Value/F6B86899")));
            UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaSubtitle, (StringExternal("Param/Value/60AE3D8B") + TextWithColor(StringExternal("Param/Value/CB5ACB70"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/97116942")));
            lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 = 1;
            for ( ; ( (autoE3D34D39_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 <= autoE3D34D39_ae) || (autoE3D34D39_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 >= autoE3D34D39_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80 += autoE3D34D39_ai ) {
                if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80]) == c_playerStatusActive)) {
                    PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC88981ED8C80], c_playerPropMinerals, c_playerPropOperAdd, 125);
                }

            }
        }

    }
    if ((EventPlayer() == 12) && (UnitGroupCount(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0) && (UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) < 2)) {
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(109), false);
    }
    else {
        if ((EventPlayer() == 13) && (UnitGroupCount(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0) && (UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) < 2)) {
            libNtve_gf_MakeUnitInvulnerable(UnitFromId(112), false);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrBuildingDestroyMoojuck_Init () {
    gt_TrBuildingDestroyMoojuck = TriggerCreate("gt_TrBuildingDestroyMoojuck_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrBuildingDestroyMoojuck, c_playerAny, "HeroOkGi42");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ????????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSinhoBuildingReviveTimerStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(48.5, 94.5))) {
        PlayerCreateEffectPoint(12, "FleetBaeconRegenG", Point(48.5, 94.5));
    }
    else {
        if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(48.5, 64.5))) {
            PlayerCreateEffectPoint(12, "FleetBaeconRegenG", Point(48.5, 64.5));
        }
        else {
            if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(159.5, 94.5))) {
                PlayerCreateEffectPoint(13, "FleetBaeconRegenG", Point(159.5, 94.5));
            }
            else {
                if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationSourcePoint) == Point(159.5, 64.5))) {
                    PlayerCreateEffectPoint(13, "FleetBaeconRegenG", Point(159.5, 64.5));
                }

            }
        }
    }
    if ((EventPlayer() == 12)) {
        UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/D883BAF6") + TextWithColor(StringExternal("Param/Value/233EBE34"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/3BD40790") + StringExternal("Param/Value/9A8717D9")));
        UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/2AAB09B3") + StringExternal("Param/Value/AE6F4A0E") + TextWithColor(StringExternal("Param/Value/9043322D"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/11E48D90") + StringExternal("Param/Value/8B4C8174")));
        if ((UnitGroupCount(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
            libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), false);
            libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 2), false);
        }
        else {
            if ((UnitGroupCount(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 1)) {
                libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), false);
            }

        }
    }
    else {
        if ((EventPlayer() == 13)) {
            UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/DC8D25DF") + StringExternal("Param/Value/7C2C1533") + TextWithColor(StringExternal("Param/Value/438D9005"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/60A29C26") + StringExternal("Param/Value/13F499C4")));
            UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/F57284C2") + TextWithColor(StringExternal("Param/Value/4CA705AC"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/8F492D0A") + StringExternal("Param/Value/96E73B87")));
            if ((UnitGroupCount(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), false);
                libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 2), false);
            }
            else {
                if ((UnitGroupCount(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 1)) {
                    libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), false);
                }

            }
        }

    }
    if ((EventPlayer() == 12) && (UnitGroupCount(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0) && (UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) < 2)) {
        libNtve_gf_MakeUnitInvulnerable(UnitFromId(109), false);
    }
    else {
        if ((EventPlayer() == 13) && (UnitGroupCount(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0) && (UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) < 2)) {
            libNtve_gf_MakeUnitInvulnerable(UnitFromId(112), false);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSinhoBuildingReviveTimerStart_Init () {
    gt_TrSinhoBuildingReviveTimerStart = TriggerCreate("gt_TrSinhoBuildingReviveTimerStart_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrSinhoBuildingReviveTimerStart, 12, "HeroOkGi4");
    TriggerAddEventPlayerEffectUsed(gt_TrSinhoBuildingReviveTimerStart, 13, "HeroOkGi4");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ?????????
//--------------------------------------------------------------------------------------------------
bool gt_TrSinhoBuildingRevive_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == Point(48.5, 94.5))) {
        SoundPlay(SoundLink("UI_TransmissionStart", -1), PlayerGroupAll(), 100.0, 0.0);
        UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/74C97010") + TextWithColor(StringExternal("Param/Value/8FC032A7"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/86D47115") + StringExternal("Param/Value/D4D2F8EC")));
        UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/D90377DA") + StringExternal("Param/Value/DD679A31") + TextWithColor(StringExternal("Param/Value/341F376D"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/4E2EB84D") + StringExternal("Param/Value/A05D630F")));
        Wait(10.0, c_timeReal);
        UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/466E0963") + TextWithColor(StringExternal("Param/Value/20D5B31B"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/A8AA38A9") + StringExternal("Param/Value/BB72122A")));
        UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/AEE63BFA") + StringExternal("Param/Value/A6DA1DA9") + TextWithColor(StringExternal("Param/Value/D9A14FC4"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/48755640") + StringExternal("Param/Value/692DFDC9")));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "FleetBeacon", c_unitCreateIgnorePlacement, 12, Point(48.5, 94.5));
        libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), false);
        if ((UnitGroupCount(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2) && (UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
            libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), true);
            libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 2), true);
        }
        else {
            if ((UnitGroupCount(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 1) && (UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), true);
            }

        }
        if ((UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
            libNtve_gf_MakeUnitInvulnerable(UnitFromId(109), true);
        }

    }
    else {
        if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == Point(48.5, 64.5))) {
            SoundPlay(SoundLink("UI_TransmissionStart", -1), PlayerGroupAll(), 100.0, 0.0);
            UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/24AB9FBB") + TextWithColor(StringExternal("Param/Value/E1F65C19"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/6B4768CF") + StringExternal("Param/Value/58A21422")));
            UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/C5CBF063") + StringExternal("Param/Value/EF2C7C37") + TextWithColor(StringExternal("Param/Value/39404D05"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/E0992432") + StringExternal("Param/Value/A8A7F12D")));
            Wait(10.0, c_timeReal);
            UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/BB958EA7") + TextWithColor(StringExternal("Param/Value/E6BFDC6F"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/1B6F91D7") + StringExternal("Param/Value/DD612E62")));
            UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/A8EDCDC8") + StringExternal("Param/Value/47709144") + TextWithColor(StringExternal("Param/Value/B5795E82"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/19C53978") + StringExternal("Param/Value/A417CEB4")));
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "FleetBeacon", c_unitCreateIgnorePlacement, 12, Point(48.5, 64.5));
            libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), false);
            if ((UnitGroupCount(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2) && (UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), true);
                libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 2), true);
            }
            else {
                if ((UnitGroupCount(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 1) && (UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                    libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 12, RegionCircle(PointFromId(293), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), true);
                }

            }
            if ((UnitGroupCount(UnitGroup("FleetBeacon", 12, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                libNtve_gf_MakeUnitInvulnerable(UnitFromId(109), true);
            }

        }
        else {
            if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == Point(159.5, 94.5))) {
                SoundPlay(SoundLink("UI_TransmissionStart", -1), PlayerGroupAll(), 100.0, 0.0);
                UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/509F60A9") + TextWithColor(StringExternal("Param/Value/EE1163E4"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/E2ACBF00") + StringExternal("Param/Value/C214E262")));
                UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/1C529DC2") + StringExternal("Param/Value/74290F19") + TextWithColor(StringExternal("Param/Value/E9BE5F3D"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/626ED85D") + StringExternal("Param/Value/16953F6A")));
                Wait(10.0, c_timeReal);
                UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/7964C599") + TextWithColor(StringExternal("Param/Value/1909E8DA"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/CB218ED9") + StringExternal("Param/Value/F27F9CD7")));
                UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/C97DEA3B") + StringExternal("Param/Value/8BDF95CB") + TextWithColor(StringExternal("Param/Value/5085E4B2"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/58BE1C2A") + StringExternal("Param/Value/CAC49F91")));
                libNtve_gf_CreateUnitsWithDefaultFacing(1, "FleetBeacon", c_unitCreateIgnorePlacement, 13, Point(159.5, 94.5));
                libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), false);
                if ((UnitGroupCount(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2) && (UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                    libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), true);
                    libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 2), true);
                }
                else {
                    if ((UnitGroupCount(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 1) && (UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                        libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), true);
                    }

                }
                if ((UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                    libNtve_gf_MakeUnitInvulnerable(UnitFromId(112), true);
                }

            }
            else {
                if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == Point(159.5, 64.5))) {
                    SoundPlay(SoundLink("UI_TransmissionStart", -1), PlayerGroupAll(), 100.0, 0.0);
                    UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/74D03530") + TextWithColor(StringExternal("Param/Value/E47B9ADD"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/58152283") + StringExternal("Param/Value/DA6E0B72")));
                    UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/9CF2DE13") + StringExternal("Param/Value/4A4818D9") + TextWithColor(StringExternal("Param/Value/DF335561"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/0275C334") + StringExternal("Param/Value/920B88D8")));
                    Wait(10.0, c_timeReal);
                    UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/4C21F8DE") + TextWithColor(StringExternal("Param/Value/0532123E"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/4478E34D") + StringExternal("Param/Value/EABB4FA4")));
                    UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/DF06825F") + StringExternal("Param/Value/05A062EB") + TextWithColor(StringExternal("Param/Value/4DC4748C"), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/FF0A82EE") + StringExternal("Param/Value/53E8D3ED")));
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, "FleetBeacon", c_unitCreateIgnorePlacement, 13, Point(159.5, 64.5));
                    libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), false);
                    if ((UnitGroupCount(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2) && (UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                        libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), true);
                        libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 2), true);
                    }
                    else {
                        if ((UnitGroupCount(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 1) && (UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                            libNtve_gf_MakeUnitInvulnerable(UnitGroupUnit(UnitGroup("PhotonCannon", 13, RegionCircle(PointFromId(266), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1), true);
                        }

                    }
                    if ((UnitGroupCount(UnitGroup("FleetBeacon", 13, RegionPlayableMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 2)) {
                        libNtve_gf_MakeUnitInvulnerable(UnitFromId(112), true);
                    }

                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSinhoBuildingRevive_Init () {
    gt_TrSinhoBuildingRevive = TriggerCreate("gt_TrSinhoBuildingRevive_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrSinhoBuildingRevive, 12, "FleetBaeconRegenG2");
    TriggerAddEventPlayerEffectUsed(gt_TrSinhoBuildingRevive, 13, "FleetBaeconRegenG2");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHeroDeath_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ECB694EAB080EAB491EBACBC;
    int lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((EventUnit() == gv_PlayerHero[EventPlayer()]))) {
            return false;
        }

        if (!((gv_HeroDeathBoolean[EventPlayer()] == false))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_HeroDeathBoolean[EventPlayer()] = true;
    if ((UnitGetType(EventUnit()) == "Hero19")) {
        libNtve_gf_MakeUnitInvulnerable(gv_PlayerHero[EventPlayer()], true);
        UnitRevive(gv_PlayerHero[EventPlayer()]);
        UnitBehaviorAdd(gv_PlayerHero[EventPlayer()], "Hero19Passive", gv_PlayerHero[EventPlayer()], 1);
        UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLifePercent, 100.0);
        UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergyPercent, 100.0);
        UnitClearSelection(EventPlayer());
        UnitSelect(gv_PlayerHero[EventPlayer()], EventPlayer(), true);
    }

    Wait(0.05, c_timeReal);
    if ((PlayerType(libNtve_gf_KillingPlayer()) == c_playerTypeUser)) {
        lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = libNtve_gf_KillingPlayer();
    }
    else {
        if ((PlayerType(libNtve_gf_KillingPlayer()) == c_playerTypeHostile) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
            if ((PlayerStatus(gv_PlayerBayul[5]) == c_playerStatusActive) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist32223") == true)) {
                lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[5];
            }
            else {
                if ((PlayerStatus(gv_PlayerBayul[6]) == c_playerStatusActive) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist322223") == true)) {
                    lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[6];
                }
                else {
                    if ((PlayerStatus(gv_PlayerBayul[7]) == c_playerStatusActive) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist3222223") == true)) {
                        lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[7];
                    }
                    else {
                        if ((PlayerStatus(gv_PlayerBayul[8]) == c_playerStatusActive) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist32222222") == true)) {
                            lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[8];
                        }
                        else {
                            lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = 13;
                        }
                    }
                }
            }
        }
        else {
            if ((PlayerType(libNtve_gf_KillingPlayer()) == c_playerTypeHostile) && (PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
                if ((PlayerStatus(gv_PlayerBayul[1]) == c_playerStatusActive) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist4") == true)) {
                    lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[1];
                }
                else {
                    if ((PlayerStatus(gv_PlayerBayul[2]) == c_playerStatusActive) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist33") == true)) {
                        lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[2];
                    }
                    else {
                        if ((PlayerStatus(gv_PlayerBayul[3]) == c_playerStatusActive) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist323") == true)) {
                            lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[3];
                        }
                        else {
                            if ((PlayerStatus(gv_PlayerBayul[4]) == c_playerStatusActive) && (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist3223") == true)) {
                                lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = gv_PlayerBayul[4];
                            }
                            else {
                                lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = 12;
                            }
                        }
                    }
                }
            }
            else {
                lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4 = libNtve_gf_KillingPlayer();
            }
        }
    }
    gv_HeroKillPlayer[EventPlayer()] = lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4;
    if (((gv_HeroBuffIng[EventPlayer()][0] >= 1) || (gv_HeroBuffIng[EventPlayer()][1] >= 1))) {
        gf_HrHeroBuffPut();
    }

    if (((gv_SelectedCharNum[EventPlayer()] == 24) || (gv_SelectedCharNum[EventPlayer()] == 54))) {
        gf_HrHeroSkillIncreaseEffect2();
    }

    if ((gv_HeroFirstKill == false) && (PlayerType(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser)) {
        gv_HeroFirstKill = true;
        gv_HeroNonStopKill[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4] += 1;
        UnitBehaviorAdd(gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4], "PlayerGKill2", gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4], 1);
        SoundPlay(SoundLink("SystemSound", -1), PlayerGroupAll(), 200.0, 0.0);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/05F62168") + TextWithColor(StringExternal("Param/Value/30CA022A"), Color(0.00, 100.00, 100.00)) + StringExternal("Param/Value/483452C5")));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/F0789BD4") + TextWithColor(PlayerName(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4, false))) + StringExternal("Param/Value/B26CD418") + TextWithColor(UnitTypeGetName(UnitGetType(gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4])), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/461FD990") + StringExternal("Param/Value/1EE0001D") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/20DC55D5") + TextWithColor(UnitTypeGetName(UnitGetType(gv_PlayerHero[EventPlayer()])), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/3667E8C1") + StringExternal("Param/Value/E3F67346")));
        UnitBehaviorAdd(gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4], "PlayerGKill", gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4], 1);
        lv_eC84A4ECA095ECB694EAB080EAB491EBACBC += 100;
    }
    else {
        if ((gv_HeroFirstKill == true) && (PlayerType(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser)) {
            gv_HeroNonStopKill[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4] += 1;
            UnitBehaviorAdd(gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4], "PlayerGKill2", gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4], 1);
            if ((gv_HeroNonStopKill[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4] >= 2) && (gv_HeroDeathBoolean[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4] == false)) {
                gf_HrHeroAddKillMessage();
            }
            else {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/CC7197B9") + TextWithColor(PlayerName(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4, false))) + StringExternal("Param/Value/6EFE0FE7") + TextWithColor(UnitTypeGetName(UnitGetType(gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4])), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/B485FF4F") + StringExternal("Param/Value/927B1316") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/F22C6985") + TextWithColor(UnitTypeGetName(UnitGetType(gv_PlayerHero[EventPlayer()])), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/3081669B") + StringExternal("Param/Value/7C3AB27A")));
            }
            UnitBehaviorAdd(gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4], "PlayerGKill", gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4], 1);
        }
        else {
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, (StringExternal("Param/Value/4705CBEA") + TextWithColor(PlayerName(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4, false))) + StringExternal("Param/Value/E07DC5E9") + TextWithColor(PlayerName(EventPlayer()), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(EventPlayer(), false))) + StringExternal("Param/Value/6B4135A4") + TextWithColor(UnitTypeGetName(UnitGetType(gv_PlayerHero[EventPlayer()])), Color(0.00, 100.00, 0.00)) + StringExternal("Param/Value/120F00B3") + StringExternal("Param/Value/D963676D")));
        }
    }
    if ((PlayerType(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4) == c_playerTypeUser)) {
        gv_PlayerLevel[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4][1] += 1;
        if (((gv_SelectedSpellNum1[gv_HeroKillPlayer[EventPlayer()]] == 4) || (gv_SelectedSpellNum2[gv_HeroKillPlayer[EventPlayer()]] == 4)) && (UnitHasBehavior(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "SpellDong4") == true)) {
            UnitCreateEffectUnit(gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]], "Spelldong22", gv_PlayerHero[gv_HeroKillPlayer[EventPlayer()]]);
        }

        if (((gv_HeroNonStopKill[EventPlayer()] >= 2) && (gv_HeroNonStopKill[EventPlayer()] <= 5))) {
            lv_eC84A4ECA095ECB694EAB080EAB491EBACBC += (25 * (gv_HeroNonStopKill[EventPlayer()] - 1));
        }
        else {
            if ((gv_HeroNonStopKill[EventPlayer()] >= 6)) {
                lv_eC84A4ECA095ECB694EAB080EAB491EBACBC += (25 * (gv_HeroNonStopKill[EventPlayer()] + 1));
            }

        }
        if ((gv_PlayerLevel[EventPlayer()][0] > gv_PlayerLevel[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4][0])) {
            UIDisplayMessage(PlayerGroupSingle(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4), c_messageAreaSubtitle, (StringExternal("Param/Value/FAB94D7C") + TextWithColor(StringExternal("Param/Value/E161D6C8"), Color(0.00, 87.45, 100.00)) + TextWithColor(IntToText((gv_HeroKillMoney[EventPlayer()][0] + gv_HeroKillMoney[EventPlayer()][1] + lv_eC84A4ECA095ECB694EAB080EAB491EBACBC)), Color(0.00, 87.45, 100.00)) + TextWithColor(StringExternal("Param/Value/089F3CD4"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/2D044E80")));
            PlayerModifyPropertyInt(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4, c_playerPropMinerals, c_playerPropOperAdd, (gv_HeroKillMoney[EventPlayer()][1] + lv_eC84A4ECA095ECB694EAB080EAB491EBACBC));
        }
        else {
            UIDisplayMessage(PlayerGroupSingle(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4), c_messageAreaSubtitle, (StringExternal("Param/Value/FB1959EE") + TextWithColor(StringExternal("Param/Value/772AC933"), Color(0.00, 87.45, 100.00)) + TextWithColor(IntToText((gv_HeroKillMoney[EventPlayer()][0] + lv_eC84A4ECA095ECB694EAB080EAB491EBACBC)), Color(0.00, 87.45, 100.00)) + TextWithColor(StringExternal("Param/Value/FABCA002"), Color(0.00, 87.45, 100.00)) + StringExternal("Param/Value/3453FA0E")));
            PlayerModifyPropertyInt(lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4, c_playerPropMinerals, c_playerPropOperAdd, lv_eC84A4ECA095ECB694EAB080EAB491EBACBC);
        }
        if (((gv_SelectedCharNum[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4] == 32) || (gv_SelectedCharNum[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4] == 46) || (gv_SelectedCharNum[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4] == 66) || (gv_SelectedCharNum[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4] == 70))) {
            gf_HrHeroSkillIncreaseEffect();
        }

        PlayerCreateEffectUnit(EventPlayer(), "HeroKillMo", gv_PlayerHero[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4]);
        libNtve_gf_SetDialogItemText(gv_ScoreDialogTotalScore[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4], (StringExternal("Param/Value/6B201FB2") + IntToText(gv_PlayerLevel[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4][1]) + StringExternal("Param/Value/D24522CA") + IntToText(gv_PlayerLevel[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4][2]) + StringExternal("Param/Value/B3E4C0D7") + IntToText(gv_PlayerLevel[lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4][3]) + StringExternal("Param/Value/0D0DA65C")), PlayerGroupAll());
    }

    gv_HeroNonStopKill[EventPlayer()] = 0;
    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4) == true)) {
        gv_PlayerProfileTeamKillNum[0] += 1;
        libNtve_gf_SetDialogItemText(gv_ScoreDialogTextB[4], (StringExternal("Param/Value/46715145") + IntToText(gv_PlayerProfileTeamKillNum[0]) + StringExternal("Param/Value/211C87AC")), PlayerGroupAll());
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), lv_eC84A4ECA095EBA789ED8380ED948CEBA088EC9DB4EC96B4) == true)) {
            gv_PlayerProfileTeamKillNum[1] += 1;
            libNtve_gf_SetDialogItemText(gv_ScoreDialogTextB[5], (StringExternal("Param/Value/1CD6E931") + IntToText(gv_PlayerProfileTeamKillNum[1]) + StringExternal("Param/Value/B521C143")), PlayerGroupAll());
        }

    }
    gv_PlayerLevel[EventPlayer()][2] += 1;
    libNtve_gf_SetDialogItemText(gv_ScoreDialogTotalScore[EventPlayer()], (StringExternal("Param/Value/4C5AC417") + IntToText(gv_PlayerLevel[EventPlayer()][1]) + StringExternal("Param/Value/E32F94F1") + IntToText(gv_PlayerLevel[EventPlayer()][2]) + StringExternal("Param/Value/784ECCE0") + IntToText(gv_PlayerLevel[EventPlayer()][3]) + StringExternal("Param/Value/43A6870C")), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(gv_ScoreDialogName[EventPlayer()], (StringExternal("Param/Value/70CACF72") + PlayerName(EventPlayer()) + StringExternal("Param/Value/152670BB")), PlayerGroupAll());
    libNtve_gf_SetDialogItemColor(gv_ScoreDialogHeroImage[EventPlayer()], Color(100.00, 0.00, 0.00), PlayerGroupAll());
    DialogControlFadeTransparency(gv_ScoreDialogHeroImage[EventPlayer()], PlayerGroupAll(), 0.0, 50.0);
    DialogControlSetVisible(gv_ScoreDialogReviveTime[EventPlayer()], PlayerGroupAll(), true);
    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist3222") == true) || (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist32222") == true) || (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist322222") == true) || (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist3222222") == true))) {
        gf_HrAssistantBonusTeam2();
    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && ((UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist") == true) || (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist3") == true) || (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist32") == true) || (UnitHasBehavior(gv_PlayerHero[EventPlayer()], "Player1Assist322") == true))) {
            gf_HrAssistantBonusTeam1();
        }

    }
    if ((((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[1]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[2]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[3]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[4]] == true) && (gv_HeroAllKill[0] == false) && (PlayerGroupCount(gv_TeamPlayerGroup[0]) >= 2)) || ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[5]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[6]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[7]] == true) && (gv_HeroDeathBoolean[gv_PlayerBayul[8]] == true) && (gv_HeroAllKill[1] == false) && (PlayerGroupCount(gv_TeamPlayerGroup[1]) >= 2)))) {
        gf_HrHeroAllKillMessage();
    }

    if ((UnitGetType(EventUnit()) != "Hero19")) {
        TriggerExecute(gt_TrHeroReviveStand, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHeroDeath_Init () {
    gt_TrHeroDeath = TriggerCreate("gt_TrHeroDeath_Func");
    TriggerAddEventUnitDied(gt_TrHeroDeath, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrHeroReviveStand_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogSetVisible(gv_HeroReviveWindow, PlayerGroupSingle(EventPlayer()), true);
    DialogControlSetVisible(gv_HeroReviveWindowTime[EventPlayer()], PlayerGroupSingle(EventPlayer()), true);
    gv_HeroReviveCountNum[EventPlayer()][0] = gv_HeroReviveCountNum[EventPlayer()][1];
    if (((gv_StatusWindowNum[EventPlayer()][28] != 0) || (gv_StatusWindowNum[EventPlayer()][29] != 0))) {
        gf_HrItemUseComplete();
    }

    while ((gv_HeroReviveCountNum[EventPlayer()][0] > 0)) {
        libNtve_gf_SetDialogItemText(gv_HeroReviveWindowTime[EventPlayer()], (StringExternal("Param/Value/A7788B65") + IntToText(gv_HeroReviveCountNum[EventPlayer()][0]) + StringExternal("Param/Value/220CEBD0")), PlayerGroupSingle(EventPlayer()));
        libNtve_gf_SetDialogItemText(gv_ScoreDialogReviveTime[EventPlayer()], (StringExternal("Param/Value/1831C539") + TextWithColor(IntToText(gv_HeroReviveCountNum[EventPlayer()][0]), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/47B532D3")), PlayerGroupAll());
        gv_HeroReviveCountNum[EventPlayer()][0] -= 1;
        Wait(1.0, c_timeReal);
    }
    libNtve_gf_SetDialogItemText(gv_HeroReviveWindowTime[EventPlayer()], (StringExternal("Param/Value/9E9D9A06") + IntToText(gv_HeroReviveCountNum[EventPlayer()][0]) + StringExternal("Param/Value/90BBD409")), PlayerGroupSingle(EventPlayer()));
    libNtve_gf_SetDialogItemText(gv_ScoreDialogReviveTime[EventPlayer()], (StringExternal("Param/Value/9FFA7755") + TextWithColor(IntToText(gv_HeroReviveCountNum[EventPlayer()][0]), Color(100.00, 100.00, 100.00)) + StringExternal("Param/Value/F90F65FE")), PlayerGroupAll());
    gv_HeroReviveCountNum[EventPlayer()][0] = gv_HeroReviveCountNum[EventPlayer()][1];
    if ((UnitGetType(gv_PlayerHero[EventPlayer()]) != "Hero19")) {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (PlayerStatus(EventPlayer()) == c_playerStatusActive)) {
            UnitSetPosition(gv_PlayerHero[EventPlayer()], PointFromId(194), false);
            UnitRevive(gv_PlayerHero[EventPlayer()]);
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (PlayerStatus(EventPlayer()) == c_playerStatusActive)) {
                UnitSetPosition(gv_PlayerHero[EventPlayer()], PointFromId(195), false);
                UnitRevive(gv_PlayerHero[EventPlayer()]);
            }

        }
        UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropLifePercent, 100.0);
        if ((gv_CharNoMana[EventPlayer()] != 3)) {
            UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergyPercent, 100.0);
        }
        else {
            UnitSetPropertyFixed(gv_PlayerHero[EventPlayer()], c_unitPropEnergyPercent, 0.0);
        }
        Wait(0.1, c_timeReal);
        if ((PlayerStatus(EventPlayer()) == c_playerStatusActive) && (gv_GameEndBoolean == false)) {
            DialogSetVisible(gv_HeroReviveWindow, PlayerGroupSingle(EventPlayer()), false);
            DialogControlSetVisible(gv_HeroReviveWindowTime[EventPlayer()], PlayerGroupSingle(EventPlayer()), false);
            PlayerCreateEffectUnit(EventPlayer(), "ApplyIncapBehavior23", gv_PlayerHero[EventPlayer()]);
            CameraPan(EventPlayer(), UnitGetPosition(gv_PlayerHero[EventPlayer()]), 0.0, -1, 10, false);
            Wait(0.1, c_timeReal);
            UnitClearSelection(EventPlayer());
            UnitSelect(gv_PlayerHero[EventPlayer()], EventPlayer(), true);
            libNtve_gf_SetDialogItemText(gv_ScoreDialogName[EventPlayer()], (StringExternal("Param/Value/4D982F7B") + PlayerName(EventPlayer()) + StringExternal("Param/Value/B1D555C7")), PlayerGroupAll());
            libNtve_gf_SetDialogItemColor(gv_ScoreDialogHeroImage[EventPlayer()], Color(100,100,100), PlayerGroupAll());
            DialogControlFadeTransparency(gv_ScoreDialogHeroImage[EventPlayer()], PlayerGroupAll(), 0.0, 0.0);
            DialogControlSetVisible(gv_ScoreDialogReviveTime[EventPlayer()], PlayerGroupAll(), false);
            gv_HeroDeathBoolean[EventPlayer()] = false;
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_HeroAllKill[0] == true)) {
                gv_HeroAllKill[0] = false;
            }
            else {
                if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_HeroAllKill[1] == true)) {
                    gv_HeroAllKill[1] = false;
                }

            }
            gf_HrHeroPassiveRepair();
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrHeroReviveStand_Init () {
    gt_TrHeroReviveStand = TriggerCreate("gt_TrHeroReviveStand_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ??????(1???)
//--------------------------------------------------------------------------------------------------
bool gt_TrNexusDestroyTeam1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;
    int lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80;
    int lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80;
    int lv_eC84A4ECA095EAB480ECA084ED8C80;

    // Automatic Variable Declarations
    const int autoDBF70087_ae = 8;
    const int autoDBF70087_ai = 1;
    const int auto2C7DE2FE_ae = 8;
    const int auto2C7DE2FE_ai = 1;
    const int auto8ABF4070_ae = 4;
    const int auto8ABF4070_ai = 1;
    const int auto786128E9_ae = 10;
    const int auto786128E9_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 = 1;
    lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 = 5;
    lv_eC84A4ECA095EAB480ECA084ED8C80 = 9;

    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_GameEndBoolean = true;
    TriggerEnable(gt_TrNexusDestroyTeam2, false);
    TriggerStop(gt_TrMinionMake);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    UISetDragSelectEnabled(PlayerGroupAll(), false);
    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogGenericButton1, false);
    DialogSetVisible(gv_ScoreDialog[0], PlayerGroupAll(), false);
    DialogSetVisible(gv_ScoreDialog[1], PlayerGroupAll(), false);
    DialogSetVisible(gv_ScoreDialog[2], PlayerGroupAll(), false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, c_transitionDurationDefault);
    DialogSetVisible(gv_StatusWindow, PlayerGroupAll(), false);
    DialogSetVisible(gv_StatusWindow2, PlayerGroupAll(), false);
    DialogSetVisible(gv_HeroFixedBtnWindow, PlayerGroupAll(), false);
    DialogSetVisible(gv_HeroReviveWindow, PlayerGroupAll(), false);
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (autoDBF70087_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= autoDBF70087_ae) || (autoDBF70087_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= autoDBF70087_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += autoDBF70087_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive)) {
            CameraLockInput(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], true);
            CameraPan(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], PointFromId(293), 0.0, -1, 10, false);
            CameraShakeStart(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], c_cameraPositionTarget, c_cameraDirectionXYZ, 1.0, 1.5, 100.0, 2.5);
            DialogControlSetVisible(gv_HeroReviveWindowTime[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), false);
            gv_SkillLearnPossibleStat[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 0;
            gv_SkillLearnPossibleStatR[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 0;
            libNtve_gf_MakeUnitUncommandable(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], true);
        }

    }
    DialogSetVisible(gv_SkillLearnWindow, PlayerGroupAll(), false);
    Wait(6.0, c_timeReal);
    SoundPlay(SoundLink("SystemSound332", -1), GameAttributePlayersForTeam(2), 200.0, 0.0);
    SoundPlay(SoundLink("SystemSound3322", -1), GameAttributePlayersForTeam(1), 200.0, 0.0);
    Wait(2.0, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaDebug);
    lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 = 5;
    for ( ; ( (auto2C7DE2FE_ai >= 0 && lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 <= auto2C7DE2FE_ae) || (auto2C7DE2FE_ai < 0 && lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 >= auto2C7DE2FE_ae) ) ; lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 += auto2C7DE2FE_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80], c_gameOverVictory, true, true);
        }

    }
    lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 = 1;
    for ( ; ( (auto8ABF4070_ai >= 0 && lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 <= auto8ABF4070_ae) || (auto8ABF4070_ai < 0 && lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 >= auto8ABF4070_ae) ) ; lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 += auto8ABF4070_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80], c_gameOverDefeat, true, true);
        }

    }
    lv_eC84A4ECA095EAB480ECA084ED8C80 = 9;
    for ( ; ( (auto786128E9_ai >= 0 && lv_eC84A4ECA095EAB480ECA084ED8C80 <= auto786128E9_ae) || (auto786128E9_ai < 0 && lv_eC84A4ECA095EAB480ECA084ED8C80 >= auto786128E9_ae) ) ; lv_eC84A4ECA095EAB480ECA084ED8C80 += auto786128E9_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095EAB480ECA084ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095EAB480ECA084ED8C80], c_gameOverTie, true, true);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrNexusDestroyTeam1_Init () {
    gt_TrNexusDestroyTeam1 = TriggerCreate("gt_TrNexusDestroyTeam1_Func");
    TriggerAddEventUnitDied(gt_TrNexusDestroyTeam1, UnitRefFromUnit(UnitFromId(109)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: ????????? ??????(2???)
//--------------------------------------------------------------------------------------------------
bool gt_TrNexusDestroyTeam2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;
    int lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80;
    int lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80;
    int lv_eC84A4ECA095EAB480ECA084ED8C80;

    // Automatic Variable Declarations
    const int autoBC6B57BC_ae = 8;
    const int autoBC6B57BC_ai = 1;
    const int auto5843AE30_ae = 4;
    const int auto5843AE30_ai = 1;
    const int autoAA6E906E_ae = 8;
    const int autoAA6E906E_ai = 1;
    const int auto3CD08627_ae = 10;
    const int auto3CD08627_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 = 1;
    lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 = 5;
    lv_eC84A4ECA095EAB480ECA084ED8C80 = 9;

    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_GameEndBoolean = true;
    TriggerEnable(gt_TrNexusDestroyTeam1, false);
    TriggerStop(gt_TrMinionMake);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    UISetDragSelectEnabled(PlayerGroupAll(), false);
    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogGenericButton1, false);
    DialogSetVisible(gv_ScoreDialog[0], PlayerGroupAll(), false);
    DialogSetVisible(gv_ScoreDialog[1], PlayerGroupAll(), false);
    DialogSetVisible(gv_ScoreDialog[2], PlayerGroupAll(), false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, c_transitionDurationDefault);
    DialogSetVisible(gv_StatusWindow, PlayerGroupAll(), false);
    DialogSetVisible(gv_StatusWindow2, PlayerGroupAll(), false);
    DialogSetVisible(gv_HeroFixedBtnWindow, PlayerGroupAll(), false);
    DialogSetVisible(gv_HeroReviveWindow, PlayerGroupAll(), false);
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (autoBC6B57BC_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= autoBC6B57BC_ae) || (autoBC6B57BC_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= autoBC6B57BC_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += autoBC6B57BC_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive)) {
            CameraLockInput(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], true);
            CameraPan(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], PointFromId(266), 0.0, -1, 10, false);
            CameraShakeStart(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], c_cameraPositionTarget, c_cameraDirectionXYZ, 1.0, 1.5, 100.0, 2.5);
            DialogControlSetVisible(gv_HeroReviveWindowTime[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), false);
            gv_SkillLearnPossibleStat[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 0;
            gv_SkillLearnPossibleStatR[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 0;
            libNtve_gf_MakeUnitUncommandable(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], true);
        }

    }
    DialogSetVisible(gv_SkillLearnWindow, PlayerGroupAll(), false);
    Wait(6.0, c_timeReal);
    SoundPlay(SoundLink("SystemSound332", -1), GameAttributePlayersForTeam(1), 200.0, 0.0);
    SoundPlay(SoundLink("SystemSound3322", -1), GameAttributePlayersForTeam(2), 200.0, 0.0);
    Wait(2.0, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaDebug);
    lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 = 1;
    for ( ; ( (auto5843AE30_ai >= 0 && lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 <= auto5843AE30_ae) || (auto5843AE30_ai < 0 && lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 >= auto5843AE30_ae) ) ; lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 += auto5843AE30_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80], c_gameOverVictory, true, true);
        }

    }
    lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 = 5;
    for ( ; ( (autoAA6E906E_ai >= 0 && lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 <= autoAA6E906E_ae) || (autoAA6E906E_ai < 0 && lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 >= autoAA6E906E_ae) ) ; lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 += autoAA6E906E_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80], c_gameOverDefeat, true, true);
        }

    }
    lv_eC84A4ECA095EAB480ECA084ED8C80 = 9;
    for ( ; ( (auto3CD08627_ai >= 0 && lv_eC84A4ECA095EAB480ECA084ED8C80 <= auto3CD08627_ae) || (auto3CD08627_ai < 0 && lv_eC84A4ECA095EAB480ECA084ED8C80 >= auto3CD08627_ae) ) ; lv_eC84A4ECA095EAB480ECA084ED8C80 += auto3CD08627_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095EAB480ECA084ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095EAB480ECA084ED8C80], c_gameOverTie, true, true);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrNexusDestroyTeam2_Init () {
    gt_TrNexusDestroyTeam2 = TriggerCreate("gt_TrNexusDestroyTeam2_Func");
    TriggerAddEventUnitDied(gt_TrNexusDestroyTeam2, UnitRefFromUnit(UnitFromId(112)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ?????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderSignOk_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((gv_SurrenderPossibleBoolean[0] == false)) {
        gv_SurrenderPossibleBoolean[0] = true;
        UISetGameMenuItemVisible(GameAttributePlayersForTeam(1), c_gameMenuDialogGenericButton1, true);
        gv_PlayerOutSurrenderPossible[0] = true;
    }

    if ((gv_SurrenderPossibleBoolean[1] == false)) {
        gv_SurrenderPossibleBoolean[1] = true;
        UISetGameMenuItemVisible(GameAttributePlayersForTeam(2), c_gameMenuDialogGenericButton1, true);
        gv_PlayerOutSurrenderPossible[1] = true;
    }

    TriggerEnable(gt_TrSurrenderSystemStartBtn, true);
    TriggerEnable(gt_TrSurrenderOkTeam1, true);
    TriggerEnable(gt_TrSurrenderOkTeam2, true);
    TriggerEnable(gt_TrSurrenderNoTeam1, true);
    TriggerEnable(gt_TrSurrenderNoTeam2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderSignOk_Init () {
    gt_TrSurrenderSignOk = TriggerCreate("gt_TrSurrenderSignOk_Func");
    TriggerAddEventTimeElapsed(gt_TrSurrenderSignOk, 1200.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ?????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderReTimer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventPlayer() == 12) && (EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(194))) {
        gv_SurrenderPossibleBoolean[0] = true;
    }
    else {
        if ((EventPlayer() == 13) && (EventPlayerEffectUsedPoint(c_effectLocationTargetPoint) == PointFromId(195))) {
            gv_SurrenderPossibleBoolean[1] = true;
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderReTimer_Init () {
    gt_TrSurrenderReTimer = TriggerCreate("gt_TrSurrenderReTimer_Func");
    TriggerAddEventPlayerEffectUsed(gt_TrSurrenderReTimer, 12, "SurrenderTimerD");
    TriggerAddEventPlayerEffectUsed(gt_TrSurrenderReTimer, 13, "SurrenderTimerD");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderSystemStart_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80;

    // Automatic Variable Declarations
    const int autoDAE24574_ae = 4;
    const int autoDAE24574_ai = 1;
    const int autoDC750E18_ae = 8;
    const int autoDC750E18_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 = 21;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SurrenderDialog, EventPlayer()) == false))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_SurrenderPossibleBoolean[0] == true)) || ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_SurrenderPossibleBoolean[1] == true)))) {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
            gv_SurrenderPossibleBoolean[0] = false;
            DialogControlSetEnabled(gv_SurrenderDialogBtn[0], GameAttributePlayersForTeam(1), true);
            DialogControlSetEnabled(gv_SurrenderDialogBtn[1], GameAttributePlayersForTeam(1), true);
            DialogControlSetVisible(gv_SurrenderDialogBtn[0], GameAttributePlayersForTeam(1), true);
            DialogControlSetVisible(gv_SurrenderDialogBtn[1], GameAttributePlayersForTeam(1), true);
            libNtve_gf_SetDialogItemCurrentValue(gv_SurrenderDialogBar[0], IntToFixed(lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084), GameAttributePlayersForTeam(1));
            UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/5500CD13") + TextWithColor((StringExternal("Param/Value/0B70DF5D")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/7955829C")));
            DialogSetVisible(gv_SurrenderDialog, GameAttributePlayersForTeam(1), true);
            while ((lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 > 0)) {
                lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 -= 1;
                libNtve_gf_SetDialogItemCurrentValue(gv_SurrenderDialogBar[0], IntToFixed(lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084), GameAttributePlayersForTeam(1));
                if ((gv_SurrenderPlayerNum1 == 0)) {
                    lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 = 0;
                }

                Wait(1.0, c_timeReal);
            }
            DialogSetVisible(gv_SurrenderDialog, GameAttributePlayersForTeam(1), false);
            if ((gv_SurrenderSystemYorN[0] > gv_SurrenderSystemYorN[1]) && (gv_SurrenderPassBoolean == false)) {
                gv_SurrenderPassBoolean = true;
                UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/C0551859") + TextWithColor((StringExternal("Param/Value/96385771") + IntToText(gv_SurrenderSystemYorN[0]) + StringExternal("Param/Value/B9EACF39") + IntToText(gv_SurrenderSystemYorN[1]) + StringExternal("Param/Value/8394C363")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/AB952362")));
                UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/1841795E") + TextWithColor((StringExternal("Param/Value/942B3BA7") + StringExternal("Param/Value/EE9E472C") + IntToText(gv_SurrenderSystemYorN[0]) + StringExternal("Param/Value/5637470D") + IntToText(gv_SurrenderSystemYorN[1]) + StringExternal("Param/Value/493124A4")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/48F4AEDA")));
                Wait(2.0, c_timeReal);
                SoundPlay(SoundLink("SystemSound33", -1), PlayerGroupAll(), 200.0, 0.0);
                Wait(4.0, c_timeReal);
                TriggerExecute(gt_TrSurrenderOkTeam1Win, true, false);
            }
            else {
                if ((gv_SurrenderSystemYorN[0] <= gv_SurrenderSystemYorN[1])) {
                    UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/770A3E8D") + TextWithColor((StringExternal("Param/Value/E2F35548") + IntToText(gv_SurrenderSystemYorN[0]) + StringExternal("Param/Value/2BAAE387") + IntToText(gv_SurrenderSystemYorN[1]) + StringExternal("Param/Value/A1EB5F47")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/2F883FFA")));
                    UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/00F772C4") + TextWithColor((StringExternal("Param/Value/A9DFD27C") + StringExternal("Param/Value/EDF63074") + IntToText(gv_SurrenderSystemYorN[0]) + StringExternal("Param/Value/E4F1089E") + IntToText(gv_SurrenderSystemYorN[1]) + StringExternal("Param/Value/B95AEB37")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/7F22ABB3")));
                }

            }
            gv_SurrenderSystemYorN[0] = 0;
            gv_SurrenderSystemYorN[1] = 0;
            libNtve_gf_SetDialogItemText(gv_SurrenderDialogLabel[1], (StringExternal("Param/Value/05F78DFB") + TextWithColor(IntToText(gv_SurrenderSystemYorN[0]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/0FF734A0"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[1]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/405D30AF")), GameAttributePlayersForTeam(1));
            PlayerCreateEffectPoint(12, "SurrenderTimer", PointFromId(194));
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
                gv_SurrenderPossibleBoolean[1] = false;
                DialogControlSetEnabled(gv_SurrenderDialogBtn[0], GameAttributePlayersForTeam(2), true);
                DialogControlSetEnabled(gv_SurrenderDialogBtn[1], GameAttributePlayersForTeam(2), true);
                DialogControlSetVisible(gv_SurrenderDialogBtn[0], GameAttributePlayersForTeam(2), true);
                DialogControlSetVisible(gv_SurrenderDialogBtn[1], GameAttributePlayersForTeam(2), true);
                libNtve_gf_SetDialogItemCurrentValue(gv_SurrenderDialogBar[1], IntToFixed(lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084), GameAttributePlayersForTeam(2));
                UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/19592732") + TextWithColor((StringExternal("Param/Value/DBC7F3A8")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/7850E154")));
                DialogSetVisible(gv_SurrenderDialog, GameAttributePlayersForTeam(2), true);
                while ((lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 > 0)) {
                    lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 -= 1;
                    libNtve_gf_SetDialogItemCurrentValue(gv_SurrenderDialogBar[1], IntToFixed(lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084), GameAttributePlayersForTeam(2));
                    if ((gv_SurrenderPlayerNum2 == 0)) {
                        lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 = 0;
                    }

                    Wait(1.0, c_timeReal);
                }
                DialogSetVisible(gv_SurrenderDialog, GameAttributePlayersForTeam(2), false);
                if ((gv_SurrenderSystemYorN[2] > gv_SurrenderSystemYorN[3]) && (gv_SurrenderPassBoolean == false)) {
                    gv_SurrenderPassBoolean = true;
                    UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/14E894A4") + TextWithColor((StringExternal("Param/Value/E47A8158") + IntToText(gv_SurrenderSystemYorN[2]) + StringExternal("Param/Value/E8FB06B5") + IntToText(gv_SurrenderSystemYorN[3]) + StringExternal("Param/Value/6B0B0244")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/9B3D4250")));
                    UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/A59B654E") + TextWithColor((StringExternal("Param/Value/47B7C1A8") + StringExternal("Param/Value/9D0423F2") + IntToText(gv_SurrenderSystemYorN[2]) + StringExternal("Param/Value/2E6BD199") + IntToText(gv_SurrenderSystemYorN[3]) + StringExternal("Param/Value/3E4DC648")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/3E1764C7")));
                    Wait(2.0, c_timeReal);
                    SoundPlay(SoundLink("SystemSound33", -1), PlayerGroupAll(), 200.0, 0.0);
                    Wait(4.0, c_timeReal);
                    TriggerExecute(gt_TrSurrenderOkTeam2Win, true, false);
                }
                else {
                    if ((gv_SurrenderSystemYorN[2] <= gv_SurrenderSystemYorN[3])) {
                        UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/0683A4DB") + TextWithColor((StringExternal("Param/Value/059CBA96") + IntToText(gv_SurrenderSystemYorN[2]) + StringExternal("Param/Value/09645C38") + IntToText(gv_SurrenderSystemYorN[3]) + StringExternal("Param/Value/9BFC2D9D")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/EB860776")));
                        UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/0985732D") + TextWithColor((StringExternal("Param/Value/C96EA190") + StringExternal("Param/Value/0BF24BF8") + IntToText(gv_SurrenderSystemYorN[2]) + StringExternal("Param/Value/7E843F88") + IntToText(gv_SurrenderSystemYorN[3]) + StringExternal("Param/Value/48F7D6A1")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/94518820")));
                    }

                }
                gv_SurrenderSystemYorN[2] = 0;
                gv_SurrenderSystemYorN[3] = 0;
                libNtve_gf_SetDialogItemText(gv_SurrenderDialogLabel[2], (StringExternal("Param/Value/8FCAE68D") + TextWithColor(IntToText(gv_SurrenderSystemYorN[2]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/CE6815C6"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[3]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/BA1EC018")), GameAttributePlayersForTeam(2));
                PlayerCreateEffectPoint(13, "SurrenderTimer", PointFromId(195));
            }

        }
        lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
        for ( ; ( (autoDAE24574_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 <= autoDAE24574_ae) || (autoDAE24574_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 >= autoDAE24574_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 += autoDAE24574_ai ) {
            if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerStatusActive)) {
                gv_SurrenderPlayerNum1 += 1;
            }

        }
        lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;
        for ( ; ( (autoDC750E18_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 <= autoDC750E18_ae) || (autoDC750E18_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 >= autoDC750E18_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 += autoDC750E18_ai ) {
            if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerStatusActive)) {
                gv_SurrenderPlayerNum2 += 1;
            }

        }
    }
    else {
        if ((GameGetMissionTime() <= 1200.0)) {
            SoundPlay(SoundLink("UI_GenericError", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/A1AAE20E"));
        }
        else {
            SoundPlay(SoundLink("UI_GenericError", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/83FA03B4"));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderSystemStart_Init () {
    gt_TrSurrenderSystemStart = TriggerCreate("gt_TrSurrenderSystemStart_Func");
    TriggerAddEventChatMessage(gt_TrSurrenderSystemStart, c_playerAny, "-gg", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????(??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderSystemStartBtn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80;

    // Automatic Variable Declarations
    const int autoA9127715_ae = 4;
    const int autoA9127715_ai = 1;
    const int auto255BF192_ae = 8;
    const int auto255BF192_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 = 21;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SurrenderDialog, EventPlayer()) == false))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true) && (gv_SurrenderPossibleBoolean[0] == true)) || ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true) && (gv_SurrenderPossibleBoolean[1] == true)))) {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
            gv_SurrenderPossibleBoolean[0] = false;
            DialogControlSetEnabled(gv_SurrenderDialogBtn[0], GameAttributePlayersForTeam(1), true);
            DialogControlSetEnabled(gv_SurrenderDialogBtn[1], GameAttributePlayersForTeam(1), true);
            DialogControlSetVisible(gv_SurrenderDialogBtn[0], GameAttributePlayersForTeam(1), true);
            DialogControlSetVisible(gv_SurrenderDialogBtn[1], GameAttributePlayersForTeam(1), true);
            libNtve_gf_SetDialogItemCurrentValue(gv_SurrenderDialogBar[0], IntToFixed(lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084), GameAttributePlayersForTeam(1));
            UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/FA6E8A44") + TextWithColor((StringExternal("Param/Value/05B30B49")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/F485EF06")));
            DialogSetVisible(gv_SurrenderDialog, GameAttributePlayersForTeam(1), true);
            while ((lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 > 0)) {
                lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 -= 1;
                libNtve_gf_SetDialogItemCurrentValue(gv_SurrenderDialogBar[0], IntToFixed(lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084), GameAttributePlayersForTeam(1));
                if ((gv_SurrenderPlayerNum1 == 0)) {
                    lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 = 0;
                }

                Wait(1.0, c_timeReal);
            }
            DialogSetVisible(gv_SurrenderDialog, GameAttributePlayersForTeam(1), false);
            if ((gv_SurrenderSystemYorN[0] > gv_SurrenderSystemYorN[1]) && (gv_SurrenderPassBoolean == false)) {
                gv_SurrenderPassBoolean = true;
                UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/D71EED0B") + TextWithColor((StringExternal("Param/Value/A2BAAEE5") + IntToText(gv_SurrenderSystemYorN[0]) + StringExternal("Param/Value/7DAE5255") + IntToText(gv_SurrenderSystemYorN[1]) + StringExternal("Param/Value/6C8EDECB")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/AA3501F5")));
                UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/AB13964B") + TextWithColor((StringExternal("Param/Value/AA070024") + StringExternal("Param/Value/70E17570") + IntToText(gv_SurrenderSystemYorN[0]) + StringExternal("Param/Value/99833E4B") + IntToText(gv_SurrenderSystemYorN[1]) + StringExternal("Param/Value/8BE47512")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/FF396FB0")));
                Wait(2.0, c_timeReal);
                SoundPlay(SoundLink("SystemSound33", -1), PlayerGroupAll(), 200.0, 0.0);
                Wait(4.0, c_timeReal);
                TriggerExecute(gt_TrSurrenderOkTeam1Win, true, false);
            }
            else {
                if ((gv_SurrenderSystemYorN[0] <= gv_SurrenderSystemYorN[1])) {
                    UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/E7624095") + TextWithColor((StringExternal("Param/Value/AB329B66") + IntToText(gv_SurrenderSystemYorN[0]) + StringExternal("Param/Value/06977E96") + IntToText(gv_SurrenderSystemYorN[1]) + StringExternal("Param/Value/D359E43A")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/DB049DC5")));
                    UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/D3D8450D") + TextWithColor((StringExternal("Param/Value/A060DF4F") + StringExternal("Param/Value/75389295") + IntToText(gv_SurrenderSystemYorN[0]) + StringExternal("Param/Value/D8A30960") + IntToText(gv_SurrenderSystemYorN[1]) + StringExternal("Param/Value/E220A797")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/E6A4753D")));
                }

            }
            gv_SurrenderSystemYorN[0] = 0;
            gv_SurrenderSystemYorN[1] = 0;
            libNtve_gf_SetDialogItemText(gv_SurrenderDialogLabel[1], (StringExternal("Param/Value/3D76D2D5") + TextWithColor(IntToText(gv_SurrenderSystemYorN[0]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/ED1344A7"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[1]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/9C4B6505")), GameAttributePlayersForTeam(1));
            PlayerCreateEffectPoint(12, "SurrenderTimer", PointFromId(194));
        }
        else {
            if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
                gv_SurrenderPossibleBoolean[1] = false;
                DialogControlSetEnabled(gv_SurrenderDialogBtn[0], GameAttributePlayersForTeam(2), true);
                DialogControlSetEnabled(gv_SurrenderDialogBtn[1], GameAttributePlayersForTeam(2), true);
                DialogControlSetVisible(gv_SurrenderDialogBtn[0], GameAttributePlayersForTeam(2), true);
                DialogControlSetVisible(gv_SurrenderDialogBtn[1], GameAttributePlayersForTeam(2), true);
                libNtve_gf_SetDialogItemCurrentValue(gv_SurrenderDialogBar[1], IntToFixed(lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084), GameAttributePlayersForTeam(2));
                UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/F69E1C8C") + TextWithColor((StringExternal("Param/Value/A5B378CC")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/C2612890")));
                DialogSetVisible(gv_SurrenderDialog, GameAttributePlayersForTeam(2), true);
                while ((lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 > 0)) {
                    lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 -= 1;
                    libNtve_gf_SetDialogItemCurrentValue(gv_SurrenderDialogBar[1], IntToFixed(lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084), GameAttributePlayersForTeam(2));
                    if ((gv_SurrenderPlayerNum2 == 0)) {
                        lv_eC84A4ECA095ED95ADEBB3B5ECA09CED959CEC8B9CEAB084 = 0;
                    }

                    Wait(1.0, c_timeReal);
                }
                DialogSetVisible(gv_SurrenderDialog, GameAttributePlayersForTeam(2), false);
                if ((gv_SurrenderSystemYorN[2] > gv_SurrenderSystemYorN[3]) && (gv_SurrenderPassBoolean == false)) {
                    gv_SurrenderPassBoolean = true;
                    UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/35E51FE1") + TextWithColor((StringExternal("Param/Value/5129D04D") + IntToText(gv_SurrenderSystemYorN[2]) + StringExternal("Param/Value/8C1EF952") + IntToText(gv_SurrenderSystemYorN[3]) + StringExternal("Param/Value/A61ADDD0")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/56A18217")));
                    UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/24C8143B") + TextWithColor((StringExternal("Param/Value/24A1E305") + StringExternal("Param/Value/0DB8EA23") + IntToText(gv_SurrenderSystemYorN[2]) + StringExternal("Param/Value/FFC929AF") + IntToText(gv_SurrenderSystemYorN[3]) + StringExternal("Param/Value/F50FE2FD")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/D64E8C6B")));
                    Wait(2.0, c_timeReal);
                    SoundPlay(SoundLink("SystemSound33", -1), PlayerGroupAll(), 200.0, 0.0);
                    Wait(4.0, c_timeReal);
                    TriggerExecute(gt_TrSurrenderOkTeam2Win, true, false);
                }
                else {
                    if ((gv_SurrenderSystemYorN[2] <= gv_SurrenderSystemYorN[3])) {
                        UIDisplayMessage(GameAttributePlayersForTeam(2), c_messageAreaDebug, (StringExternal("Param/Value/627EECC4") + TextWithColor((StringExternal("Param/Value/1B9E6504") + IntToText(gv_SurrenderSystemYorN[2]) + StringExternal("Param/Value/65D3A86B") + IntToText(gv_SurrenderSystemYorN[3]) + StringExternal("Param/Value/5F7DC7F5")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/976D7538")));
                        UIDisplayMessage(GameAttributePlayersForTeam(1), c_messageAreaDebug, (StringExternal("Param/Value/78321FB8") + TextWithColor((StringExternal("Param/Value/5D69451B") + StringExternal("Param/Value/D8687D64") + IntToText(gv_SurrenderSystemYorN[2]) + StringExternal("Param/Value/2BF59278") + IntToText(gv_SurrenderSystemYorN[3]) + StringExternal("Param/Value/41441DBC")), Color(100.00, 90.20, 0.00)) + StringExternal("Param/Value/4DBDAAF3")));
                    }

                }
                gv_SurrenderSystemYorN[2] = 0;
                gv_SurrenderSystemYorN[3] = 0;
                libNtve_gf_SetDialogItemText(gv_SurrenderDialogLabel[2], (StringExternal("Param/Value/4988EFD0") + TextWithColor(IntToText(gv_SurrenderSystemYorN[2]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/61F62479"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[3]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/9FE9A3C5")), GameAttributePlayersForTeam(2));
                PlayerCreateEffectPoint(13, "SurrenderTimer", PointFromId(195));
            }

        }
        lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
        for ( ; ( (autoA9127715_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 <= autoA9127715_ae) || (autoA9127715_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 >= autoA9127715_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 += autoA9127715_ai ) {
            if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerStatusActive)) {
                gv_SurrenderPlayerNum1 += 1;
            }

        }
        lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;
        for ( ; ( (auto255BF192_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 <= auto255BF192_ae) || (auto255BF192_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 >= auto255BF192_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 += auto255BF192_ai ) {
            if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerStatusActive)) {
                gv_SurrenderPlayerNum2 += 1;
            }

        }
    }
    else {
        if ((GameGetMissionTime() <= 1200.0)) {
            SoundPlay(SoundLink("UI_GenericError", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/B7215932"));
        }
        else {
            SoundPlay(SoundLink("UI_GenericError", -1), PlayerGroupSingle(EventPlayer()), 100.0, 0.0);
            UIDisplayMessage(PlayerGroupSingle(EventPlayer()), c_messageAreaError, StringExternal("Param/Value/6778B434"));
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderSystemStartBtn_Init () {
    gt_TrSurrenderSystemStartBtn = TriggerCreate("gt_TrSurrenderSystemStartBtn_Func");
    TriggerEnable(gt_TrSurrenderSystemStartBtn, false);
    TriggerAddEventGameMenuItemSelected(gt_TrSurrenderSystemStartBtn, c_playerAny, c_gameMenuDialogGenericButton1);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????(1???)
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderOkTeam1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SurrenderDialog, EventPlayer()) == true))) {
            return false;
        }

        if (!((EventDialogControl() == gv_SurrenderDialogBtn[0]))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_SurrenderBtnDelay[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_SurrenderBtnDelay[EventPlayer()] = true;
    DialogControlSetEnabled(gv_SurrenderDialogBtn[0], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_SurrenderDialogBtn[1], PlayerGroupSingle(EventPlayer()), false);
    gv_SurrenderSystemYorN[0] += 1;
    libNtve_gf_SetDialogItemText(gv_SurrenderDialogLabel[1], (StringExternal("Param/Value/503D40BF") + TextWithColor(IntToText(gv_SurrenderSystemYorN[0]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/DF1EE827"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[1]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/47675D72")), GameAttributePlayersForTeam(1));
    gv_SurrenderPlayerNum1 -= 1;
    Wait(3.0, c_timeReal);
    gv_SurrenderBtnDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderOkTeam1_Init () {
    gt_TrSurrenderOkTeam1 = TriggerCreate("gt_TrSurrenderOkTeam1_Func");
    TriggerEnable(gt_TrSurrenderOkTeam1, false);
    TriggerAddEventDialogControl(gt_TrSurrenderOkTeam1, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????(2???)
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderOkTeam2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SurrenderDialog, EventPlayer()) == true))) {
            return false;
        }

        if (!((EventDialogControl() == gv_SurrenderDialogBtn[0]))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_SurrenderBtnDelay[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_SurrenderBtnDelay[EventPlayer()] = true;
    DialogControlSetEnabled(gv_SurrenderDialogBtn[0], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_SurrenderDialogBtn[1], PlayerGroupSingle(EventPlayer()), false);
    gv_SurrenderSystemYorN[2] += 1;
    libNtve_gf_SetDialogItemText(gv_SurrenderDialogLabel[2], (StringExternal("Param/Value/63A99AB4") + TextWithColor(IntToText(gv_SurrenderSystemYorN[2]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/13D6C5A3"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[3]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/BF4F2547")), GameAttributePlayersForTeam(2));
    gv_SurrenderPlayerNum2 -= 1;
    Wait(3.0, c_timeReal);
    gv_SurrenderBtnDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderOkTeam2_Init () {
    gt_TrSurrenderOkTeam2 = TriggerCreate("gt_TrSurrenderOkTeam2_Func");
    TriggerEnable(gt_TrSurrenderOkTeam2, false);
    TriggerAddEventDialogControl(gt_TrSurrenderOkTeam2, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????(1???)
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderNoTeam1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SurrenderDialog, EventPlayer()) == true))) {
            return false;
        }

        if (!((EventDialogControl() == gv_SurrenderDialogBtn[1]))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_SurrenderBtnDelay[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_SurrenderBtnDelay[EventPlayer()] = true;
    DialogControlSetEnabled(gv_SurrenderDialogBtn[1], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_SurrenderDialogBtn[0], PlayerGroupSingle(EventPlayer()), false);
    gv_SurrenderSystemYorN[1] += 1;
    libNtve_gf_SetDialogItemText(gv_SurrenderDialogLabel[1], (StringExternal("Param/Value/91E6B7E6") + TextWithColor(IntToText(gv_SurrenderSystemYorN[0]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/A509C46D"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[1]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/AAAA0F60")), GameAttributePlayersForTeam(1));
    gv_SurrenderPlayerNum1 -= 1;
    Wait(3.0, c_timeReal);
    gv_SurrenderBtnDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderNoTeam1_Init () {
    gt_TrSurrenderNoTeam1 = TriggerCreate("gt_TrSurrenderNoTeam1_Func");
    TriggerEnable(gt_TrSurrenderNoTeam1, false);
    TriggerAddEventDialogControl(gt_TrSurrenderNoTeam1, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ????????? ??????(2???)
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderNoTeam2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((DialogIsVisible(gv_SurrenderDialog, EventPlayer()) == true))) {
            return false;
        }

        if (!((EventDialogControl() == gv_SurrenderDialogBtn[1]))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true))) {
            return false;
        }

        if (!((gv_GameStartBoolean == true))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }

        if (!((gv_SurrenderBtnDelay[EventPlayer()] == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_SurrenderBtnDelay[EventPlayer()] = true;
    DialogControlSetEnabled(gv_SurrenderDialogBtn[1], PlayerGroupSingle(EventPlayer()), false);
    DialogControlSetVisible(gv_SurrenderDialogBtn[0], PlayerGroupSingle(EventPlayer()), false);
    gv_SurrenderSystemYorN[3] += 1;
    libNtve_gf_SetDialogItemText(gv_SurrenderDialogLabel[2], (StringExternal("Param/Value/1A5C04D4") + TextWithColor(IntToText(gv_SurrenderSystemYorN[2]), Color(50.20, 100.00, 50.20)) + TextWithColor(StringExternal("Param/Value/8D6693DC"), Color(100.00, 100.00, 100.00)) + TextWithColor(IntToText(gv_SurrenderSystemYorN[3]), Color(100.00, 57.65, 57.65)) + StringExternal("Param/Value/563083E6")), GameAttributePlayersForTeam(2));
    gv_SurrenderPlayerNum2 -= 1;
    Wait(3.0, c_timeReal);
    gv_SurrenderBtnDelay[EventPlayer()] = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderNoTeam2_Init () {
    gt_TrSurrenderNoTeam2 = TriggerCreate("gt_TrSurrenderNoTeam2_Func");
    TriggerEnable(gt_TrSurrenderNoTeam2, false);
    TriggerAddEventDialogControl(gt_TrSurrenderNoTeam2, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(1??? ??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderOkTeam1Win_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;
    int lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80;
    int lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80;
    int lv_eC84A4ECA095EAB480ECA084ED8C80;

    // Automatic Variable Declarations
    const int auto3A0F5E69_ae = 8;
    const int auto3A0F5E69_ai = 1;
    const int auto556C66B4_ae = 8;
    const int auto556C66B4_ai = 1;
    const int auto09E72BF3_ae = 4;
    const int auto09E72BF3_ai = 1;
    const int auto0AE045BC_ae = 10;
    const int auto0AE045BC_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 = 1;
    lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 = 5;
    lv_eC84A4ECA095EAB480ECA084ED8C80 = 9;

    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_GameEndBoolean = true;
    TriggerEnable(gt_TrNexusDestroyTeam2, false);
    TriggerStop(gt_TrMinionMake);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    UISetDragSelectEnabled(PlayerGroupAll(), false);
    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogGenericButton1, false);
    DialogSetVisible(gv_ScoreDialog[0], PlayerGroupAll(), false);
    DialogSetVisible(gv_ScoreDialog[1], PlayerGroupAll(), false);
    DialogSetVisible(gv_ScoreDialog[2], PlayerGroupAll(), false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, c_transitionDurationDefault);
    DialogSetVisible(gv_StatusWindow, PlayerGroupAll(), false);
    DialogSetVisible(gv_StatusWindow2, PlayerGroupAll(), false);
    DialogSetVisible(gv_HeroFixedBtnWindow, PlayerGroupAll(), false);
    DialogSetVisible(gv_HeroReviveWindow, PlayerGroupAll(), false);
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (auto3A0F5E69_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= auto3A0F5E69_ae) || (auto3A0F5E69_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= auto3A0F5E69_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += auto3A0F5E69_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive)) {
            CameraLockInput(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], true);
            CameraPan(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], PointFromId(293), 0.0, -1, 10, false);
            CameraShakeStart(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], c_cameraPositionTarget, c_cameraDirectionXYZ, 1.0, 1.5, 100.0, 2.5);
            DialogControlSetVisible(gv_HeroReviveWindowTime[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), false);
            gv_SkillLearnPossibleStat[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 0;
            gv_SkillLearnPossibleStatR[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 0;
            libNtve_gf_MakeUnitUncommandable(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], true);
            VisRevealArea(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], RegionCircle(PointFromId(293), 20.0), 20.0, false);
        }

    }
    Wait(0.25, c_timeReal);
    UnitKill(UnitFromId(109));
    DialogSetVisible(gv_SkillLearnWindow, PlayerGroupAll(), false);
    Wait(6.0, c_timeReal);
    SoundPlay(SoundLink("SystemSound332", -1), GameAttributePlayersForTeam(2), 200.0, 0.0);
    SoundPlay(SoundLink("SystemSound3322", -1), GameAttributePlayersForTeam(1), 200.0, 0.0);
    Wait(2.0, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaDebug);
    lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 = 5;
    for ( ; ( (auto556C66B4_ai >= 0 && lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 <= auto556C66B4_ae) || (auto556C66B4_ai < 0 && lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 >= auto556C66B4_ae) ) ; lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80 += auto556C66B4_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095EC8AB9EBA6ACED8C802ED8C80], c_gameOverVictory, true, true);
        }

    }
    lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 = 1;
    for ( ; ( (auto09E72BF3_ai >= 0 && lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 <= auto09E72BF3_ae) || (auto09E72BF3_ai < 0 && lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 >= auto09E72BF3_ae) ) ; lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80 += auto09E72BF3_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095ED8CA8EBB0B0ED8C801ED8C80], c_gameOverDefeat, true, true);
        }

    }
    lv_eC84A4ECA095EAB480ECA084ED8C80 = 9;
    for ( ; ( (auto0AE045BC_ai >= 0 && lv_eC84A4ECA095EAB480ECA084ED8C80 <= auto0AE045BC_ae) || (auto0AE045BC_ai < 0 && lv_eC84A4ECA095EAB480ECA084ED8C80 >= auto0AE045BC_ae) ) ; lv_eC84A4ECA095EAB480ECA084ED8C80 += auto0AE045BC_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095EAB480ECA084ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095EAB480ECA084ED8C80], c_gameOverTie, true, true);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderOkTeam1Win_Init () {
    gt_TrSurrenderOkTeam1Win = TriggerCreate("gt_TrSurrenderOkTeam1Win_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ?????? ??????(2??? ??????)
//--------------------------------------------------------------------------------------------------
bool gt_TrSurrenderOkTeam2Win_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898;
    int lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80;
    int lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80;
    int lv_eC84A4ECA095EAB480ECA084ED8C80;

    // Automatic Variable Declarations
    const int autoAC2DFF61_ae = 8;
    const int autoAC2DFF61_ai = 1;
    const int auto2CA68AA5_ae = 4;
    const int auto2CA68AA5_ai = 1;
    const int auto37557BFF_ae = 8;
    const int auto37557BFF_ai = 1;
    const int auto06A1C434_ae = 10;
    const int auto06A1C434_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 = 1;
    lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 = 5;
    lv_eC84A4ECA095EAB480ECA084ED8C80 = 9;

    // Conditions
    if (testConds) {
        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_GameEndBoolean = true;
    TriggerEnable(gt_TrNexusDestroyTeam1, false);
    TriggerStop(gt_TrMinionMake);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    UISetDragSelectEnabled(PlayerGroupAll(), false);
    UISetGameMenuItemVisible(PlayerGroupAll(), c_gameMenuDialogGenericButton1, false);
    DialogSetVisible(gv_ScoreDialog[0], PlayerGroupAll(), false);
    DialogSetVisible(gv_ScoreDialog[1], PlayerGroupAll(), false);
    DialogSetVisible(gv_ScoreDialog[2], PlayerGroupAll(), false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, c_transitionDurationDefault);
    DialogSetVisible(gv_StatusWindow, PlayerGroupAll(), false);
    DialogSetVisible(gv_StatusWindow2, PlayerGroupAll(), false);
    DialogSetVisible(gv_HeroFixedBtnWindow, PlayerGroupAll(), false);
    DialogSetVisible(gv_HeroReviveWindow, PlayerGroupAll(), false);
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 = 1;
    for ( ; ( (autoAC2DFF61_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 <= autoAC2DFF61_ae) || (autoAC2DFF61_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 >= autoAC2DFF61_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898 += autoAC2DFF61_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]) == c_playerStatusActive)) {
            CameraLockInput(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], true);
            CameraPan(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], PointFromId(266), 0.0, -1, 10, false);
            CameraShakeStart(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], c_cameraPositionTarget, c_cameraDirectionXYZ, 1.0, 1.5, 100.0, 2.5);
            DialogControlSetVisible(gv_HeroReviveWindowTime[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], PlayerGroupSingle(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]), false);
            gv_SkillLearnPossibleStat[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 0;
            gv_SkillLearnPossibleStatR[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]] = 0;
            libNtve_gf_MakeUnitUncommandable(gv_PlayerHero[gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898]], true);
            VisRevealArea(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4ECA095EC8898], RegionCircle(PointFromId(266), 20.0), 20.0, false);
        }

    }
    Wait(0.25, c_timeReal);
    UnitKill(UnitFromId(112));
    DialogSetVisible(gv_SkillLearnWindow, PlayerGroupAll(), false);
    Wait(6.0, c_timeReal);
    SoundPlay(SoundLink("SystemSound332", -1), GameAttributePlayersForTeam(1), 200.0, 0.0);
    SoundPlay(SoundLink("SystemSound3322", -1), GameAttributePlayersForTeam(2), 200.0, 0.0);
    Wait(2.0, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaDebug);
    lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 = 1;
    for ( ; ( (auto2CA68AA5_ai >= 0 && lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 <= auto2CA68AA5_ae) || (auto2CA68AA5_ai < 0 && lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 >= auto2CA68AA5_ae) ) ; lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80 += auto2CA68AA5_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095EC8AB9EBA6ACED8C801ED8C80], c_gameOverVictory, true, true);
        }

    }
    lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 = 5;
    for ( ; ( (auto37557BFF_ai >= 0 && lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 <= auto37557BFF_ae) || (auto37557BFF_ai < 0 && lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 >= auto37557BFF_ae) ) ; lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80 += auto37557BFF_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095ED8CA8EBB0B0ED8C802ED8C80], c_gameOverDefeat, true, true);
        }

    }
    lv_eC84A4ECA095EAB480ECA084ED8C80 = 9;
    for ( ; ( (auto06A1C434_ai >= 0 && lv_eC84A4ECA095EAB480ECA084ED8C80 <= auto06A1C434_ae) || (auto06A1C434_ai < 0 && lv_eC84A4ECA095EAB480ECA084ED8C80 >= auto06A1C434_ae) ) ; lv_eC84A4ECA095EAB480ECA084ED8C80 += auto06A1C434_ai ) {
        if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095EAB480ECA084ED8C80]) == c_playerTypeUser)) {
            GameOver(gv_PlayerBayul[lv_eC84A4ECA095EAB480ECA084ED8C80], c_gameOverTie, true, true);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrSurrenderOkTeam2Win_Init () {
    gt_TrSurrenderOkTeam2Win = TriggerCreate("gt_TrSurrenderOkTeam2Win_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ???????????? ??????
//--------------------------------------------------------------------------------------------------
bool gt_TrPlayerOut_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80;
    int lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80;

    // Automatic Variable Declarations
    const int auto9387ADE0_ae = 8;
    const int auto9387ADE0_ai = 1;
    const int auto10251A8B_ae = 4;
    const int auto10251A8B_ai = 1;

    // Variable Initialization
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
    lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;

    // Conditions
    if (testConds) {
        if (!((PlayerType(EventPlayer()) == c_playerTypeUser))) {
            return false;
        }

        if (!((PlayerGroupHasPlayer(GameAttributePlayersForTeam(3), EventPlayer()) == false))) {
            return false;
        }

        if (!((PlayerGroupCount(gv_AllPlayerGroup) > 1))) {
            return false;
        }

        if (!((gv_GameEndBoolean == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerGroupRemove(gv_AllPlayerGroup, EventPlayer());
    gv_HeroDeathBoolean[EventPlayer()] = true;
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropMinerals, c_playerPropOperSetTo, 0);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperSetTo, 0);
    if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(1), EventPlayer()) == true)) {
        gv_SurrenderPlayerNum1 -= 1;
        PlayerGroupRemove(gv_TeamPlayerGroup[0], EventPlayer());
        lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 = 1;
        for ( ; ( (auto10251A8B_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 <= auto10251A8B_ae) || (auto10251A8B_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 >= auto10251A8B_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80 += auto10251A8B_ai ) {
            if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80]) == c_playerStatusActive) && (gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80] != EventPlayer())) {
                PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], c_playerPropMinerals, c_playerPropOperAdd, gv_AllyGiveMoney[EventPlayer()]);
                PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88981ED8C80], c_playerPropVespene, c_playerPropOperAdd, 10);
            }

        }
        if ((gv_PlayerOutSurrenderPossible[0] == false)) {
            gv_PlayerOutSurrenderPossible[0] = true;
            gv_SurrenderPossibleBoolean[0] = true;
            UISetGameMenuItemVisible(GameAttributePlayersForTeam(1), c_gameMenuDialogGenericButton1, true);
            if ((gv_PlayerOutSurrenderPossible[2] == false)) {
                gv_PlayerOutSurrenderPossible[2] = true;
                TriggerEnable(gt_TrSurrenderSystemStartBtn, true);
                TriggerEnable(gt_TrSurrenderOkTeam1, true);
                TriggerEnable(gt_TrSurrenderOkTeam2, true);
                TriggerEnable(gt_TrSurrenderNoTeam1, true);
                TriggerEnable(gt_TrSurrenderNoTeam2, true);
            }

        }

    }
    else {
        if ((PlayerGroupHasPlayer(GameAttributePlayersForTeam(2), EventPlayer()) == true)) {
            gv_SurrenderPlayerNum2 -= 1;
            PlayerGroupRemove(gv_TeamPlayerGroup[1], EventPlayer());
            lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 = 5;
            for ( ; ( (auto9387ADE0_ai >= 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 <= auto9387ADE0_ae) || (auto9387ADE0_ai < 0 && lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 >= auto9387ADE0_ae) ) ; lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80 += auto9387ADE0_ai ) {
                if ((PlayerType(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerTypeUser) && (PlayerStatus(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80]) == c_playerStatusActive) && (gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80] != EventPlayer())) {
                    PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], c_playerPropMinerals, c_playerPropOperAdd, gv_AllyGiveMoney[EventPlayer()]);
                    PlayerModifyPropertyInt(gv_PlayerBayul[lv_eC84A4ECA095ED948CEBA088EC9DB4EC96B4EBB380EC88982ED8C80], c_playerPropVespene, c_playerPropOperAdd, 10);
                }

            }
            if ((gv_PlayerOutSurrenderPossible[1] == false)) {
                gv_PlayerOutSurrenderPossible[1] = true;
                gv_SurrenderPossibleBoolean[1] = true;
                UISetGameMenuItemVisible(GameAttributePlayersForTeam(2), c_gameMenuDialogGenericButton1, true);
                if ((gv_PlayerOutSurrenderPossible[2] == false)) {
                    gv_PlayerOutSurrenderPossible[2] = true;
                    TriggerEnable(gt_TrSurrenderSystemStartBtn, true);
                    TriggerEnable(gt_TrSurrenderOkTeam1, true);
                    TriggerEnable(gt_TrSurrenderOkTeam2, true);
                    TriggerEnable(gt_TrSurrenderNoTeam1, true);
                    TriggerEnable(gt_TrSurrenderNoTeam2, true);
                }

            }

        }

    }
    if ((gv_BeforeStartCounterDialogNum > 0)) {
        DialogControlSetVisible(gv_TeamSelectDialogPlayerHeroImage[EventPlayer()], PlayerGroupAll(), false);
        DialogControlSetVisible(gv_TeamSelectDialogPlayerBorder[EventPlayer()], PlayerGroupAll(), false);
        DialogControlSetVisible(gv_TeamSelectDialogPlayerSpellImage1[EventPlayer()], PlayerGroupAll(), false);
        DialogControlSetVisible(gv_TeamSelectDialogPlayerSpellImage2[EventPlayer()], PlayerGroupAll(), false);
        DialogControlSetVisible(gv_TeamSelectDialogPlayerName[EventPlayer()], PlayerGroupAll(), false);
        gv_SelectedCharNum[EventPlayer()] = 0;
        if ((gv_ReadyBoolean > 0)) {
            gv_ReadyBoolean -= 1;
        }

        gf_HrHeroTeamSelectSave2();
    }
    else {
        if ((gv_BeforeStartCounterDialogNum == 0)) {
            DialogControlSetVisible(gv_ScoreDialogName[EventPlayer()], PlayerGroupAll(), false);
            DialogControlSetVisible(gv_ScoreDialogHeroImage[EventPlayer()], PlayerGroupAll(), false);
            DialogControlSetVisible(gv_ScoreDialogLevel[EventPlayer()], PlayerGroupAll(), false);
            DialogControlSetVisible(gv_ScoreDialogSpell[EventPlayer()][0], PlayerGroupAll(), false);
            DialogControlSetVisible(gv_ScoreDialogSpell[EventPlayer()][1], PlayerGroupAll(), false);
            DialogControlSetVisible(gv_ScoreDialogTotalScore[EventPlayer()], PlayerGroupAll(), false);
            DialogControlSetVisible(gv_ScoreDialogFarming[EventPlayer()], PlayerGroupAll(), false);
            DialogControlSetVisible(gv_ScoreDialogReviveTime[EventPlayer()], PlayerGroupAll(), false);
            UnitRemove(gv_PlayerHero[EventPlayer()]);
        }

    }
    if (((PlayerStatus(gv_PlayerBayul[1]) != c_playerStatusActive) && (PlayerStatus(gv_PlayerBayul[2]) != c_playerStatusActive) && (PlayerStatus(gv_PlayerBayul[3]) != c_playerStatusActive) && (PlayerStatus(gv_PlayerBayul[4]) != c_playerStatusActive)) && (gv_GameEndBoolean == false)) {
        if ((gv_GameStartBoolean == true)) {
            TriggerExecute(gt_TrSurrenderOkTeam1Win, true, false);
            gv_SurrenderPossibleBoolean[0] = false;
            gv_SurrenderPossibleBoolean[1] = false;
        }
        else {
            if ((gv_GameStartBoolean == false)) {
                gf_HrDrawGame();
                gv_SurrenderPossibleBoolean[0] = false;
                gv_SurrenderPossibleBoolean[1] = false;
            }

        }
    }
    else {
        if (((PlayerStatus(gv_PlayerBayul[5]) != c_playerStatusActive) && (PlayerStatus(gv_PlayerBayul[6]) != c_playerStatusActive) && (PlayerStatus(gv_PlayerBayul[7]) != c_playerStatusActive) && (PlayerStatus(gv_PlayerBayul[8]) != c_playerStatusActive)) && (gv_GameEndBoolean == false)) {
            if ((gv_GameStartBoolean == true)) {
                TriggerExecute(gt_TrSurrenderOkTeam2Win, true, false);
                gv_SurrenderPossibleBoolean[0] = false;
                gv_SurrenderPossibleBoolean[1] = false;
            }
            else {
                if ((gv_GameStartBoolean == false)) {
                    gf_HrDrawGame();
                    gv_SurrenderPossibleBoolean[0] = false;
                    gv_SurrenderPossibleBoolean[1] = false;
                }

            }
        }

    }
    if ((PlayerGroupCount(gv_AllPlayerGroup) == 1)) {
        TriggerEnable(gt_TrSingleCheetMoney, true);
        TriggerEnable(gt_TrSingleCheetLevel, true);
        TriggerEnable(gt_TrSingleCheetTestUnit, true);
        TriggerEnable(gt_TrSingleCheetDPup, true);
        TriggerEnable(gt_TrSingleCheetDPdown, true);
        TriggerEnable(gt_TrSingleCheetRPup, true);
        TriggerEnable(gt_TrSingleCheetRPdown, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TrPlayerOut_Init () {
    gt_TrPlayerOut = TriggerCreate("gt_TrPlayerOut_Func");
    TriggerAddEventPlayerLeft(gt_TrPlayerOut, c_playerAny, c_gameResultUndecided);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_TrStartGame_Init();
    gt_Tr1FullscreenSetting_Init();
    gt_Tr2GameSetting_Init();
    gt_Tr3PlayerSetting_Init();
    gt_Tr5AllDialogInit_Init();
    gt_Tr6PlayerDialogAddorView_Init();
    gt_Tr8VoteScreenView_Init();
    gt_TrCharSelectDraft_Init();
    gt_TrCharSelectBlind_Init();
    gt_TrCharSelectPageNext_Init();
    gt_TrCharSelect_Init();
    gt_TrCharSelectRandom_Init();
    gt_TrDraftSelectRandomRefreash1_Init();
    gt_TrTeamSelectDialogHeroSwap1_Init();
    gt_TrTeamSelectDialogHeroSwap2_Init();
    gt_TrTeamSelectDialogHeroSwap3_Init();
    gt_TrTeamSelectDialogHeroSwap4_Init();
    gt_TrTeamSelectDialogHeroSwap5_Init();
    gt_TrTeamSelectDialogHeroSwap6_Init();
    gt_TrTeamSelectDialogHeroSwap7_Init();
    gt_TrTeamSelectDialogHeroSwap8_Init();
    gt_TrTeamSelectDialogHeroSwapSuggestOkTeam1_Init();
    gt_TrTeamSelectDialogHeroSwapSuggestNoTeam1_Init();
    gt_TrTeamSelectDialogHeroSwapSuggestOkTeam2_Init();
    gt_TrTeamSelectDialogHeroSwapSuggestNoTeam2_Init();
    gt_TrSpellSelect1_Init();
    gt_TrSpellSelect2_Init();
    gt_TrGameModeSelect_Init();
    gt_TrReadyOkSelect_Init();
    gt_TrBeforeSpellRandomSelect_Init();
    gt_TrPlayersAllCreate_Init();
    gt_TrRankDialogView_Init();
    gt_TrGameStartCounter_Init();
    gt_EC8AA4ED8E98EC9DB4EC8AA4EBB094EC9881EC9B85EC8B9CECA090_Init();
    gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880_Init();
    gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADED86A0EAB880EBB284ED8ABC_Init();
    gt_EC9881EC9B85ED95ADEC8381ED81B4EBA6ADEC9E91EB8F99_Init();
    gt_TrHelpText_Init();
    gt_TrViewHandler_Init();
    gt_TrSingleCheetMoney_Init();
    gt_TrSingleCheetLevel_Init();
    gt_TrSingleCheetTestUnit_Init();
    gt_TrSingleCheetDPup_Init();
    gt_TrSingleCheetDPdown_Init();
    gt_TrSingleCheetRPup_Init();
    gt_TrSingleCheetRPdown_Init();
    gt_Trgametipbtn_Init();
    gt_TrMinionMake_Init();
    gt_TrHeroLevelUp_Init();
    gt_TrSkillLearnBtnClick_Init();
    gt_TrSkillLearnHotKey1_Init();
    gt_TrSkillLearnHotKey2_Init();
    gt_TrSkillLearnHotKey3_Init();
    gt_TrSkillLearnHotKey4_Init();
    gt_TrStatDialogPageNext_Init();
    gt_TrStatDialogPageNextHotKey_Init();
    gt_TrStatDialogStatIncrease_Init();
    gt_TrStatDialogStatIncreaseHotKeyZ_Init();
    gt_TrStatDialogStatIncreaseHotKeyX_Init();
    gt_TrStatDialogStatIncreaseHotKeyC_Init();
    gt_TrStatDialogStatIncreaseHotKeyV_Init();
    gt_TrStatDialogStatIncreaseHotKeyB_Init();
    gt_TrStatDialogStatIncreaseHotKeyN_Init();
    gt_TrHealingPosionUseComplete_Init();
    gt_TrManaPosionUseComplete_Init();
    gt_TrWardUseComplete_Init();
    gt_TrWardUseComplete2_Init();
    gt_TrUnitBoodeSet_Init();
    gt_TrTextTailUseCritical_Init();
    gt_TrTextTailUseHyepi_Init();
    gt_TrSpellTeleportUse_Init();
    gt_TrPortalUse_Init();
    gt_TrMissileOutDestroy_Init();
    gt_TrTextTailUseHero5Skill4_Init();
    gt_TrTextTailUseHero9AttackImpact_Init();
    gt_TrHero10Skill4On_Init();
    gt_TrHero10Skill4Off_Init();
    gt_TrHero15Skill4Use_Init();
    gt_TrHero19Death_Init();
    gt_TrSingleCheetRPdown2_Init();
    gt_TrHero32Skill2Up_Init();
    gt_TrHero32Skill4On_Init();
    gt_TrHero32Skill4Off_Init();
    gt_TrHero39Skill4On_Init();
    gt_TrHero59Skill1Use_Init();
    gt_TrHero62Skill3Start_Init();
    gt_TrHero62Skill3On_Init();
    gt_TrHero62Skill3End_Init();
    gt_TrHero66PassiveOn_Init();
    gt_TrHero66PassiveOn2_Init();
    gt_TrScoreDialogBtnOpen_Init();
    gt_TrScoreDialogHotKeyOpen_Init();
    gt_TrMinionNotStop_Init();
    gt_TrMonsterMake1_Init();
    gt_TrMonsterMake2_Init();
    gt_TrMonsterMake3_Init();
    gt_TrMonsterMake4_Init();
    gt_TrMonsterMake5_Init();
    gt_TrMonsterBuffPickUp_Init();
    gt_TrMonsterBuffEnd1_Init();
    gt_TrMonsterBuffEnd2_Init();
    gt_TrMonsterBuffEnd3_Init();
    gt_TrMonsterAttackBird1_Init();
    gt_TrMonsterAttackBird2_Init();
    gt_TrMonsterBackBird1_Init();
    gt_TrMonsterBackBird2_Init();
    gt_TrMonsterAttackDog1_Init();
    gt_TrMonsterAttackDog2_Init();
    gt_TrMonsterBackDog1_Init();
    gt_TrMonsterBackDog2_Init();
    gt_TrMonsterAttackCow1_Init();
    gt_TrMonsterAttackCow2_Init();
    gt_TrMonsterBackCow1_Init();
    gt_TrMonsterBackCow2_Init();
    gt_TrMonsterAttackGalic1_Init();
    gt_TrMonsterAttackGalic2_Init();
    gt_TrMonsterBackGalic1_Init();
    gt_TrMonsterBackGalic2_Init();
    gt_TrMonsterAttackScolpion1_Init();
    gt_TrMonsterAttackScolpion2_Init();
    gt_TrMonsterBackScolpion1_Init();
    gt_TrMonsterBackScolpion2_Init();
    gt_TrMonsterAttackIceBug1_Init();
    gt_TrMonsterAttackIceBug2_Init();
    gt_TrMonsterAttackIceBug3_Init();
    gt_TrMonsterAttackIceBug4_Init();
    gt_TrMonsterBackIceBug1_Init();
    gt_TrMonsterBackIceBug2_Init();
    gt_TrMonsterBackIceBug3_Init();
    gt_TrMonsterBackIceBug4_Init();
    gt_TrMonsterAttackBoss1_Init();
    gt_TrMonsterAttackBoss2_Init();
    gt_TrMonsterBackBoss1_Init();
    gt_TrMonsterBackBoss2_Init();
    gt_TrMonsterRegenTimerStart_Init();
    gt_TrMonsterBirdRegen_Init();
    gt_TrMonsterDogRegen_Init();
    gt_TrMonsterCowRegen_Init();
    gt_TrMonsterGalicRegen_Init();
    gt_TrMonsterScolpionRegen_Init();
    gt_TrMonsterIceBugRegen_Init();
    gt_TrMonsterIceBossRegen_Init();
    gt_TrBuildingDestroyMoojuck_Init();
    gt_TrSinhoBuildingReviveTimerStart_Init();
    gt_TrSinhoBuildingRevive_Init();
    gt_TrHeroDeath_Init();
    gt_TrHeroReviveStand_Init();
    gt_TrNexusDestroyTeam1_Init();
    gt_TrNexusDestroyTeam2_Init();
    gt_TrSurrenderSignOk_Init();
    gt_TrSurrenderReTimer_Init();
    gt_TrSurrenderSystemStart_Init();
    gt_TrSurrenderSystemStartBtn_Init();
    gt_TrSurrenderOkTeam1_Init();
    gt_TrSurrenderOkTeam2_Init();
    gt_TrSurrenderNoTeam1_Init();
    gt_TrSurrenderNoTeam2_Init();
    gt_TrSurrenderOkTeam1Win_Init();
    gt_TrSurrenderOkTeam2Win_Init();
    gt_TrPlayerOut_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
    InitGameParameters();
}
